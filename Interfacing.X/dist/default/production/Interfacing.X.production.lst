

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 26 17:13:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 17/10/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4620 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   0018A0                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _led1
    88   0018A0  02                 	db	2
    89   0018A1  00                 	db	0
    90   0018A2  00                 	db	0
    91                           
    92                           	psect	idataBANK0
    93   001818                     __pidataBANK0:
    94                           	callstack 0
    95                           
    96                           ;initializer for _port_registers
    97   001818  80                 	db	128
    98   001819  0F                 	db	15
    99   00181A  81                 	db	129
   100   00181B  0F                 	db	15
   101   00181C  82                 	db	130
   102   00181D  0F                 	db	15
   103   00181E  83                 	db	131
   104   00181F  0F                 	db	15
   105   001820  84                 	db	132
   106   001821  0F                 	db	15
   107                           
   108                           ;initializer for _lat_registers
   109   001822  89                 	db	137
   110   001823  0F                 	db	15
   111   001824  8A                 	db	138
   112   001825  0F                 	db	15
   113   001826  8B                 	db	139
   114   001827  0F                 	db	15
   115   001828  8C                 	db	140
   116   001829  0F                 	db	15
   117   00182A  8D                 	db	141
   118   00182B  0F                 	db	15
   119                           
   120                           ;initializer for _tris_registers
   121   00182C  92                 	db	146
   122   00182D  0F                 	db	15
   123   00182E  93                 	db	147
   124   00182F  0F                 	db	15
   125   001830  94                 	db	148
   126   001831  0F                 	db	15
   127   001832  95                 	db	149
   128   001833  0F                 	db	15
   129   001834  96                 	db	150
   130   001835  0F                 	db	15
   131                           
   132                           ;initializer for _timer0
   133   001836  5A                 	db	low _ADC_Interrupt_function
   134   001837  18                 	db	high _ADC_Interrupt_function
   135   001838  00                 	db	0
   136   001839  02                 	db	2
   137   00183A  00                 	db	0
   138   00183B  00                 	db	0
   139   00183C  01                 	db	1
   140   00183D  01                 	db	1
   141   00183E  0BDC               	dw	3036
   142                           
   143                           	psect	smallconst
   144   001000                     __psmallconst:
   145                           	callstack 0
   146   001000  00                 	db	0
   147   001001                     _keypad_sampels:
   148                           	callstack 0
   149   001001  37                 	db	55
   150   001002  38                 	db	56
   151   001003  39                 	db	57
   152   001004  2F                 	db	47
   153   001005  34                 	db	52
   154   001006  35                 	db	53
   155   001007  36                 	db	54
   156   001008  2A                 	db	42
   157   001009  31                 	db	49
   158   00100A  32                 	db	50
   159   00100B  33                 	db	51
   160   00100C  2D                 	db	45
   161   00100D  23                 	db	35
   162   00100E  30                 	db	48
   163   00100F  3D                 	db	61
   164   001010  2B                 	db	43
   165   001011                     __end_of_keypad_sampels:
   166                           	callstack 0
   167   000000                     _TMR0L	set	4054
   168   000000                     _TMR0H	set	4055
   169   000000                     _INTCON2bits	set	4081
   170   000000                     _EECON2	set	4007
   171   000000                     _ADCON1bits	set	4033
   172   000000                     _ADRESL	set	4035
   173   000000                     _ADRESH	set	4036
   174   000000                     _TRISD	set	3989
   175   000000                     _TRISC	set	3988
   176   000000                     _TRISB	set	3987
   177   000000                     _TRISE	set	3990
   178   001011                     STR_1:
   179   001011  25                 	db	37
   180   001012  69                 	db	105	;'i'
   181   001013  00                 	db	0
   182   001014  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           	psect	nvCOMRAM
   185   00006C                     __pnvCOMRAM:
   186                           	callstack 0
   187   00006C                     _ret:
   188                           	callstack 0
   189   00006C                     	ds	1
   190   000000                     _PORTBbits	set	3969
   191   000000                     _PIE1bits	set	3997
   192   000000                     _ADCON2bits	set	4032
   193   000000                     _ADCON0bits	set	4034
   194   000000                     _PORTE	set	3972
   195   000000                     _PORTD	set	3971
   196   000000                     _PORTC	set	3970
   197   000000                     _PORTB	set	3969
   198   000000                     _PORTA	set	3968
   199   000000                     _LATA	set	3977
   200   000000                     _TRISA	set	3986
   201   000000                     _EECON1bits	set	4006
   202   000000                     _EEDATA	set	4008
   203   000000                     _EEADR	set	4009
   204   000000                     _EEADRH	set	4010
   205   000000                     _PIR1bits	set	3998
   206   000000                     _T0CONbits	set	4053
   207   000000                     _INTCON3bits	set	4080
   208   000000                     _INTCONbits	set	4082
   209   000000                     _LATE	set	3981
   210   000000                     _LATD	set	3980
   211   000000                     _LATC	set	3979
   212   000000                     _LATB	set	3978
   213                           
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217   0014EC                     __pcinit:
   218                           	callstack 0
   219   0014EC                     start_initialization:
   220                           	callstack 0
   221   0014EC                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to BANK0 (40 bytes)
   225                           ; load TBLPTR registers with __pidataBANK0
   226   0014EC  0E18               	movlw	low __pidataBANK0
   227   0014EE  6EF6               	movwf	tblptrl,c
   228   0014F0  0E18               	movlw	high __pidataBANK0
   229   0014F2  6EF7               	movwf	tblptrh,c
   230   0014F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   231   0014F6  6EF8               	movwf	tblptru,c
   232   0014F8  EE00  F080         	lfsr	0,__pdataBANK0
   233   0014FC  EE10 F028          	lfsr	1,40
   234   001500                     copy_data0:
   235   001500  0009               	tblrd		*+
   236   001502  CFF5 FFEE          	movff	tablat,postinc0
   237   001506  50E5               	movf	postdec1,w,c
   238   001508  50E1               	movf	fsr1l,w,c
   239   00150A  E1FA               	bnz	copy_data0
   240                           
   241                           ; Initialize objects allocated to COMRAM (3 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243   00150C  0EA0               	movlw	low __pidataCOMRAM
   244   00150E  6EF6               	movwf	tblptrl,c
   245   001510  0E18               	movlw	high __pidataCOMRAM
   246   001512  6EF7               	movwf	tblptrh,c
   247   001514  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   248   001516  6EF8               	movwf	tblptru,c
   249   001518  0009               	tblrd		*+	;fetch initializer
   250   00151A  CFF5 F069          	movff	tablat,__pdataCOMRAM
   251   00151E  0009               	tblrd		*+	;fetch initializer
   252   001520  CFF5 F06A          	movff	tablat,__pdataCOMRAM+1
   253   001524  0009               	tblrd		*+	;fetch initializer
   254   001526  CFF5 F06B          	movff	tablat,__pdataCOMRAM+2
   255                           
   256                           ; Clear objects allocated to BANK0 (21 bytes)
   257   00152A  EE00  F0A8         	lfsr	0,__pbssBANK0
   258   00152E  0E15               	movlw	21
   259   001530                     clear_0:
   260   001530  6AEE               	clrf	postinc0,c
   261   001532  06E8               	decf	wreg,f,c
   262   001534  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to COMRAM (86 bytes)
   265   001536  EE00  F001         	lfsr	0,__pbssCOMRAM
   266   00153A  0E56               	movlw	86
   267   00153C                     clear_1:
   268   00153C  6AEE               	clrf	postinc0,c
   269   00153E  06E8               	decf	wreg,f,c
   270   001540  E1FD               	bnz	clear_1
   271   001542                     end_of_initialization:
   272                           	callstack 0
   273   001542                     __end_of__initialization:
   274                           	callstack 0
   275   001542  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276   001544  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277   001546  0100               	movlb	0
   278   001548  EF35  F00C         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281   000001                     __pbssCOMRAM:
   282                           	callstack 0
   283   000001                     ecu_relay_toggle@F3076:
   284                           	callstack 0
   285   000001                     	ds	4
   286   000005                     ecu_relay_turn_off@F3071:
   287                           	callstack 0
   288   000005                     	ds	4
   289   000009                     ecu_relay_turn_on@F3066:
   290                           	callstack 0
   291   000009                     	ds	4
   292   00000D                     ecu_relay_initializ@F3061:
   293                           	callstack 0
   294   00000D                     	ds	4
   295   000011                     ecu_led_toggle@F3076:
   296                           	callstack 0
   297   000011                     	ds	4
   298   000015                     ecu_led_turn_off@F3071:
   299                           	callstack 0
   300   000015                     	ds	4
   301   000019                     ecu_led_turn_on@F3066:
   302                           	callstack 0
   303   000019                     	ds	4
   304   00001D                     ecu_led_initializ@F3061:
   305                           	callstack 0
   306   00001D                     	ds	4
   307   000021                     ecu_dc_motor_stop@F3087:
   308                           	callstack 0
   309   000021                     	ds	4
   310   000025                     ecu_dc_motor_stop@F3085:
   311                           	callstack 0
   312   000025                     	ds	4
   313   000029                     ecu_dc_motor_move_left@F3080:
   314                           	callstack 0
   315   000029                     	ds	4
   316   00002D                     ecu_dc_motor_move_left@F3078:
   317                           	callstack 0
   318   00002D                     	ds	4
   319   000031                     ecu_dc_motor_move_right@F3073:
   320                           	callstack 0
   321   000031                     	ds	4
   322   000035                     ecu_dc_motor_move_right@F3071:
   323                           	callstack 0
   324   000035                     	ds	4
   325   000039                     ecu_dc_motor_initializ@F3066:
   326                           	callstack 0
   327   000039                     	ds	4
   328   00003D                     ecu_dc_motor_initializ@F3064:
   329                           	callstack 0
   330   00003D                     	ds	4
   331   000041                     _flag:
   332                           	callstack 0
   333   000041                     	ds	2
   334   000043                     _preloaded_value:
   335                           	callstack 0
   336   000043                     	ds	2
   337   000045                     _TMR_Interrupt_Handler:
   338                           	callstack 0
   339   000045                     	ds	2
   340   000047                     _RB7_InterruptHandler:
   341                           	callstack 0
   342   000047                     	ds	2
   343   000049                     _RB6_InterruptHandler:
   344                           	callstack 0
   345   000049                     	ds	2
   346   00004B                     _RB5_InterruptHandler:
   347                           	callstack 0
   348   00004B                     	ds	2
   349   00004D                     _RB4_InterruptHandler:
   350                           	callstack 0
   351   00004D                     	ds	2
   352   00004F                     _INT2_InterruptHandler:
   353                           	callstack 0
   354   00004F                     	ds	2
   355   000051                     _INT1_InterruptHandler:
   356                           	callstack 0
   357   000051                     	ds	2
   358   000053                     _INT0_InterruptHandler:
   359                           	callstack 0
   360   000053                     	ds	2
   361   000055                     _ADC_InterruptHandler:
   362                           	callstack 0
   363   000055                     	ds	2
   364                           
   365                           	psect	dataCOMRAM
   366   000069                     __pdataCOMRAM:
   367                           	callstack 0
   368   000069                     _led1:
   369                           	callstack 0
   370   000069                     	ds	3
   371                           
   372                           	psect	bssBANK0
   373   0000A8                     __pbssBANK0:
   374                           	callstack 0
   375   0000A8                     	ds	11
   376   0000B3                     	ds	6
   377   0000B9                     	ds	4
   378                           
   379                           	psect	dataBANK0
   380   000080                     __pdataBANK0:
   381                           	callstack 0
   382   000080                     _port_registers:
   383                           	callstack 0
   384   000080                     	ds	10
   385   00008A                     _lat_registers:
   386                           	callstack 0
   387   00008A                     	ds	10
   388   000094                     _tris_registers:
   389                           	callstack 0
   390   000094                     	ds	10
   391   00009E                     _timer0:
   392                           	callstack 0
   393   00009E                     	ds	10
   394                           
   395                           	psect	cstackBANK0
   396   0000BD                     __pcstackBANK0:
   397                           	callstack 0
   398   0000BD                     gpio_pin_direction_init@_pin_config:
   399                           	callstack 0
   400   0000BD                     gpio_pin_write_logic@_pin_config:
   401                           	callstack 0
   402   0000BD                     Timer0_Prescaler_config@timer0_confg:
   403                           	callstack 0
   404   0000BD                     Timer0_Select_Edge@timer0_confg:
   405                           	callstack 0
   406   0000BD                     Timer0_Register_Size@timer0_confg:
   407                           	callstack 0
   408   0000BD                     Timer0_Interrupt_init@timer0_confg:
   409                           	callstack 0
   410   0000BD                     Timer0_preloaded_value@timer0_confg:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x0
   414   0000BD                     	ds	1
   415   0000BE                     ??_gpio_pin_direction_init:
   416   0000BE                     ??_Timer0_Prescaler_config:
   417   0000BE                     ??_Timer0_Register_Size:
   418   0000BE                     ??_Timer0_preloaded_value:
   419   0000BE                     ??_Timer0_Select_Edge:
   420   0000BE                     gpio_pin_write_logic@logic:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x1
   424   0000BE                     	ds	1
   425   0000BF                     ??_gpio_pin_write_logic:
   426                           
   427                           ; 1 bytes @ 0x2
   428   0000BF                     	ds	1
   429   0000C0                     Timer0_Mode@timer0_confg:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x3
   433   0000C0                     	ds	1
   434   0000C1                     ??_Timer0_Mode:
   435                           
   436                           ; 1 bytes @ 0x4
   437   0000C1                     	ds	2
   438   0000C3                     gpio_pin_direction_init@ret:
   439                           	callstack 0
   440   0000C3                     Timer0_Init@timer0_confg:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x6
   444   0000C3                     	ds	1
   445   0000C4                     gpio_pin_write_logic@ret:
   446                           	callstack 0
   447   0000C4                     Timer0_Init@ret:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x7
   451   0000C4                     	ds	1
   452   0000C5                     gpio_pin_Initialization@_pin_config:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x8
   456   0000C5                     	ds	1
   457   0000C6                     
   458                           ; 1 bytes @ 0x9
   459   0000C6                     	ds	1
   460   0000C7                     gpio_pin_Initialization@ret:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0xA
   464   0000C7                     	ds	1
   465   0000C8                     ecu_led_initializ@_led_config:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0xB
   469   0000C8                     	ds	1
   470   0000C9                     ecu_led_initializ@ret:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xC
   474   0000C9                     	ds	1
   475   0000CA                     ecu_led_initializ@_pin_config:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0xD
   479   0000CA                     	ds	4
   480                           
   481                           	psect	cstackCOMRAM
   482   000057                     __pcstackCOMRAM:
   483                           	callstack 0
   484   000057                     gpio_pin_toggle_logic@_pin_config:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x0
   488   000057                     	ds	1
   489   000058                     ??_gpio_pin_toggle_logic:
   490                           
   491                           ; 1 bytes @ 0x1
   492   000058                     	ds	4
   493   00005C                     gpio_pin_toggle_logic@ret:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x5
   497   00005C                     	ds	1
   498   00005D                     ecu_led_toggle@_led_config:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x6
   502   00005D                     	ds	1
   503   00005E                     ecu_led_toggle@ret:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x7
   507   00005E                     	ds	1
   508   00005F                     ecu_led_toggle@_pin_config:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x8
   512   00005F                     	ds	4
   513   000063                     ??_Interrupt_Manager:
   514                           
   515                           ; 1 bytes @ 0xC
   516   000063                     	ds	6
   517   000069                     
   518                           ; 1 bytes @ 0x12
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 18 in file "application.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  2  1049[None  ] int 
   531 ;; Registers used:
   532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels required when called: 9
   544 ;; This function calls:
   545 ;;		_application_initializ
   546 ;; This function is called by:
   547 ;;		Startup code after reset
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text0
   552   00186A                     __ptext0:
   553                           	callstack 0
   554   00186A                     _main:
   555                           	callstack 22
   556   00186A                     
   557                           ;application.c: 20:     application_initializ();
   558   00186A  EC20  F00C         	call	_application_initializ	;wreg free
   559   00186E                     l1050:
   560   00186E  EF37  F00C         	goto	l1050
   561   001872  EF07  F000         	goto	start
   562   001876                     __end_of_main:
   563                           	callstack 0
   564                           
   565 ;; *************** function _application_initializ *****************
   566 ;; Defined at:
   567 ;;		line 29 in file "application.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; Hardware stack levels required when called: 8
   588 ;; This function calls:
   589 ;;		_Timer0_Init
   590 ;;		_ecu_led_initializ
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text1
   597   001840                     __ptext1:
   598                           	callstack 0
   599   001840                     _application_initializ:
   600                           	callstack 22
   601   001840                     
   602                           ;application.c: 31:     ret = Timer0_Init(&timer0);
   603   001840  0E9E               	movlw	low _timer0
   604   001842  0100               	movlb	0	; () banked
   605   001844  6FC3               	movwf	Timer0_Init@timer0_confg& (0+255),b
   606   001846  ECA6  F00A         	call	_Timer0_Init	;wreg free
   607   00184A  6E6C               	movwf	_ret^0,c
   608   00184C                     
   609                           ;application.c: 32:     ret = ecu_led_initializ(&led1);
   610   00184C  0E69               	movlw	low _led1
   611   00184E  0100               	movlb	0	; () banked
   612   001850  6FC8               	movwf	ecu_led_initializ@_led_config& (0+255),b
   613   001852  EC44  F00A         	call	_ecu_led_initializ	;wreg free
   614   001856  6E6C               	movwf	_ret^0,c
   615   001858  0012               	return		;funcret
   616   00185A                     __end_of_application_initializ:
   617                           	callstack 0
   618                           
   619 ;; *************** function _ecu_led_initializ *****************
   620 ;; Defined at:
   621 ;;		line 14 in file "ECU_layer/led/ecu_led.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  _led_config     1   11[BANK0 ] PTR const struct .
   624 ;;		 -> led1(3), 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  _pin_config     4   13[BANK0 ] struct .
   627 ;;  ret             1   12[BANK0 ] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      unsigned char 
   630 ;; Registers used:
   631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        6 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 7
   644 ;; This function calls:
   645 ;;		_gpio_pin_Initialization
   646 ;; This function is called by:
   647 ;;		_application_initializ
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text2
   652   001488                     __ptext2:
   653                           	callstack 0
   654   001488                     _ecu_led_initializ:
   655                           	callstack 22
   656   001488                     
   657                           ;ECU_layer/led/ecu_led.c: 18:     if (((void*)0) == _led_config) {
   658   001488  0100               	movlb	0	; () banked
   659   00148A  51C8               	movf	ecu_led_initializ@_led_config& (0+255),w,b
   660   00148C  A4D8               	btfss	status,2,c
   661   00148E  EF4B  F00A         	goto	u3431
   662   001492  EF4D  F00A         	goto	u3430
   663   001496                     u3431:
   664   001496  EF51  F00A         	goto	l321
   665   00149A                     u3430:
   666   00149A                     
   667                           ; BSR set to: 0
   668                           ;ECU_layer/led/ecu_led.c: 19:         ret = (STD_ReturnType)0x00;
   669   00149A  0E00               	movlw	0
   670   00149C  6FC9               	movwf	ecu_led_initializ@ret& (0+255),b
   671                           
   672                           ;ECU_layer/led/ecu_led.c: 20:     } else {
   673   00149E  EF74  F00A         	goto	l5052
   674   0014A2                     l321:
   675                           
   676                           ; BSR set to: 0
   677                           ;ECU_layer/led/ecu_led.c: 21:         pin_config _pin_config ={
   678   0014A2  C01D  F0CA         	movff	ecu_led_initializ@F3061,ecu_led_initializ@_pin_config
   679   0014A6  C01E  F0CB         	movff	ecu_led_initializ@F3061+1,ecu_led_initializ@_pin_config+1
   680   0014AA  C01F  F0CC         	movff	ecu_led_initializ@F3061+2,ecu_led_initializ@_pin_config+2
   681   0014AE  C020  F0CD         	movff	ecu_led_initializ@F3061+3,ecu_led_initializ@_pin_config+3
   682   0014B2                     
   683                           ; BSR set to: 0
   684   0014B2  51C8               	movf	ecu_led_initializ@_led_config& (0+255),w,b
   685   0014B4  6ED9               	movwf	fsr2l,c
   686   0014B6  6ADA               	clrf	fsr2h,c
   687   0014B8  50DF               	movf	indf2,w,c
   688   0014BA  6FCA               	movwf	ecu_led_initializ@_pin_config& (0+255),b
   689   0014BC                     
   690                           ; BSR set to: 0
   691   0014BC  51C8               	movf	ecu_led_initializ@_led_config& (0+255),w,b
   692   0014BE  6ED9               	movwf	fsr2l,c
   693   0014C0  6ADA               	clrf	fsr2h,c
   694   0014C2  0E01               	movlw	1
   695   0014C4  26D9               	addwf	fsr2l,f,c
   696   0014C6  50DF               	movf	indf2,w,c
   697   0014C8  6FCB               	movwf	(ecu_led_initializ@_pin_config+1)& (0+255),b
   698   0014CA                     
   699                           ; BSR set to: 0
   700   0014CA  0E00               	movlw	0
   701   0014CC  6FCC               	movwf	(ecu_led_initializ@_pin_config+2)& (0+255),b
   702   0014CE                     
   703                           ; BSR set to: 0
   704   0014CE  51C8               	movf	ecu_led_initializ@_led_config& (0+255),w,b
   705   0014D0  6ED9               	movwf	fsr2l,c
   706   0014D2  6ADA               	clrf	fsr2h,c
   707   0014D4  0E02               	movlw	2
   708   0014D6  26D9               	addwf	fsr2l,f,c
   709   0014D8  50DF               	movf	indf2,w,c
   710   0014DA  6FCD               	movwf	(ecu_led_initializ@_pin_config+3)& (0+255),b
   711   0014DC                     
   712                           ; BSR set to: 0
   713                           ;ECU_layer/led/ecu_led.c: 28:         ret = gpio_pin_Initialization(&_pin_config);
   714   0014DC  0ECA               	movlw	low ecu_led_initializ@_pin_config
   715   0014DE  6FC5               	movwf	gpio_pin_Initialization@_pin_config& (0+255),b
   716   0014E0  EC06  F00B         	call	_gpio_pin_Initialization	;wreg free
   717   0014E4  0100               	movlb	0	; () banked
   718   0014E6  6FC9               	movwf	ecu_led_initializ@ret& (0+255),b
   719   0014E8                     l5052:
   720                           
   721                           ; BSR set to: 0
   722                           ;ECU_layer/led/ecu_led.c: 31:     return ret;
   723   0014E8  51C9               	movf	ecu_led_initializ@ret& (0+255),w,b
   724   0014EA                     
   725                           ; BSR set to: 0
   726   0014EA  0012               	return		;funcret
   727   0014EC                     __end_of_ecu_led_initializ:
   728                           	callstack 0
   729                           
   730 ;; *************** function _gpio_pin_Initialization *****************
   731 ;; Defined at:
   732 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  _pin_config     1    8[BANK0 ] PTR const struct .
   735 ;;		 -> ecu_relay_initializ@relay_init(4), ecu_led_initializ@_pin_config(4), ecu_dc_motor_initializ@dc_motor_pin_2(4), e
      +cu_dc_motor_initializ@dc_motor_pin_1(4), 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  ret             1   10[BANK0 ] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      unsigned char 
   740 ;; Registers used:
   741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   747 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 6
   754 ;; This function calls:
   755 ;;		_gpio_pin_direction_init
   756 ;;		_gpio_pin_write_logic
   757 ;; This function is called by:
   758 ;;		_ecu_led_initializ
   759 ;;		_seg_initialization
   760 ;;		_ecu_dc_motor_initializ
   761 ;;		_keypad_initialize
   762 ;;		_lcd_4bit_init
   763 ;;		_lcd_8bit_init
   764 ;;		_ecu_relay_initializ
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text3
   769   00160C                     __ptext3:
   770                           	callstack 0
   771   00160C                     _gpio_pin_Initialization:
   772                           	callstack 22
   773   00160C                     
   774                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
   775   00160C  0100               	movlb	0	; () banked
   776   00160E  51C5               	movf	gpio_pin_Initialization@_pin_config& (0+255),w,b
   777   001610  B4D8               	btfsc	status,2,c
   778   001612  EF0D  F00B         	goto	u3321
   779   001616  EF0F  F00B         	goto	u3320
   780   00161A                     u3321:
   781   00161A  EF1C  F00B         	goto	l4898
   782   00161E                     u3320:
   783   00161E                     
   784                           ; BSR set to: 0
   785   00161E  51C5               	movf	gpio_pin_Initialization@_pin_config& (0+255),w,b
   786   001620  6ED9               	movwf	fsr2l,c
   787   001622  6ADA               	clrf	fsr2h,c
   788   001624  0E01               	movlw	1
   789   001626  26D9               	addwf	fsr2l,f,c
   790   001628  0E07               	movlw	7
   791   00162A  64DF               	cpfsgt	indf2,c
   792   00162C  EF1A  F00B         	goto	u3331
   793   001630  EF1C  F00B         	goto	u3330
   794   001634                     u3331:
   795   001634  EF20  F00B         	goto	l4900
   796   001638                     u3330:
   797   001638                     l4898:
   798                           
   799                           ; BSR set to: 0
   800                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
   801   001638  0E00               	movlw	0
   802   00163A  6FC7               	movwf	gpio_pin_Initialization@ret& (0+255),b
   803                           
   804                           ;MCAL_layer/GPIO/gpio.c: 154:     }
   805   00163C  EF33  F00B         	goto	l4902
   806   001640                     l4900:
   807                           
   808                           ; BSR set to: 0
   809                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
   810   001640  C0C5  F0BD         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
   811   001644  ECF6  F008         	call	_gpio_pin_direction_init	;wreg free
   812   001648  0100               	movlb	0	; () banked
   813   00164A  6FC7               	movwf	gpio_pin_Initialization@ret& (0+255),b
   814                           
   815                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
   816   00164C  C0C5  F0BD         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
   817   001650  51C5               	movf	gpio_pin_Initialization@_pin_config& (0+255),w,b
   818   001652  6ED9               	movwf	fsr2l,c
   819   001654  6ADA               	clrf	fsr2h,c
   820   001656  0E03               	movlw	3
   821   001658  26D9               	addwf	fsr2l,f,c
   822   00165A  50DF               	movf	indf2,w,c
   823   00165C  6FBE               	movwf	gpio_pin_write_logic@logic& (0+255),b
   824   00165E  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
   825   001662  0100               	movlb	0	; () banked
   826   001664  6FC7               	movwf	gpio_pin_Initialization@ret& (0+255),b
   827   001666                     l4902:
   828                           
   829                           ; BSR set to: 0
   830                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
   831   001666  51C7               	movf	gpio_pin_Initialization@ret& (0+255),w,b
   832   001668                     
   833                           ; BSR set to: 0
   834   001668  0012               	return		;funcret
   835   00166A                     __end_of_gpio_pin_Initialization:
   836                           	callstack 0
   837                           
   838 ;; *************** function _gpio_pin_write_logic *****************
   839 ;; Defined at:
   840 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  _pin_config     1    0[BANK0 ] PTR const struct .
   843 ;;		 -> ecu_relay_turn_off@relay_init(4), ecu_relay_turn_on@relay_init(4), ecu_relay_initializ@relay_init(4), ecu_led_tu
      +rn_off@_pin_config(4), 
   844 ;;		 -> ecu_led_turn_on@_pin_config(4), ecu_led_initializ@_pin_config(4), ecu_dc_motor_stop@dc_motor_pin_2(4), ecu_dc_mo
      +tor_stop@dc_motor_pin_1(4), 
   845 ;;		 -> ecu_dc_motor_move_left@dc_motor_pin_2(4), ecu_dc_motor_move_left@dc_motor_pin_1(4), ecu_dc_motor_move_right@dc_m
      +otor_pin_2(4), ecu_dc_motor_move_right@dc_motor_pin_1(4), 
   846 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(4), ecu_dc_motor_initializ@dc_motor_pin_1(4), 
   847 ;;  logic           1    1[BANK0 ] enum E2981
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  ret             1    7[BANK0 ] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      unsigned char 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        8 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 5
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_gpio_pin_Initialization
   870 ;;		_seg_write_number
   871 ;;		_ecu_dc_motor_move_right
   872 ;;		_ecu_dc_motor_move_left
   873 ;;		_ecu_dc_motor_stop
   874 ;;		_keypad_get_value
   875 ;;		_lcd_4bit_send_command
   876 ;;		_lcd_4bit_send_data
   877 ;;		_lcd_send_4bits
   878 ;;		_lcd_send_4bit_enable_signal
   879 ;;		_lcd_8bit_send_command
   880 ;;		_lcd_8bit_send_data
   881 ;;		_lcd_send_8bit_enable_signal
   882 ;;		_ecu_led_turn_on
   883 ;;		_ecu_led_turn_off
   884 ;;		_ecu_relay_turn_on
   885 ;;		_ecu_relay_turn_off
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text4
   890   0012FE                     __ptext4:
   891                           	callstack 0
   892   0012FE                     _gpio_pin_write_logic:
   893                           	callstack 22
   894   0012FE                     
   895                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
   896   0012FE  0E01               	movlw	1
   897   001300  0100               	movlb	0	; () banked
   898   001302  6FC4               	movwf	gpio_pin_write_logic@ret& (0+255),b
   899                           
   900                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
   901   001304  51BD               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   902   001306  B4D8               	btfsc	status,2,c
   903   001308  EF88  F009         	goto	u3241
   904   00130C  EF8A  F009         	goto	u3240
   905   001310                     u3241:
   906   001310  EF97  F009         	goto	l4844
   907   001314                     u3240:
   908   001314                     
   909                           ; BSR set to: 0
   910   001314  51BD               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   911   001316  6ED9               	movwf	fsr2l,c
   912   001318  6ADA               	clrf	fsr2h,c
   913   00131A  0E01               	movlw	1
   914   00131C  26D9               	addwf	fsr2l,f,c
   915   00131E  0E07               	movlw	7
   916   001320  64DF               	cpfsgt	indf2,c
   917   001322  EF95  F009         	goto	u3251
   918   001326  EF97  F009         	goto	u3250
   919   00132A                     u3251:
   920   00132A  EFEC  F009         	goto	l4852
   921   00132E                     u3250:
   922   00132E                     l4844:
   923                           
   924                           ; BSR set to: 0
   925                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
   926   00132E  0E00               	movlw	0
   927   001330  6FC4               	movwf	gpio_pin_write_logic@ret& (0+255),b
   928                           
   929                           ;MCAL_layer/GPIO/gpio.c: 82:     }
   930   001332  EF01  F00A         	goto	l4854
   931   001336                     l4846:
   932                           
   933                           ; BSR set to: 0
   934                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
   935   001336  51BD               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   936   001338  6ED9               	movwf	fsr2l,c
   937   00133A  6ADA               	clrf	fsr2h,c
   938   00133C  0E01               	movlw	1
   939   00133E  26D9               	addwf	fsr2l,f,c
   940   001340  50DF               	movf	indf2,w,c
   941   001342  6FBF               	movwf	??_gpio_pin_write_logic& (0+255),b
   942   001344  0E01               	movlw	1
   943   001346  6FC0               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
   944   001348  2BBF               	incf	??_gpio_pin_write_logic& (0+255),f,b
   945   00134A  EFA9  F009         	goto	u3264
   946   00134E                     u3265:
   947   00134E  90D8               	bcf	status,0,c
   948   001350  37C0               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
   949   001352                     u3264:
   950   001352  2FBF               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
   951   001354  EFA7  F009         	goto	u3265
   952   001358  0100               	movlb	0	; () banked
   953   00135A  51C0               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
   954   00135C  0AFF               	xorlw	255
   955   00135E  6FC1               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
   956   001360  51BD               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   957   001362  6ED9               	movwf	fsr2l,c
   958   001364  6ADA               	clrf	fsr2h,c
   959   001366  50DF               	movf	indf2,w,c
   960   001368  0D02               	mullw	2
   961   00136A  50F3               	movf	243,w,c
   962   00136C  0F8A               	addlw	low _lat_registers
   963   00136E  6ED9               	movwf	fsr2l,c
   964   001370  6ADA               	clrf	fsr2h,c
   965   001372  CFDE F0C2          	movff	postinc2,??_gpio_pin_write_logic+3
   966   001376  CFDD F0C3          	movff	postdec2,??_gpio_pin_write_logic+4
   967   00137A  C0C2  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   968   00137E  C0C3  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   969   001382  51C1               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
   970   001384  16DF               	andwf	indf2,f,c
   971                           
   972                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
   973   001386  EF01  F00A         	goto	l4854
   974   00138A                     l4848:
   975                           
   976                           ; BSR set to: 0
   977                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
   978   00138A  51BD               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   979   00138C  6ED9               	movwf	fsr2l,c
   980   00138E  6ADA               	clrf	fsr2h,c
   981   001390  0E01               	movlw	1
   982   001392  26D9               	addwf	fsr2l,f,c
   983   001394  50DF               	movf	indf2,w,c
   984   001396  6FBF               	movwf	??_gpio_pin_write_logic& (0+255),b
   985   001398  0E01               	movlw	1
   986   00139A  6FC0               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
   987   00139C  2BBF               	incf	??_gpio_pin_write_logic& (0+255),f,b
   988   00139E  EFD3  F009         	goto	u3274
   989   0013A2                     u3275:
   990   0013A2  90D8               	bcf	status,0,c
   991   0013A4  37C0               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
   992   0013A6                     u3274:
   993   0013A6  2FBF               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
   994   0013A8  EFD1  F009         	goto	u3275
   995   0013AC  0100               	movlb	0	; () banked
   996   0013AE  51BD               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   997   0013B0  6ED9               	movwf	fsr2l,c
   998   0013B2  6ADA               	clrf	fsr2h,c
   999   0013B4  50DF               	movf	indf2,w,c
  1000   0013B6  0D02               	mullw	2
  1001   0013B8  50F3               	movf	243,w,c
  1002   0013BA  0F8A               	addlw	low _lat_registers
  1003   0013BC  6ED9               	movwf	fsr2l,c
  1004   0013BE  6ADA               	clrf	fsr2h,c
  1005   0013C0  CFDE F0C1          	movff	postinc2,??_gpio_pin_write_logic+2
  1006   0013C4  CFDD F0C2          	movff	postdec2,??_gpio_pin_write_logic+3
  1007   0013C8  C0C1  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1008   0013CC  C0C2  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1009   0013D0  51C0               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  1010   0013D2  12DF               	iorwf	indf2,f,c
  1011                           
  1012                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  1013   0013D4  EF01  F00A         	goto	l4854
  1014   0013D8                     l4852:
  1015                           
  1016                           ; BSR set to: 0
  1017   0013D8  51BE               	movf	gpio_pin_write_logic@logic& (0+255),w,b
  1018   0013DA  6FBF               	movwf	??_gpio_pin_write_logic& (0+255),b
  1019   0013DC  6BC0               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  1020                           
  1021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1022                           ; Switch size 1, requested type "simple"
  1023                           ; Number of cases is 1, Range of values is 0 to 0
  1024                           ; switch strategies available:
  1025                           ; Name         Instructions Cycles
  1026                           ; simple_byte            4     3 (average)
  1027                           ;	Chosen strategy is simple_byte
  1028   0013DE  51C0               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  1029   0013E0  0A00               	xorlw	0	; case 0
  1030   0013E2  B4D8               	btfsc	status,2,c
  1031   0013E4  EFF6  F009         	goto	l5944
  1032   0013E8  EF97  F009         	goto	l4844
  1033   0013EC                     l5944:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 2, Range of values is 0 to 1
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            7     4 (average)
  1041                           ;	Chosen strategy is simple_byte
  1042   0013EC  51BF               	movf	??_gpio_pin_write_logic& (0+255),w,b
  1043   0013EE  0A00               	xorlw	0	; case 0
  1044   0013F0  B4D8               	btfsc	status,2,c
  1045   0013F2  EF9B  F009         	goto	l4846
  1046   0013F6  0A01               	xorlw	1	; case 1
  1047   0013F8  B4D8               	btfsc	status,2,c
  1048   0013FA  EFC5  F009         	goto	l4848
  1049   0013FE  EF97  F009         	goto	l4844
  1050   001402                     l4854:
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  1054   001402  51C4               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  1055   001404                     
  1056                           ; BSR set to: 0
  1057   001404  0012               	return		;funcret
  1058   001406                     __end_of_gpio_pin_write_logic:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _gpio_pin_direction_init *****************
  1062 ;; Defined at:
  1063 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  _pin_config     1    0[BANK0 ] PTR const struct .
  1066 ;;		 -> ecu_relay_initializ@relay_init(4), ecu_led_initializ@_pin_config(4), ecu_dc_motor_initializ@dc_motor_pin_2(4), e
      +cu_dc_motor_initializ@dc_motor_pin_1(4), 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  ret             1    6[BANK0 ] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      unsigned char 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        7 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 5
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_gpio_pin_Initialization
  1089 ;;		_ecu_button_init
  1090 ;;		_Interrupt_INTx_Pin_init
  1091 ;;		_Interrupt_RBx_Pin_init
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text5
  1096   0011EC                     __ptext5:
  1097                           	callstack 0
  1098   0011EC                     _gpio_pin_direction_init:
  1099                           	callstack 22
  1100   0011EC                     
  1101                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  1102   0011EC  0E01               	movlw	1
  1103   0011EE  0100               	movlb	0	; () banked
  1104   0011F0  6FC3               	movwf	gpio_pin_direction_init@ret& (0+255),b
  1105                           
  1106                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1107   0011F2  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1108   0011F4  B4D8               	btfsc	status,2,c
  1109   0011F6  EFFF  F008         	goto	u3281
  1110   0011FA  EF01  F009         	goto	u3280
  1111   0011FE                     u3281:
  1112   0011FE  EF0E  F009         	goto	l4866
  1113   001202                     u3280:
  1114   001202                     
  1115                           ; BSR set to: 0
  1116   001202  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1117   001204  6ED9               	movwf	fsr2l,c
  1118   001206  6ADA               	clrf	fsr2h,c
  1119   001208  0E01               	movlw	1
  1120   00120A  26D9               	addwf	fsr2l,f,c
  1121   00120C  0E07               	movlw	7
  1122   00120E  64DF               	cpfsgt	indf2,c
  1123   001210  EF0C  F009         	goto	u3291
  1124   001214  EF0E  F009         	goto	u3290
  1125   001218                     u3291:
  1126   001218  EF63  F009         	goto	l4874
  1127   00121C                     u3290:
  1128   00121C                     l4866:
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  1132   00121C  0E00               	movlw	0
  1133   00121E  6FC3               	movwf	gpio_pin_direction_init@ret& (0+255),b
  1134                           
  1135                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  1136   001220  EF7D  F009         	goto	l4876
  1137   001224                     l4868:
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  1141   001224  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1142   001226  6ED9               	movwf	fsr2l,c
  1143   001228  6ADA               	clrf	fsr2h,c
  1144   00122A  0E01               	movlw	1
  1145   00122C  26D9               	addwf	fsr2l,f,c
  1146   00122E  50DF               	movf	indf2,w,c
  1147   001230  6FBE               	movwf	??_gpio_pin_direction_init& (0+255),b
  1148   001232  0E01               	movlw	1
  1149   001234  6FBF               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  1150   001236  2BBE               	incf	??_gpio_pin_direction_init& (0+255),f,b
  1151   001238  EF20  F009         	goto	u3304
  1152   00123C                     u3305:
  1153   00123C  90D8               	bcf	status,0,c
  1154   00123E  37BF               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  1155   001240                     u3304:
  1156   001240  2FBE               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  1157   001242  EF1E  F009         	goto	u3305
  1158   001246  0100               	movlb	0	; () banked
  1159   001248  51BF               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  1160   00124A  0AFF               	xorlw	255
  1161   00124C  6FC0               	movwf	(??_gpio_pin_direction_init+2)& (0+255),b
  1162   00124E  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1163   001250  6ED9               	movwf	fsr2l,c
  1164   001252  6ADA               	clrf	fsr2h,c
  1165   001254  50DF               	movf	indf2,w,c
  1166   001256  0D02               	mullw	2
  1167   001258  50F3               	movf	243,w,c
  1168   00125A  0F94               	addlw	low _tris_registers
  1169   00125C  6ED9               	movwf	fsr2l,c
  1170   00125E  6ADA               	clrf	fsr2h,c
  1171   001260  CFDE F0C1          	movff	postinc2,??_gpio_pin_direction_init+3
  1172   001264  CFDD F0C2          	movff	postdec2,??_gpio_pin_direction_init+4
  1173   001268  C0C1  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1174   00126C  C0C2  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1175   001270  51C0               	movf	(??_gpio_pin_direction_init+2)& (0+255),w,b
  1176   001272  16DF               	andwf	indf2,f,c
  1177                           
  1178                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  1179   001274  EF7D  F009         	goto	l4876
  1180   001278                     l4870:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  1184   001278  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1185   00127A  6ED9               	movwf	fsr2l,c
  1186   00127C  6ADA               	clrf	fsr2h,c
  1187   00127E  0E01               	movlw	1
  1188   001280  26D9               	addwf	fsr2l,f,c
  1189   001282  50DF               	movf	indf2,w,c
  1190   001284  6FBE               	movwf	??_gpio_pin_direction_init& (0+255),b
  1191   001286  0E01               	movlw	1
  1192   001288  6FBF               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  1193   00128A  2BBE               	incf	??_gpio_pin_direction_init& (0+255),f,b
  1194   00128C  EF4A  F009         	goto	u3314
  1195   001290                     u3315:
  1196   001290  90D8               	bcf	status,0,c
  1197   001292  37BF               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  1198   001294                     u3314:
  1199   001294  2FBE               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  1200   001296  EF48  F009         	goto	u3315
  1201   00129A  0100               	movlb	0	; () banked
  1202   00129C  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1203   00129E  6ED9               	movwf	fsr2l,c
  1204   0012A0  6ADA               	clrf	fsr2h,c
  1205   0012A2  50DF               	movf	indf2,w,c
  1206   0012A4  0D02               	mullw	2
  1207   0012A6  50F3               	movf	243,w,c
  1208   0012A8  0F94               	addlw	low _tris_registers
  1209   0012AA  6ED9               	movwf	fsr2l,c
  1210   0012AC  6ADA               	clrf	fsr2h,c
  1211   0012AE  CFDE F0C0          	movff	postinc2,??_gpio_pin_direction_init+2
  1212   0012B2  CFDD F0C1          	movff	postdec2,??_gpio_pin_direction_init+3
  1213   0012B6  C0C0  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1214   0012BA  C0C1  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1215   0012BE  51BF               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  1216   0012C0  12DF               	iorwf	indf2,f,c
  1217                           
  1218                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  1219   0012C2  EF7D  F009         	goto	l4876
  1220   0012C6                     l4874:
  1221                           
  1222                           ; BSR set to: 0
  1223   0012C6  51BD               	movf	gpio_pin_direction_init@_pin_config& (0+255),w,b
  1224   0012C8  6ED9               	movwf	fsr2l,c
  1225   0012CA  6ADA               	clrf	fsr2h,c
  1226   0012CC  0E02               	movlw	2
  1227   0012CE  26D9               	addwf	fsr2l,f,c
  1228   0012D0  50DF               	movf	indf2,w,c
  1229   0012D2  6FBE               	movwf	??_gpio_pin_direction_init& (0+255),b
  1230   0012D4  6BBF               	clrf	(??_gpio_pin_direction_init+1)& (0+255),b
  1231                           
  1232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1233                           ; Switch size 1, requested type "simple"
  1234                           ; Number of cases is 1, Range of values is 0 to 0
  1235                           ; switch strategies available:
  1236                           ; Name         Instructions Cycles
  1237                           ; simple_byte            4     3 (average)
  1238                           ;	Chosen strategy is simple_byte
  1239   0012D6  51BF               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  1240   0012D8  0A00               	xorlw	0	; case 0
  1241   0012DA  B4D8               	btfsc	status,2,c
  1242   0012DC  EF72  F009         	goto	l5946
  1243   0012E0  EF0E  F009         	goto	l4866
  1244   0012E4                     l5946:
  1245                           
  1246                           ; BSR set to: 0
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 2, Range of values is 0 to 1
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            7     4 (average)
  1252                           ;	Chosen strategy is simple_byte
  1253   0012E4  51BE               	movf	??_gpio_pin_direction_init& (0+255),w,b
  1254   0012E6  0A00               	xorlw	0	; case 0
  1255   0012E8  B4D8               	btfsc	status,2,c
  1256   0012EA  EF12  F009         	goto	l4868
  1257   0012EE  0A01               	xorlw	1	; case 1
  1258   0012F0  B4D8               	btfsc	status,2,c
  1259   0012F2  EF3C  F009         	goto	l4870
  1260   0012F6  EF0E  F009         	goto	l4866
  1261   0012FA                     l4876:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  1265   0012FA  51C3               	movf	gpio_pin_direction_init@ret& (0+255),w,b
  1266   0012FC                     
  1267                           ; BSR set to: 0
  1268   0012FC  0012               	return		;funcret
  1269   0012FE                     __end_of_gpio_pin_direction_init:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _Timer0_Init *****************
  1273 ;; Defined at:
  1274 ;;		line 26 in file "MCAL_layer/Timer0/Timer0.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  timer0_confg    1    6[BANK0 ] PTR const struct .
  1277 ;;		 -> timer0(10), 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  ret             1    7[BANK0 ] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      unsigned char 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1289 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;Total ram usage:        2 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 7
  1296 ;; This function calls:
  1297 ;;		_Timer0_Interrupt_init
  1298 ;;		_Timer0_Mode
  1299 ;;		_Timer0_Prescaler_config
  1300 ;;		_Timer0_Register_Size
  1301 ;;		_Timer0_preloaded_value
  1302 ;; This function is called by:
  1303 ;;		_application_initializ
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text6
  1308   00154C                     __ptext6:
  1309                           	callstack 0
  1310   00154C                     _Timer0_Init:
  1311                           	callstack 22
  1312   00154C                     
  1313                           ;MCAL_layer/Timer0/Timer0.c: 26: STD_ReturnType Timer0_Init(const timer0_t *timer0_confg
      +                          );MCAL_layer/Timer0/Timer0.c: 27: {;MCAL_layer/Timer0/Timer0.c: 28:     STD_ReturnType r
      +                          et = (STD_ReturnType)0x01;
  1314   00154C  0E01               	movlw	1
  1315   00154E  0100               	movlb	0	; () banked
  1316   001550  6FC4               	movwf	Timer0_Init@ret& (0+255),b
  1317                           
  1318                           ;MCAL_layer/Timer0/Timer0.c: 29:     if(((void*)0) == timer0_confg)
  1319   001552  51C3               	movf	Timer0_Init@timer0_confg& (0+255),w,b
  1320   001554  A4D8               	btfss	status,2,c
  1321   001556  EFAF  F00A         	goto	u3441
  1322   00155A  EFB1  F00A         	goto	u3440
  1323   00155E                     u3441:
  1324   00155E  EFB5  F00A         	goto	l966
  1325   001562                     u3440:
  1326   001562                     
  1327                           ; BSR set to: 0
  1328                           ;MCAL_layer/Timer0/Timer0.c: 30:     {;MCAL_layer/Timer0/Timer0.c: 31:         ret = (ST
      +                          D_ReturnType)0x00;
  1329   001562  0E00               	movlw	0
  1330   001564  6FC4               	movwf	Timer0_Init@ret& (0+255),b
  1331                           
  1332                           ;MCAL_layer/Timer0/Timer0.c: 32:     }
  1333   001566  EFD3  F00A         	goto	l5070
  1334   00156A                     l966:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;MCAL_layer/Timer0/Timer0.c: 34:     {;MCAL_layer/Timer0/Timer0.c: 35:         (T0CONbit
      +                          s.TMR0ON = 0);
  1338   00156A  9ED5               	bcf	213,7,c	;volatile
  1339   00156C                     
  1340                           ; BSR set to: 0
  1341                           ;MCAL_layer/Timer0/Timer0.c: 37:         Timer0_Prescaler_config(timer0_confg);
  1342   00156C  C0C3  F0BD         	movff	Timer0_Init@timer0_confg,Timer0_Prescaler_config@timer0_confg
  1343   001570  EC35  F00B         	call	_Timer0_Prescaler_config	;wreg free
  1344                           
  1345                           ;MCAL_layer/Timer0/Timer0.c: 38:         Timer0_Register_Size(timer0_confg);
  1346   001574  C0C3  F0BD         	movff	Timer0_Init@timer0_confg,Timer0_Register_Size@timer0_confg
  1347   001578  EC8B  F00B         	call	_Timer0_Register_Size	;wreg free
  1348                           
  1349                           ;MCAL_layer/Timer0/Timer0.c: 39:         Timer0_Mode(timer0_confg);
  1350   00157C  C0C3  F0C0         	movff	Timer0_Init@timer0_confg,Timer0_Mode@timer0_confg
  1351   001580  EC64  F00B         	call	_Timer0_Mode	;wreg free
  1352   001584                     
  1353                           ;MCAL_layer/Timer0/Timer0.c: 40:         Timer0_Interrupt_init(timer0_confg);
  1354   001584  C0C3  F0BD         	movff	Timer0_Init@timer0_confg,Timer0_Interrupt_init@timer0_confg
  1355   001588  EC3B  F00C         	call	_Timer0_Interrupt_init	;wreg free
  1356   00158C                     
  1357                           ;MCAL_layer/Timer0/Timer0.c: 41:         TMR_Interrupt_Handler = timer0_confg->Timer0_In
      +                          terrupt_Handlar;
  1358   00158C  0100               	movlb	0	; () banked
  1359   00158E  51C3               	movf	Timer0_Init@timer0_confg& (0+255),w,b
  1360   001590  6ED9               	movwf	fsr2l,c
  1361   001592  6ADA               	clrf	fsr2h,c
  1362   001594  CFDE F045          	movff	postinc2,_TMR_Interrupt_Handler
  1363   001598  CFDD F046          	movff	postdec2,_TMR_Interrupt_Handler+1
  1364   00159C                     
  1365                           ; BSR set to: 0
  1366                           ;MCAL_layer/Timer0/Timer0.c: 42:         Timer0_preloaded_value(timer0_confg);
  1367   00159C  C0C3  F0BD         	movff	Timer0_Init@timer0_confg,Timer0_preloaded_value@timer0_confg
  1368   0015A0  ECD1  F00B         	call	_Timer0_preloaded_value	;wreg free
  1369   0015A4                     
  1370                           ;MCAL_layer/Timer0/Timer0.c: 44:         (T0CONbits.TMR0ON = 1);
  1371   0015A4  8ED5               	bsf	213,7,c	;volatile
  1372   0015A6                     l5070:
  1373                           
  1374                           ;MCAL_layer/Timer0/Timer0.c: 47:     return ret;
  1375   0015A6  0100               	movlb	0	; () banked
  1376   0015A8  51C4               	movf	Timer0_Init@ret& (0+255),w,b
  1377   0015AA                     
  1378                           ; BSR set to: 0
  1379   0015AA  0012               	return		;funcret
  1380   0015AC                     __end_of_Timer0_Init:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _Timer0_preloaded_value *****************
  1384 ;; Defined at:
  1385 ;;		line 206 in file "MCAL_layer/Timer0/Timer0.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  timer0_confg    1    0[BANK0 ] PTR const struct .
  1388 ;;		 -> timer0(10), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        3 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 5
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_Timer0_Init
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text7
  1415   0017A2                     __ptext7:
  1416                           	callstack 0
  1417   0017A2                     _Timer0_preloaded_value:
  1418                           	callstack 23
  1419   0017A2                     
  1420                           ;MCAL_layer/Timer0/Timer0.c: 206: static __attribute__((inline)) void Timer0_preloaded_v
      +                          alue(const timer0_t *timer0_confg);MCAL_layer/Timer0/Timer0.c: 207: {;MCAL_layer/Timer0/
      +                          Timer0.c: 208:     TMR0H = ((timer0_confg->preloaded_value) >> 8);
  1421   0017A2  0100               	movlb	0	; () banked
  1422   0017A4  51BD               	movf	Timer0_preloaded_value@timer0_confg& (0+255),w,b
  1423   0017A6  6ED9               	movwf	fsr2l,c
  1424   0017A8  6ADA               	clrf	fsr2h,c
  1425   0017AA  0E08               	movlw	8
  1426   0017AC  26D9               	addwf	fsr2l,f,c
  1427   0017AE  CFDE F0BE          	movff	postinc2,??_Timer0_preloaded_value
  1428   0017B2  CFDD F0BF          	movff	postdec2,??_Timer0_preloaded_value+1
  1429   0017B6  C0BF  F0BE         	movff	??_Timer0_preloaded_value+1,??_Timer0_preloaded_value
  1430   0017BA  6BBF               	clrf	(??_Timer0_preloaded_value+1)& (0+255),b
  1431   0017BC  51BE               	movf	??_Timer0_preloaded_value& (0+255),w,b
  1432   0017BE  6ED7               	movwf	215,c	;volatile
  1433                           
  1434                           ;MCAL_layer/Timer0/Timer0.c: 209:     TMR0L = (uint8)(timer0_confg->preloaded_value);
  1435   0017C0  51BD               	movf	Timer0_preloaded_value@timer0_confg& (0+255),w,b
  1436   0017C2  6ED9               	movwf	fsr2l,c
  1437   0017C4  6ADA               	clrf	fsr2h,c
  1438   0017C6  0E08               	movlw	8
  1439   0017C8  26D9               	addwf	fsr2l,f,c
  1440   0017CA  50DF               	movf	indf2,w,c
  1441   0017CC  6ED6               	movwf	214,c	;volatile
  1442                           
  1443                           ;MCAL_layer/Timer0/Timer0.c: 210:     preloaded_value = timer0_confg->preloaded_value;
  1444   0017CE  51BD               	movf	Timer0_preloaded_value@timer0_confg& (0+255),w,b
  1445   0017D0  6ED9               	movwf	fsr2l,c
  1446   0017D2  6ADA               	clrf	fsr2h,c
  1447   0017D4  0E08               	movlw	8
  1448   0017D6  26D9               	addwf	fsr2l,f,c
  1449   0017D8  CFDE F043          	movff	postinc2,_preloaded_value
  1450   0017DC  CFDD F044          	movff	postdec2,_preloaded_value+1
  1451   0017E0                     
  1452                           ; BSR set to: 0
  1453   0017E0  0012               	return		;funcret
  1454   0017E2                     __end_of_Timer0_preloaded_value:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _Timer0_Register_Size *****************
  1458 ;; Defined at:
  1459 ;;		line 168 in file "MCAL_layer/Timer0/Timer0.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  timer0_confg    1    0[BANK0 ] PTR const struct .
  1462 ;;		 -> timer0(10), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1474 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;Total ram usage:        3 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 5
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_Timer0_Init
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text8
  1489   001716                     __ptext8:
  1490                           	callstack 0
  1491   001716                     _Timer0_Register_Size:
  1492                           	callstack 23
  1493   001716                     
  1494                           ;MCAL_layer/Timer0/Timer0.c: 168: static __attribute__((inline)) void Timer0_Register_Si
      +                          ze(const timer0_t *timer0_confg);MCAL_layer/Timer0/Timer0.c: 169: {;MCAL_layer/Timer0/Ti
      +                          mer0.c: 170:     switch (timer0_confg->register_size)
  1495   001716  EF92  F00B         	goto	l4920
  1496   00171A                     l1017:
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;MCAL_layer/Timer0/Timer0.c: 173:             (T0CONbits.T08BIT = 1);
  1500   00171A  8CD5               	bsf	213,6,c	;volatile
  1501   00171C                     l1018:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;MCAL_layer/Timer0/Timer0.c: 175:             (T0CONbits.T08BIT = 0);
  1505   00171C  9CD5               	bcf	213,6,c	;volatile
  1506   00171E                     l1019:
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;MCAL_layer/Timer0/Timer0.c: 177:             (T0CONbits.T08BIT = 0);
  1510   00171E  9CD5               	bcf	213,6,c	;volatile
  1511                           
  1512                           ;MCAL_layer/Timer0/Timer0.c: 178:     }
  1513   001720  EFAD  F00B         	goto	l1021
  1514   001724                     l4920:
  1515   001724  0100               	movlb	0	; () banked
  1516   001726  51BD               	movf	Timer0_Register_Size@timer0_confg& (0+255),w,b
  1517   001728  6ED9               	movwf	fsr2l,c
  1518   00172A  6ADA               	clrf	fsr2h,c
  1519   00172C  0E07               	movlw	7
  1520   00172E  26D9               	addwf	fsr2l,f,c
  1521   001730  50DF               	movf	indf2,w,c
  1522   001732  6FBE               	movwf	??_Timer0_Register_Size& (0+255),b
  1523   001734  6BBF               	clrf	(??_Timer0_Register_Size+1)& (0+255),b
  1524                           
  1525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1526                           ; Switch size 1, requested type "simple"
  1527                           ; Number of cases is 1, Range of values is 0 to 0
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte            4     3 (average)
  1531                           ;	Chosen strategy is simple_byte
  1532   001736  51BF               	movf	(??_Timer0_Register_Size+1)& (0+255),w,b
  1533   001738  0A00               	xorlw	0	; case 0
  1534   00173A  B4D8               	btfsc	status,2,c
  1535   00173C  EFA2  F00B         	goto	l5948
  1536   001740  EF8F  F00B         	goto	l1019
  1537   001744                     l5948:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 2, Range of values is 0 to 1
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte            7     4 (average)
  1545                           ;	Chosen strategy is simple_byte
  1546   001744  51BE               	movf	??_Timer0_Register_Size& (0+255),w,b
  1547   001746  0A00               	xorlw	0	; case 0
  1548   001748  B4D8               	btfsc	status,2,c
  1549   00174A  EF8D  F00B         	goto	l1017
  1550   00174E  0A01               	xorlw	1	; case 1
  1551   001750  B4D8               	btfsc	status,2,c
  1552   001752  EF8E  F00B         	goto	l1018
  1553   001756  EF8F  F00B         	goto	l1019
  1554   00175A                     l1021:
  1555                           
  1556                           ; BSR set to: 0
  1557   00175A  0012               	return		;funcret
  1558   00175C                     __end_of_Timer0_Register_Size:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _Timer0_Prescaler_config *****************
  1562 ;; Defined at:
  1563 ;;		line 127 in file "MCAL_layer/Timer0/Timer0.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  timer0_confg    1    0[BANK0 ] PTR const struct .
  1566 ;;		 -> timer0(10), 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1578 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;Total ram usage:        3 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 5
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_Timer0_Init
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text9
  1593   00166A                     __ptext9:
  1594                           	callstack 0
  1595   00166A                     _Timer0_Prescaler_config:
  1596                           	callstack 23
  1597   00166A                     
  1598                           ;MCAL_layer/Timer0/Timer0.c: 127: static __attribute__((inline)) void Timer0_Prescaler_c
      +                          onfig(const timer0_t *timer0_confg);MCAL_layer/Timer0/Timer0.c: 128: {;MCAL_layer/Timer0
      +                          /Timer0.c: 129:     switch (timer0_confg->prescaler_status)
  1599   00166A  EF3C  F00B         	goto	l4908
  1600   00166E                     l993:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;MCAL_layer/Timer0/Timer0.c: 132:             (T0CONbits.PSA = 0);
  1604   00166E  96D5               	bcf	213,3,c	;volatile
  1605   001670                     l994:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;MCAL_layer/Timer0/Timer0.c: 134:             (T0CONbits.PSA = 1);
  1609   001670  86D5               	bsf	213,3,c	;volatile
  1610   001672                     l995:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;MCAL_layer/Timer0/Timer0.c: 136:             (T0CONbits.PSA = 1);
  1614   001672  86D5               	bsf	213,3,c	;volatile
  1615                           
  1616                           ;MCAL_layer/Timer0/Timer0.c: 137:     }
  1617   001674  EF57  F00B         	goto	l4910
  1618   001678                     l4908:
  1619   001678  0100               	movlb	0	; () banked
  1620   00167A  51BD               	movf	Timer0_Prescaler_config@timer0_confg& (0+255),w,b
  1621   00167C  6ED9               	movwf	fsr2l,c
  1622   00167E  6ADA               	clrf	fsr2h,c
  1623   001680  0E04               	movlw	4
  1624   001682  26D9               	addwf	fsr2l,f,c
  1625   001684  50DF               	movf	indf2,w,c
  1626   001686  6FBE               	movwf	??_Timer0_Prescaler_config& (0+255),b
  1627   001688  6BBF               	clrf	(??_Timer0_Prescaler_config+1)& (0+255),b
  1628                           
  1629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1630                           ; Switch size 1, requested type "simple"
  1631                           ; Number of cases is 1, Range of values is 0 to 0
  1632                           ; switch strategies available:
  1633                           ; Name         Instructions Cycles
  1634                           ; simple_byte            4     3 (average)
  1635                           ;	Chosen strategy is simple_byte
  1636   00168A  51BF               	movf	(??_Timer0_Prescaler_config+1)& (0+255),w,b
  1637   00168C  0A00               	xorlw	0	; case 0
  1638   00168E  B4D8               	btfsc	status,2,c
  1639   001690  EF4C  F00B         	goto	l5950
  1640   001694  EF39  F00B         	goto	l995
  1641   001698                     l5950:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ; Switch size 1, requested type "simple"
  1645                           ; Number of cases is 2, Range of values is 0 to 1
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte            7     4 (average)
  1649                           ;	Chosen strategy is simple_byte
  1650   001698  51BE               	movf	??_Timer0_Prescaler_config& (0+255),w,b
  1651   00169A  0A00               	xorlw	0	; case 0
  1652   00169C  B4D8               	btfsc	status,2,c
  1653   00169E  EF37  F00B         	goto	l993
  1654   0016A2  0A01               	xorlw	1	; case 1
  1655   0016A4  B4D8               	btfsc	status,2,c
  1656   0016A6  EF38  F00B         	goto	l994
  1657   0016AA  EF39  F00B         	goto	l995
  1658   0016AE                     l4910:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;MCAL_layer/Timer0/Timer0.c: 138:     T0CONbits.T0PS = timer0_confg->prescaler_value;
  1662   0016AE  51BD               	movf	Timer0_Prescaler_config@timer0_confg& (0+255),w,b
  1663   0016B0  6ED9               	movwf	fsr2l,c
  1664   0016B2  6ADA               	clrf	fsr2h,c
  1665   0016B4  0E03               	movlw	3
  1666   0016B6  26D9               	addwf	fsr2l,f,c
  1667   0016B8  50DF               	movf	indf2,w,c
  1668   0016BA  6FBE               	movwf	??_Timer0_Prescaler_config& (0+255),b
  1669   0016BC  50D5               	movf	213,w,c	;volatile
  1670   0016BE  19BE               	xorwf	??_Timer0_Prescaler_config& (0+255),w,b
  1671   0016C0  0BF8               	andlw	-8
  1672   0016C2  19BE               	xorwf	??_Timer0_Prescaler_config& (0+255),w,b
  1673   0016C4  6ED5               	movwf	213,c	;volatile
  1674   0016C6                     
  1675                           ; BSR set to: 0
  1676   0016C6  0012               	return		;funcret
  1677   0016C8                     __end_of_Timer0_Prescaler_config:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _Timer0_Mode *****************
  1681 ;; Defined at:
  1682 ;;		line 154 in file "MCAL_layer/Timer0/Timer0.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  timer0_confg    1    3[BANK0 ] PTR const struct .
  1685 ;;		 -> timer0(10), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1697 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;Total ram usage:        3 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 6
  1704 ;; This function calls:
  1705 ;;		_Timer0_Select_Edge
  1706 ;; This function is called by:
  1707 ;;		_Timer0_Init
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text10
  1712   0016C8                     __ptext10:
  1713                           	callstack 0
  1714   0016C8                     _Timer0_Mode:
  1715                           	callstack 22
  1716   0016C8                     
  1717                           ;MCAL_layer/Timer0/Timer0.c: 154: static __attribute__((inline)) void Timer0_Mode(const 
      +                          timer0_t *timer0_confg);MCAL_layer/Timer0/Timer0.c: 155: {;MCAL_layer/Timer0/Timer0.c: 1
      +                          56:     switch (timer0_confg->mode)
  1718   0016C8  EF6F  F00B         	goto	l4936
  1719   0016CC                     l1009:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;MCAL_layer/Timer0/Timer0.c: 159:             (T0CONbits.T0CS = 1);
  1723   0016CC  8AD5               	bsf	213,5,c	;volatile
  1724   0016CE                     
  1725                           ; BSR set to: 0
  1726                           ;MCAL_layer/Timer0/Timer0.c: 160:             Timer0_Select_Edge(timer0_confg);
  1727   0016CE  C0C0  F0BD         	movff	Timer0_Mode@timer0_confg,Timer0_Select_Edge@timer0_confg
  1728   0016D2  ECAE  F00B         	call	_Timer0_Select_Edge	;wreg free
  1729   0016D6                     l4932:
  1730                           
  1731                           ;MCAL_layer/Timer0/Timer0.c: 162:             (T0CONbits.T0CS = 0);
  1732   0016D6  9AD5               	bcf	213,5,c	;volatile
  1733   0016D8                     l4934:
  1734                           
  1735                           ;MCAL_layer/Timer0/Timer0.c: 164:             (T0CONbits.T0CS = 0);
  1736   0016D8  9AD5               	bcf	213,5,c	;volatile
  1737                           
  1738                           ;MCAL_layer/Timer0/Timer0.c: 165:     }
  1739   0016DA  EF8A  F00B         	goto	l1013
  1740   0016DE                     l4936:
  1741   0016DE  0100               	movlb	0	; () banked
  1742   0016E0  51C0               	movf	Timer0_Mode@timer0_confg& (0+255),w,b
  1743   0016E2  6ED9               	movwf	fsr2l,c
  1744   0016E4  6ADA               	clrf	fsr2h,c
  1745   0016E6  0E06               	movlw	6
  1746   0016E8  26D9               	addwf	fsr2l,f,c
  1747   0016EA  50DF               	movf	indf2,w,c
  1748   0016EC  6FC1               	movwf	??_Timer0_Mode& (0+255),b
  1749   0016EE  6BC2               	clrf	(??_Timer0_Mode+1)& (0+255),b
  1750                           
  1751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1752                           ; Switch size 1, requested type "simple"
  1753                           ; Number of cases is 1, Range of values is 0 to 0
  1754                           ; switch strategies available:
  1755                           ; Name         Instructions Cycles
  1756                           ; simple_byte            4     3 (average)
  1757                           ;	Chosen strategy is simple_byte
  1758   0016F0  51C2               	movf	(??_Timer0_Mode+1)& (0+255),w,b
  1759   0016F2  0A00               	xorlw	0	; case 0
  1760   0016F4  B4D8               	btfsc	status,2,c
  1761   0016F6  EF7F  F00B         	goto	l5952
  1762   0016FA  EF6C  F00B         	goto	l4934
  1763   0016FE                     l5952:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 2, Range of values is 0 to 1
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte            7     4 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772   0016FE  51C1               	movf	??_Timer0_Mode& (0+255),w,b
  1773   001700  0A00               	xorlw	0	; case 0
  1774   001702  B4D8               	btfsc	status,2,c
  1775   001704  EF66  F00B         	goto	l1009
  1776   001708  0A01               	xorlw	1	; case 1
  1777   00170A  B4D8               	btfsc	status,2,c
  1778   00170C  EF6B  F00B         	goto	l4932
  1779   001710  EF6C  F00B         	goto	l4934
  1780   001714                     l1013:
  1781   001714  0012               	return		;funcret
  1782   001716                     __end_of_Timer0_Mode:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _Timer0_Select_Edge *****************
  1786 ;; Defined at:
  1787 ;;		line 141 in file "MCAL_layer/Timer0/Timer0.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  timer0_confg    1    0[BANK0 ] PTR const struct .
  1790 ;;		 -> timer0(10), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1802 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;Total ram usage:        3 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 5
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_Timer0_Mode
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text11
  1817   00175C                     __ptext11:
  1818                           	callstack 0
  1819   00175C                     _Timer0_Select_Edge:
  1820                           	callstack 22
  1821   00175C                     
  1822                           ;MCAL_layer/Timer0/Timer0.c: 141: static __attribute__((inline)) void Timer0_Select_Edge
      +                          (const timer0_t *timer0_confg);MCAL_layer/Timer0/Timer0.c: 142: {;MCAL_layer/Timer0/Time
      +                          r0.c: 143:     switch (timer0_confg->edge_select)
  1823   00175C  EFB5  F00B         	goto	l4886
  1824   001760                     l1001:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;MCAL_layer/Timer0/Timer0.c: 146:             (T0CONbits.T0SE = 1);
  1828   001760  88D5               	bsf	213,4,c	;volatile
  1829   001762                     l1002:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;MCAL_layer/Timer0/Timer0.c: 148:             (T0CONbits.T0SE = 0);
  1833   001762  98D5               	bcf	213,4,c	;volatile
  1834   001764                     l1003:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;MCAL_layer/Timer0/Timer0.c: 150:             (T0CONbits.T0SE = 0);
  1838   001764  98D5               	bcf	213,4,c	;volatile
  1839                           
  1840                           ;MCAL_layer/Timer0/Timer0.c: 151:     }
  1841   001766  EFD0  F00B         	goto	l1005
  1842   00176A                     l4886:
  1843   00176A  0100               	movlb	0	; () banked
  1844   00176C  51BD               	movf	Timer0_Select_Edge@timer0_confg& (0+255),w,b
  1845   00176E  6ED9               	movwf	fsr2l,c
  1846   001770  6ADA               	clrf	fsr2h,c
  1847   001772  0E05               	movlw	5
  1848   001774  26D9               	addwf	fsr2l,f,c
  1849   001776  50DF               	movf	indf2,w,c
  1850   001778  6FBE               	movwf	??_Timer0_Select_Edge& (0+255),b
  1851   00177A  6BBF               	clrf	(??_Timer0_Select_Edge+1)& (0+255),b
  1852                           
  1853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1854                           ; Switch size 1, requested type "simple"
  1855                           ; Number of cases is 1, Range of values is 0 to 0
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte            4     3 (average)
  1859                           ;	Chosen strategy is simple_byte
  1860   00177C  51BF               	movf	(??_Timer0_Select_Edge+1)& (0+255),w,b
  1861   00177E  0A00               	xorlw	0	; case 0
  1862   001780  B4D8               	btfsc	status,2,c
  1863   001782  EFC5  F00B         	goto	l5954
  1864   001786  EFB2  F00B         	goto	l1003
  1865   00178A                     l5954:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 2, Range of values is 0 to 1
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            7     4 (average)
  1873                           ;	Chosen strategy is simple_byte
  1874   00178A  51BE               	movf	??_Timer0_Select_Edge& (0+255),w,b
  1875   00178C  0A00               	xorlw	0	; case 0
  1876   00178E  B4D8               	btfsc	status,2,c
  1877   001790  EFB0  F00B         	goto	l1001
  1878   001794  0A01               	xorlw	1	; case 1
  1879   001796  B4D8               	btfsc	status,2,c
  1880   001798  EFB1  F00B         	goto	l1002
  1881   00179C  EFB2  F00B         	goto	l1003
  1882   0017A0                     l1005:
  1883                           
  1884                           ; BSR set to: 0
  1885   0017A0  0012               	return		;funcret
  1886   0017A2                     __end_of_Timer0_Select_Edge:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _Timer0_Interrupt_init *****************
  1890 ;; Defined at:
  1891 ;;		line 181 in file "MCAL_layer/Timer0/Timer0.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  timer0_confg    1    0[BANK0 ] PTR const struct .
  1894 ;;		 -> timer0(10), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		None
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1906 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;Total ram usage:        1 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 5
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_Timer0_Init
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text12
  1921   001876                     __ptext12:
  1922                           	callstack 0
  1923   001876                     _Timer0_Interrupt_init:
  1924                           	callstack 23
  1925   001876                     
  1926                           ;MCAL_layer/Timer0/Timer0.c: 181: static __attribute__((inline)) void Timer0_Interrupt_i
      +                          nit(const timer0_t *timer0_confg);MCAL_layer/Timer0/Timer0.c: 182: {;MCAL_layer/Timer0/T
      +                          imer0.c: 184:     (INTCONbits.TMR0IE = 1);
  1927   001876  8AF2               	bsf	242,5,c	;volatile
  1928                           
  1929                           ;MCAL_layer/Timer0/Timer0.c: 185:     (INTCONbits.TMR0IF = 0);
  1930   001878  94F2               	bcf	242,2,c	;volatile
  1931                           
  1932                           ;MCAL_layer/Timer0/Timer0.c: 200:     (INTCONbits.PEIE = 1);
  1933   00187A  8CF2               	bsf	242,6,c	;volatile
  1934                           
  1935                           ;MCAL_layer/Timer0/Timer0.c: 201:     (INTCONbits.GIE = 1);
  1936   00187C  8EF2               	bsf	242,7,c	;volatile
  1937   00187E  0012               	return		;funcret
  1938   001880                     __end_of_Timer0_Interrupt_init:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _Interrupt_Manager *****************
  1942 ;; Defined at:
  1943 ;;		line 52 in file "MCAL_layer/Interrupt/interrupt_manager.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        6 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 4
  1964 ;; This function calls:
  1965 ;;		_ADC_ISR
  1966 ;;		_INT0_ISR
  1967 ;;		_INT1_ISR
  1968 ;;		_INT2_ISR
  1969 ;;		_RB4_ISR
  1970 ;;		_RB5_ISR
  1971 ;;		_RB6_ISR
  1972 ;;		_RB7_ISR
  1973 ;;		_TMR0_ISR
  1974 ;; This function is called by:
  1975 ;;		Interrupt level 2
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	intcode
  1980   000008                     __pintcode:
  1981                           	callstack 0
  1982   000008                     _Interrupt_Manager:
  1983                           	callstack 22
  1984                           
  1985                           ;incstack = 0
  1986   000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1987   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  1988                           
  1989                           	psect	intcode_body
  1990   001016                     __pintcode_body:
  1991                           	callstack 22
  1992   001016                     int_func:
  1993                           	callstack 22
  1994   001016  0006               	pop		; remove dummy address from shadow register refresh
  1995   001018  CFFA F063          	movff	pclath,??_Interrupt_Manager
  1996   00101C  CFFB F064          	movff	pclatu,??_Interrupt_Manager+1
  1997   001020  CFD9 F065          	movff	fsr2l,??_Interrupt_Manager+2
  1998   001024  CFDA F066          	movff	fsr2h,??_Interrupt_Manager+3
  1999   001028  CFF3 F067          	movff	prodl,??_Interrupt_Manager+4
  2000   00102C  CFF4 F068          	movff	prodh,??_Interrupt_Manager+5
  2001   001030                     
  2002                           ;MCAL_layer/Interrupt/interrupt_manager.c: 55:     if((1 == PIE1bits.ADIE ) && (1 == PIR
      +                          1bits.ADIF))
  2003   001030  AC9D               	btfss	157,6,c	;volatile
  2004   001032  EF1D  F008         	goto	i2u298_41
  2005   001036  EF1F  F008         	goto	i2u298_40
  2006   00103A                     i2u298_41:
  2007   00103A  EF28  F008         	goto	i2l4742
  2008   00103E                     i2u298_40:
  2009   00103E  AC9E               	btfss	158,6,c	;volatile
  2010   001040  EF24  F008         	goto	i2u299_41
  2011   001044  EF26  F008         	goto	i2u299_40
  2012   001048                     i2u299_41:
  2013   001048  EF28  F008         	goto	i2l4742
  2014   00104C                     i2u299_40:
  2015   00104C                     
  2016                           ;MCAL_layer/Interrupt/interrupt_manager.c: 56:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 57:         ADC_ISR();
  2017   00104C  EC4E  F00C         	call	_ADC_ISR	;wreg free
  2018   001050                     i2l4742:
  2019                           
  2020                           ;MCAL_layer/Interrupt/interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2021   001050  A6F2               	btfss	242,3,c	;volatile
  2022   001052  EF2D  F008         	goto	i2u300_41
  2023   001056  EF2F  F008         	goto	i2u300_40
  2024   00105A                     i2u300_41:
  2025   00105A  EF48  F008         	goto	i2l4754
  2026   00105E                     i2u300_40:
  2027   00105E  A0F2               	btfss	242,0,c	;volatile
  2028   001060  EF34  F008         	goto	i2u301_41
  2029   001064  EF36  F008         	goto	i2u301_40
  2030   001068                     i2u301_41:
  2031   001068  EF48  F008         	goto	i2l4754
  2032   00106C                     i2u301_40:
  2033   00106C                     
  2034                           ;MCAL_layer/Interrupt/interrupt_manager.c: 62:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 63:         if(PORTBbits.RB5 == GPIO_HIGH)
  2035   00106C  AA81               	btfss	129,5,c	;volatile
  2036   00106E  EF3B  F008         	goto	i2u302_41
  2037   001072  EF3D  F008         	goto	i2u302_40
  2038   001076                     i2u302_41:
  2039   001076  EF3F  F008         	goto	i2l4750
  2040   00107A                     i2u302_40:
  2041   00107A                     
  2042                           ;MCAL_layer/Interrupt/interrupt_manager.c: 64:         RB5_ISR();
  2043   00107A  EC44  F00C         	call	_RB5_ISR	;wreg free
  2044   00107E                     i2l4750:
  2045                           
  2046                           ;MCAL_layer/Interrupt/interrupt_manager.c: 65:         if(PORTBbits.RB5 == GPIO_LOW)
  2047   00107E  BA81               	btfsc	129,5,c	;volatile
  2048   001080  EF44  F008         	goto	i2u303_41
  2049   001084  EF46  F008         	goto	i2u303_40
  2050   001088                     i2u303_41:
  2051   001088  EF48  F008         	goto	i2l4754
  2052   00108C                     i2u303_40:
  2053   00108C                     
  2054                           ;MCAL_layer/Interrupt/interrupt_manager.c: 66:         RB5_ISR();
  2055   00108C  EC44  F00C         	call	_RB5_ISR	;wreg free
  2056   001090                     i2l4754:
  2057                           
  2058                           ;MCAL_layer/Interrupt/interrupt_manager.c: 69:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2059   001090  A6F2               	btfss	242,3,c	;volatile
  2060   001092  EF4D  F008         	goto	i2u304_41
  2061   001096  EF4F  F008         	goto	i2u304_40
  2062   00109A                     i2u304_41:
  2063   00109A  EF68  F008         	goto	i2l4766
  2064   00109E                     i2u304_40:
  2065   00109E  A0F2               	btfss	242,0,c	;volatile
  2066   0010A0  EF54  F008         	goto	i2u305_41
  2067   0010A4  EF56  F008         	goto	i2u305_40
  2068   0010A8                     i2u305_41:
  2069   0010A8  EF68  F008         	goto	i2l4766
  2070   0010AC                     i2u305_40:
  2071   0010AC                     
  2072                           ;MCAL_layer/Interrupt/interrupt_manager.c: 70:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 71:         if(PORTBbits.RB4 == GPIO_HIGH)
  2073   0010AC  A881               	btfss	129,4,c	;volatile
  2074   0010AE  EF5B  F008         	goto	i2u306_41
  2075   0010B2  EF5D  F008         	goto	i2u306_40
  2076   0010B6                     i2u306_41:
  2077   0010B6  EF5F  F008         	goto	i2l4762
  2078   0010BA                     i2u306_40:
  2079   0010BA                     
  2080                           ;MCAL_layer/Interrupt/interrupt_manager.c: 72:         RB4_ISR();
  2081   0010BA  EC46  F00C         	call	_RB4_ISR	;wreg free
  2082   0010BE                     i2l4762:
  2083                           
  2084                           ;MCAL_layer/Interrupt/interrupt_manager.c: 73:         if(PORTBbits.RB4 == GPIO_LOW)
  2085   0010BE  B881               	btfsc	129,4,c	;volatile
  2086   0010C0  EF64  F008         	goto	i2u307_41
  2087   0010C4  EF66  F008         	goto	i2u307_40
  2088   0010C8                     i2u307_41:
  2089   0010C8  EF68  F008         	goto	i2l4766
  2090   0010CC                     i2u307_40:
  2091   0010CC                     
  2092                           ;MCAL_layer/Interrupt/interrupt_manager.c: 74:         RB4_ISR();
  2093   0010CC  EC46  F00C         	call	_RB4_ISR	;wreg free
  2094   0010D0                     i2l4766:
  2095                           
  2096                           ;MCAL_layer/Interrupt/interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2097   0010D0  A6F2               	btfss	242,3,c	;volatile
  2098   0010D2  EF6D  F008         	goto	i2u308_41
  2099   0010D6  EF6F  F008         	goto	i2u308_40
  2100   0010DA                     i2u308_41:
  2101   0010DA  EF88  F008         	goto	i2l4778
  2102   0010DE                     i2u308_40:
  2103   0010DE  A0F2               	btfss	242,0,c	;volatile
  2104   0010E0  EF74  F008         	goto	i2u309_41
  2105   0010E4  EF76  F008         	goto	i2u309_40
  2106   0010E8                     i2u309_41:
  2107   0010E8  EF88  F008         	goto	i2l4778
  2108   0010EC                     i2u309_40:
  2109   0010EC                     
  2110                           ;MCAL_layer/Interrupt/interrupt_manager.c: 79:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 80:         if(PORTBbits.RB6 == GPIO_HIGH)
  2111   0010EC  AC81               	btfss	129,6,c	;volatile
  2112   0010EE  EF7B  F008         	goto	i2u310_41
  2113   0010F2  EF7D  F008         	goto	i2u310_40
  2114   0010F6                     i2u310_41:
  2115   0010F6  EF7F  F008         	goto	i2l4774
  2116   0010FA                     i2u310_40:
  2117   0010FA                     
  2118                           ;MCAL_layer/Interrupt/interrupt_manager.c: 81:         RB6_ISR();
  2119   0010FA  EC42  F00C         	call	_RB6_ISR	;wreg free
  2120   0010FE                     i2l4774:
  2121                           
  2122                           ;MCAL_layer/Interrupt/interrupt_manager.c: 82:         if(PORTBbits.RB6== GPIO_LOW)
  2123   0010FE  BC81               	btfsc	129,6,c	;volatile
  2124   001100  EF84  F008         	goto	i2u311_41
  2125   001104  EF86  F008         	goto	i2u311_40
  2126   001108                     i2u311_41:
  2127   001108  EF88  F008         	goto	i2l4778
  2128   00110C                     i2u311_40:
  2129   00110C                     
  2130                           ;MCAL_layer/Interrupt/interrupt_manager.c: 83:         RB6_ISR();
  2131   00110C  EC42  F00C         	call	_RB6_ISR	;wreg free
  2132   001110                     i2l4778:
  2133                           
  2134                           ;MCAL_layer/Interrupt/interrupt_manager.c: 86:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2135   001110  A6F2               	btfss	242,3,c	;volatile
  2136   001112  EF8D  F008         	goto	i2u312_41
  2137   001116  EF8F  F008         	goto	i2u312_40
  2138   00111A                     i2u312_41:
  2139   00111A  EFA8  F008         	goto	i2l4790
  2140   00111E                     i2u312_40:
  2141   00111E  A0F2               	btfss	242,0,c	;volatile
  2142   001120  EF94  F008         	goto	i2u313_41
  2143   001124  EF96  F008         	goto	i2u313_40
  2144   001128                     i2u313_41:
  2145   001128  EFA8  F008         	goto	i2l4790
  2146   00112C                     i2u313_40:
  2147   00112C                     
  2148                           ;MCAL_layer/Interrupt/interrupt_manager.c: 87:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 88:         if(PORTBbits.RB7 == GPIO_HIGH)
  2149   00112C  AE81               	btfss	129,7,c	;volatile
  2150   00112E  EF9B  F008         	goto	i2u314_41
  2151   001132  EF9D  F008         	goto	i2u314_40
  2152   001136                     i2u314_41:
  2153   001136  EF9F  F008         	goto	i2l4786
  2154   00113A                     i2u314_40:
  2155   00113A                     
  2156                           ;MCAL_layer/Interrupt/interrupt_manager.c: 89:         RB7_ISR();
  2157   00113A  EC40  F00C         	call	_RB7_ISR	;wreg free
  2158   00113E                     i2l4786:
  2159                           
  2160                           ;MCAL_layer/Interrupt/interrupt_manager.c: 90:         if(PORTBbits.RB7 == GPIO_LOW)
  2161   00113E  BE81               	btfsc	129,7,c	;volatile
  2162   001140  EFA4  F008         	goto	i2u315_41
  2163   001144  EFA6  F008         	goto	i2u315_40
  2164   001148                     i2u315_41:
  2165   001148  EFA8  F008         	goto	i2l4790
  2166   00114C                     i2u315_40:
  2167   00114C                     
  2168                           ;MCAL_layer/Interrupt/interrupt_manager.c: 91:         RB7_ISR();
  2169   00114C  EC40  F00C         	call	_RB7_ISR	;wreg free
  2170   001150                     i2l4790:
  2171                           
  2172                           ;MCAL_layer/Interrupt/interrupt_manager.c: 94:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF ))
  2173   001150  A8F2               	btfss	242,4,c	;volatile
  2174   001152  EFAD  F008         	goto	i2u316_41
  2175   001156  EFAF  F008         	goto	i2u316_40
  2176   00115A                     i2u316_41:
  2177   00115A  EFB8  F008         	goto	i2l4796
  2178   00115E                     i2u316_40:
  2179   00115E  A2F2               	btfss	242,1,c	;volatile
  2180   001160  EFB4  F008         	goto	i2u317_41
  2181   001164  EFB6  F008         	goto	i2u317_40
  2182   001168                     i2u317_41:
  2183   001168  EFB8  F008         	goto	i2l4796
  2184   00116C                     i2u317_40:
  2185   00116C                     
  2186                           ;MCAL_layer/Interrupt/interrupt_manager.c: 95:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 96:         INT0_ISR();
  2187   00116C  EC4C  F00C         	call	_INT0_ISR	;wreg free
  2188   001170                     i2l4796:
  2189                           
  2190                           ;MCAL_layer/Interrupt/interrupt_manager.c: 99:     if((1 == INTCON3bits.INT1IE) && (1 ==
      +                           INTCON3bits.INT1IF ))
  2191   001170  A6F0               	btfss	240,3,c	;volatile
  2192   001172  EFBD  F008         	goto	i2u318_41
  2193   001176  EFBF  F008         	goto	i2u318_40
  2194   00117A                     i2u318_41:
  2195   00117A  EFC8  F008         	goto	i2l4802
  2196   00117E                     i2u318_40:
  2197   00117E  A0F0               	btfss	240,0,c	;volatile
  2198   001180  EFC4  F008         	goto	i2u319_41
  2199   001184  EFC6  F008         	goto	i2u319_40
  2200   001188                     i2u319_41:
  2201   001188  EFC8  F008         	goto	i2l4802
  2202   00118C                     i2u319_40:
  2203   00118C                     
  2204                           ;MCAL_layer/Interrupt/interrupt_manager.c: 100:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 101:         INT1_ISR();
  2205   00118C  EC4A  F00C         	call	_INT1_ISR	;wreg free
  2206   001190                     i2l4802:
  2207                           
  2208                           ;MCAL_layer/Interrupt/interrupt_manager.c: 104:     if((1 == INTCON3bits.INT2IE) && (1 =
      +                          = INTCON3bits.INT2IF ))
  2209   001190  A8F0               	btfss	240,4,c	;volatile
  2210   001192  EFCD  F008         	goto	i2u320_41
  2211   001196  EFCF  F008         	goto	i2u320_40
  2212   00119A                     i2u320_41:
  2213   00119A  EFD8  F008         	goto	i2l4808
  2214   00119E                     i2u320_40:
  2215   00119E  A2F0               	btfss	240,1,c	;volatile
  2216   0011A0  EFD4  F008         	goto	i2u321_41
  2217   0011A4  EFD6  F008         	goto	i2u321_40
  2218   0011A8                     i2u321_41:
  2219   0011A8  EFD8  F008         	goto	i2l4808
  2220   0011AC                     i2u321_40:
  2221   0011AC                     
  2222                           ;MCAL_layer/Interrupt/interrupt_manager.c: 105:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 106:         INT2_ISR();
  2223   0011AC  EC48  F00C         	call	_INT2_ISR	;wreg free
  2224   0011B0                     i2l4808:
  2225                           
  2226                           ;MCAL_layer/Interrupt/interrupt_manager.c: 110:     if((1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF))
  2227   0011B0  AAF2               	btfss	242,5,c	;volatile
  2228   0011B2  EFDD  F008         	goto	i2u322_41
  2229   0011B6  EFDF  F008         	goto	i2u322_40
  2230   0011BA                     i2u322_41:
  2231   0011BA  EFE8  F008         	goto	i2l941
  2232   0011BE                     i2u322_40:
  2233   0011BE  A4F2               	btfss	242,2,c	;volatile
  2234   0011C0  EFE4  F008         	goto	i2u323_41
  2235   0011C4  EFE6  F008         	goto	i2u323_40
  2236   0011C8                     i2u323_41:
  2237   0011C8  EFE8  F008         	goto	i2l941
  2238   0011CC                     i2u323_40:
  2239   0011CC                     
  2240                           ;MCAL_layer/Interrupt/interrupt_manager.c: 111:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 112:         TMR0_ISR();
  2241   0011CC  ECF1  F00B         	call	_TMR0_ISR	;wreg free
  2242   0011D0                     i2l941:
  2243   0011D0  C068  FFF4         	movff	??_Interrupt_Manager+5,prodh
  2244   0011D4  C067  FFF3         	movff	??_Interrupt_Manager+4,prodl
  2245   0011D8  C066  FFDA         	movff	??_Interrupt_Manager+3,fsr2h
  2246   0011DC  C065  FFD9         	movff	??_Interrupt_Manager+2,fsr2l
  2247   0011E0  C064  FFFB         	movff	??_Interrupt_Manager+1,pclatu
  2248   0011E4  C063  FFFA         	movff	??_Interrupt_Manager,pclath
  2249   0011E8  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2250   0011EA  0011               	retfie		f
  2251   0011EC                     __end_of_Interrupt_Manager:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _TMR0_ISR *****************
  2255 ;; Defined at:
  2256 ;;		line 114 in file "MCAL_layer/Timer0/Timer0.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 3
  2277 ;; This function calls:
  2278 ;;		NULL
  2279 ;;		_ADC_Interrupt_function
  2280 ;; This function is called by:
  2281 ;;		_Interrupt_Manager
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text14
  2286   0017E2                     __ptext14:
  2287                           	callstack 0
  2288   0017E2                     _TMR0_ISR:
  2289                           	callstack 22
  2290   0017E2                     
  2291                           ;MCAL_layer/Timer0/Timer0.c: 116:     (INTCONbits.TMR0IF = 0);
  2292   0017E2  94F2               	bcf	242,2,c	;volatile
  2293   0017E4                     
  2294                           ;MCAL_layer/Timer0/Timer0.c: 117:     TMR0H = (preloaded_value >> 8);
  2295   0017E4  5044               	movf	(_preloaded_value+1)^0,w,c
  2296   0017E6  6ED7               	movwf	215,c	;volatile
  2297   0017E8                     
  2298                           ;MCAL_layer/Timer0/Timer0.c: 118:     TMR0L = (uint8)(preloaded_value);
  2299   0017E8  C043  FFD6         	movff	_preloaded_value,4054	;volatile
  2300   0017EC                     
  2301                           ;MCAL_layer/Timer0/Timer0.c: 119:     if(TMR_Interrupt_Handler)
  2302   0017EC  5045               	movf	_TMR_Interrupt_Handler^0,w,c
  2303   0017EE  1046               	iorwf	(_TMR_Interrupt_Handler+1)^0,w,c
  2304   0017F0  B4D8               	btfsc	status,2,c
  2305   0017F2  EFFD  F00B         	goto	i2u213_41
  2306   0017F6  EFFF  F00B         	goto	i2u213_40
  2307   0017FA                     i2u213_41:
  2308   0017FA  EF0B  F00C         	goto	i2l989
  2309   0017FE                     i2u213_40:
  2310   0017FE                     
  2311                           ;MCAL_layer/Timer0/Timer0.c: 120:     {;MCAL_layer/Timer0/Timer0.c: 121:         TMR_Int
      +                          errupt_Handler();
  2312   0017FE  D802               	call	i2u214_48
  2313   001800  EF0B  F00C         	goto	i2u214_49
  2314   001804                     i2u214_48:
  2315   001804  0005               	push	
  2316   001806  6EFA               	movwf	pclath,c
  2317   001808  5045               	movf	_TMR_Interrupt_Handler^0,w,c
  2318   00180A  6EFD               	movwf	tosl,c
  2319   00180C  5046               	movf	(_TMR_Interrupt_Handler+1)^0,w,c
  2320   00180E  6EFE               	movwf	tosh,c
  2321   001810  6AFF               	clrf	tosu,c
  2322   001812  50FA               	movf	pclath,w,c
  2323   001814  0012               	return		;indir
  2324   001816                     i2u214_49:
  2325   001816                     i2l989:
  2326   001816  0012               	return		;funcret
  2327   001818                     __end_of_TMR0_ISR:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function _ADC_Interrupt_function *****************
  2331 ;; Defined at:
  2332 ;;		line 36 in file "application.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 2
  2353 ;; This function calls:
  2354 ;;		_ecu_led_toggle
  2355 ;; This function is called by:
  2356 ;;		_TMR0_ISR
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text15
  2361   00185A                     __ptext15:
  2362                           	callstack 0
  2363   00185A                     _ADC_Interrupt_function:
  2364                           	callstack 22
  2365   00185A                     
  2366                           ;application.c: 38:     flag++;
  2367   00185A  4A41               	infsnz	_flag^0,f,c	;volatile
  2368   00185C  2A42               	incf	(_flag+1)^0,f,c	;volatile
  2369   00185E                     
  2370                           ;application.c: 39:     ret = ecu_led_toggle(&led1);
  2371   00185E  0E69               	movlw	low _led1
  2372   001860  6E5D               	movwf	ecu_led_toggle@_led_config^0,c
  2373   001862  ECD6  F00A         	call	_ecu_led_toggle	;wreg free
  2374   001866  6E6C               	movwf	_ret^0,c
  2375   001868  0012               	return		;funcret
  2376   00186A                     __end_of_ADC_Interrupt_function:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _ecu_led_toggle *****************
  2380 ;; Defined at:
  2381 ;;		line 87 in file "ECU_layer/led/ecu_led.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  _led_config     1    6[COMRAM] PTR const struct .
  2384 ;;		 -> led1(3), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  _pin_config     4    8[COMRAM] struct .
  2387 ;;  ret             1    7[COMRAM] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      unsigned char 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:        6 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 1
  2404 ;; This function calls:
  2405 ;;		_gpio_pin_toggle_logic
  2406 ;; This function is called by:
  2407 ;;		_ADC_Interrupt_function
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text16
  2412   0015AC                     __ptext16:
  2413                           	callstack 0
  2414   0015AC                     _ecu_led_toggle:
  2415                           	callstack 22
  2416   0015AC                     
  2417                           ;ECU_layer/led/ecu_led.c: 91:     if (((void*)0) == _led_config) {
  2418   0015AC  505D               	movf	ecu_led_toggle@_led_config^0,w,c
  2419   0015AE  A4D8               	btfss	status,2,c
  2420   0015B0  EFDC  F00A         	goto	i2u195_41
  2421   0015B4  EFDE  F00A         	goto	i2u195_40
  2422   0015B8                     i2u195_41:
  2423   0015B8  EFE2  F00A         	goto	i2l342
  2424   0015BC                     i2u195_40:
  2425   0015BC                     
  2426                           ;ECU_layer/led/ecu_led.c: 92:         ret = (STD_ReturnType)0x00;
  2427   0015BC  0E00               	movlw	0
  2428   0015BE  6E5E               	movwf	ecu_led_toggle@ret^0,c
  2429                           
  2430                           ;ECU_layer/led/ecu_led.c: 93:     } else {
  2431   0015C0  EF04  F00B         	goto	i2l3636
  2432   0015C4                     i2l342:
  2433                           
  2434                           ;ECU_layer/led/ecu_led.c: 94:         pin_config _pin_config ={
  2435   0015C4  C011  F05F         	movff	ecu_led_toggle@F3076,ecu_led_toggle@_pin_config
  2436   0015C8  C012  F060         	movff	ecu_led_toggle@F3076+1,ecu_led_toggle@_pin_config+1
  2437   0015CC  C013  F061         	movff	ecu_led_toggle@F3076+2,ecu_led_toggle@_pin_config+2
  2438   0015D0  C014  F062         	movff	ecu_led_toggle@F3076+3,ecu_led_toggle@_pin_config+3
  2439   0015D4  505D               	movf	ecu_led_toggle@_led_config^0,w,c
  2440   0015D6  6ED9               	movwf	fsr2l,c
  2441   0015D8  6ADA               	clrf	fsr2h,c
  2442   0015DA  50DF               	movf	indf2,w,c
  2443   0015DC  6E5F               	movwf	ecu_led_toggle@_pin_config^0,c
  2444   0015DE  505D               	movf	ecu_led_toggle@_led_config^0,w,c
  2445   0015E0  6ED9               	movwf	fsr2l,c
  2446   0015E2  6ADA               	clrf	fsr2h,c
  2447   0015E4  0E01               	movlw	1
  2448   0015E6  26D9               	addwf	fsr2l,f,c
  2449   0015E8  50DF               	movf	indf2,w,c
  2450   0015EA  6E60               	movwf	(ecu_led_toggle@_pin_config+1)^0,c
  2451   0015EC  0E00               	movlw	0
  2452   0015EE  6E61               	movwf	(ecu_led_toggle@_pin_config+2)^0,c
  2453   0015F0  505D               	movf	ecu_led_toggle@_led_config^0,w,c
  2454   0015F2  6ED9               	movwf	fsr2l,c
  2455   0015F4  6ADA               	clrf	fsr2h,c
  2456   0015F6  0E02               	movlw	2
  2457   0015F8  26D9               	addwf	fsr2l,f,c
  2458   0015FA  50DF               	movf	indf2,w,c
  2459   0015FC  6E62               	movwf	(ecu_led_toggle@_pin_config+3)^0,c
  2460   0015FE                     
  2461                           ;ECU_layer/led/ecu_led.c: 100:         ret = gpio_pin_toggle_logic(&_pin_config);
  2462   0015FE  0E5F               	movlw	low ecu_led_toggle@_pin_config
  2463   001600  6E57               	movwf	gpio_pin_toggle_logic@_pin_config^0,c
  2464   001602  EC03  F00A         	call	_gpio_pin_toggle_logic	;wreg free
  2465   001606  6E5E               	movwf	ecu_led_toggle@ret^0,c
  2466   001608                     i2l3636:
  2467                           
  2468                           ;ECU_layer/led/ecu_led.c: 103:     return ret;
  2469   001608  505E               	movf	ecu_led_toggle@ret^0,w,c
  2470   00160A  0012               	return		;funcret
  2471   00160C                     __end_of_ecu_led_toggle:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _gpio_pin_toggle_logic *****************
  2475 ;; Defined at:
  2476 ;;		line 131 in file "MCAL_layer/GPIO/gpio.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2479 ;;		 -> ecu_relay_toggle@relay_init(4), ecu_led_toggle@_pin_config(4), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  ret             1    5[COMRAM] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      unsigned char 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:        6 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_ecu_led_toggle
  2501 ;;		_ecu_relay_toggle
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text17
  2506   001406                     __ptext17:
  2507                           	callstack 0
  2508   001406                     _gpio_pin_toggle_logic:
  2509                           	callstack 22
  2510   001406                     
  2511                           ;MCAL_layer/GPIO/gpio.c: 131: STD_ReturnType gpio_pin_toggle_logic(const pin_config *_pi
      +                          n_config);MCAL_layer/GPIO/gpio.c: 132: {;MCAL_layer/GPIO/gpio.c: 133:     STD_ReturnType
      +                           ret = (STD_ReturnType)0x01;
  2512   001406  0E01               	movlw	1
  2513   001408  6E5C               	movwf	gpio_pin_toggle_logic@ret^0,c
  2514                           
  2515                           ;MCAL_layer/GPIO/gpio.c: 134:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
  2516   00140A  5057               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2517   00140C  B4D8               	btfsc	status,2,c
  2518   00140E  EF0B  F00A         	goto	i2u190_41
  2519   001412  EF0D  F00A         	goto	i2u190_40
  2520   001416                     i2u190_41:
  2521   001416  EF1A  F00A         	goto	i2l3594
  2522   00141A                     i2u190_40:
  2523   00141A  5057               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2524   00141C  6ED9               	movwf	fsr2l,c
  2525   00141E  6ADA               	clrf	fsr2h,c
  2526   001420  0E01               	movlw	1
  2527   001422  26D9               	addwf	fsr2l,f,c
  2528   001424  0E07               	movlw	7
  2529   001426  64DF               	cpfsgt	indf2,c
  2530   001428  EF18  F00A         	goto	i2u191_41
  2531   00142C  EF1A  F00A         	goto	i2u191_40
  2532   001430                     i2u191_41:
  2533   001430  EF1E  F00A         	goto	i2l3596
  2534   001434                     i2u191_40:
  2535   001434                     i2l3594:
  2536                           
  2537                           ;MCAL_layer/GPIO/gpio.c: 135:     {;MCAL_layer/GPIO/gpio.c: 136:         ret = (STD_Retu
      +                          rnType)0x00;
  2538   001434  0E00               	movlw	0
  2539   001436  6E5C               	movwf	gpio_pin_toggle_logic@ret^0,c
  2540                           
  2541                           ;MCAL_layer/GPIO/gpio.c: 137:     }
  2542   001438  EF42  F00A         	goto	i2l3598
  2543   00143C                     i2l3596:
  2544                           
  2545                           ;MCAL_layer/GPIO/gpio.c: 139:     {;MCAL_layer/GPIO/gpio.c: 140:         (*port_register
      +                          s[_pin_config->port] ^= ((uint8)1 << _pin_config->pin));
  2546   00143C  5057               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2547   00143E  6ED9               	movwf	fsr2l,c
  2548   001440  6ADA               	clrf	fsr2h,c
  2549   001442  0E01               	movlw	1
  2550   001444  26D9               	addwf	fsr2l,f,c
  2551   001446  50DF               	movf	indf2,w,c
  2552   001448  6E58               	movwf	??_gpio_pin_toggle_logic^0,c
  2553   00144A  0E01               	movlw	1
  2554   00144C  6E59               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  2555   00144E  2A58               	incf	??_gpio_pin_toggle_logic^0,f,c
  2556   001450  EF2C  F00A         	goto	i2u192_44
  2557   001454                     i2u192_45:
  2558   001454  90D8               	bcf	status,0,c
  2559   001456  3659               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  2560   001458                     i2u192_44:
  2561   001458  2E58               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  2562   00145A  EF2A  F00A         	goto	i2u192_45
  2563   00145E  5057               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2564   001460  6ED9               	movwf	fsr2l,c
  2565   001462  6ADA               	clrf	fsr2h,c
  2566   001464  50DF               	movf	indf2,w,c
  2567   001466  0D02               	mullw	2
  2568   001468  50F3               	movf	243,w,c
  2569   00146A  0F80               	addlw	low _port_registers
  2570   00146C  6ED9               	movwf	fsr2l,c
  2571   00146E  6ADA               	clrf	fsr2h,c
  2572   001470  CFDE F05A          	movff	postinc2,??_gpio_pin_toggle_logic+2
  2573   001474  CFDD F05B          	movff	postdec2,??_gpio_pin_toggle_logic+3
  2574   001478  C05A  FFD9         	movff	??_gpio_pin_toggle_logic+2,fsr2l
  2575   00147C  C05B  FFDA         	movff	??_gpio_pin_toggle_logic+3,fsr2h
  2576   001480  5059               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  2577   001482  1ADF               	xorwf	indf2,f,c
  2578   001484                     i2l3598:
  2579                           
  2580                           ;MCAL_layer/GPIO/gpio.c: 143:     return ret;
  2581   001484  505C               	movf	gpio_pin_toggle_logic@ret^0,w,c
  2582   001486  0012               	return		;funcret
  2583   001488                     __end_of_gpio_pin_toggle_logic:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _RB7_ISR *****************
  2587 ;; Defined at:
  2588 ;;		line 764 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		None
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_Interrupt_Manager
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text18
  2616   001880                     __ptext18:
  2617                           	callstack 0
  2618   001880                     _RB7_ISR:
  2619                           	callstack 25
  2620   001880                     
  2621                           ;MCAL_layer/Interrupt/external_interrupt.c: 767:     (INTCONbits.RBIF = 0);
  2622   001880  90F2               	bcf	242,0,c	;volatile
  2623   001882  0012               	return		;funcret
  2624   001884                     __end_of_RB7_ISR:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _RB6_ISR *****************
  2628 ;; Defined at:
  2629 ;;		line 749 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		None
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_Interrupt_Manager
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text19
  2657   001884                     __ptext19:
  2658                           	callstack 0
  2659   001884                     _RB6_ISR:
  2660                           	callstack 25
  2661   001884                     
  2662                           ;MCAL_layer/Interrupt/external_interrupt.c: 752:     (INTCONbits.RBIF = 0);
  2663   001884  90F2               	bcf	242,0,c	;volatile
  2664   001886  0012               	return		;funcret
  2665   001888                     __end_of_RB6_ISR:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _RB5_ISR *****************
  2669 ;; Defined at:
  2670 ;;		line 734 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		None
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_Interrupt_Manager
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text20
  2698   001888                     __ptext20:
  2699                           	callstack 0
  2700   001888                     _RB5_ISR:
  2701                           	callstack 25
  2702   001888                     
  2703                           ;MCAL_layer/Interrupt/external_interrupt.c: 737:     (INTCONbits.RBIF = 0);
  2704   001888  90F2               	bcf	242,0,c	;volatile
  2705   00188A  0012               	return		;funcret
  2706   00188C                     __end_of_RB5_ISR:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _RB4_ISR *****************
  2710 ;; Defined at:
  2711 ;;		line 720 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		None
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_Interrupt_Manager
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text21
  2739   00188C                     __ptext21:
  2740                           	callstack 0
  2741   00188C                     _RB4_ISR:
  2742                           	callstack 25
  2743   00188C                     
  2744                           ;MCAL_layer/Interrupt/external_interrupt.c: 723:     (INTCONbits.RBIF = 0);
  2745   00188C  90F2               	bcf	242,0,c	;volatile
  2746   00188E  0012               	return		;funcret
  2747   001890                     __end_of_RB4_ISR:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _INT2_ISR *****************
  2751 ;; Defined at:
  2752 ;;		line 706 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		None
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_Interrupt_Manager
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text22
  2780   001890                     __ptext22:
  2781                           	callstack 0
  2782   001890                     _INT2_ISR:
  2783                           	callstack 25
  2784   001890                     
  2785                           ;MCAL_layer/Interrupt/external_interrupt.c: 709:     (INTCON3bits.INT2IF = 0);
  2786   001890  92F0               	bcf	240,1,c	;volatile
  2787   001892  0012               	return		;funcret
  2788   001894                     __end_of_INT2_ISR:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _INT1_ISR *****************
  2792 ;; Defined at:
  2793 ;;		line 692 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		None
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_Interrupt_Manager
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text23
  2821   001894                     __ptext23:
  2822                           	callstack 0
  2823   001894                     _INT1_ISR:
  2824                           	callstack 25
  2825   001894                     
  2826                           ;MCAL_layer/Interrupt/external_interrupt.c: 695:     (INTCON3bits.INT1IF = 0);
  2827   001894  90F0               	bcf	240,0,c	;volatile
  2828   001896  0012               	return		;funcret
  2829   001898                     __end_of_INT1_ISR:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _INT0_ISR *****************
  2833 ;; Defined at:
  2834 ;;		line 678 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		None
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_Interrupt_Manager
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text24
  2862   001898                     __ptext24:
  2863                           	callstack 0
  2864   001898                     _INT0_ISR:
  2865                           	callstack 25
  2866   001898                     
  2867                           ;MCAL_layer/Interrupt/external_interrupt.c: 681:     (INTCONbits.INT0IF = 0);
  2868   001898  92F2               	bcf	242,1,c	;volatile
  2869   00189A  0012               	return		;funcret
  2870   00189C                     __end_of_INT0_ISR:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _ADC_ISR *****************
  2874 ;; Defined at:
  2875 ;;		line 309 in file "MCAL_layer/ADC/adc.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		None
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_Interrupt_Manager
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text25
  2903   00189C                     __ptext25:
  2904                           	callstack 0
  2905   00189C                     _ADC_ISR:
  2906                           	callstack 25
  2907   00189C                     
  2908                           ;MCAL_layer/ADC/adc.c: 311:     (PIR1bits.ADIF = 0);
  2909   00189C  9C9E               	bcf	158,6,c	;volatile
  2910   00189E  0012               	return		;funcret
  2911   0018A0                     __end_of_ADC_ISR:
  2912                           	callstack 0
  2913                           
  2914                           	psect	rparam
  2915   000000                     
  2916                           	psect	temp
  2917   00006D                     btemp:
  2918                           	callstack 0
  2919   00006D                     	ds	1
  2920   000000                     int$flags	set	btemp
  2921   000000                     wtemp8	set	btemp+1
  2922   000000                     ttemp5	set	btemp+1
  2923   000000                     ttemp6	set	btemp+4
  2924   000000                     ttemp7	set	btemp+8
  2925                           
  2926                           	psect	config
  2927                           
  2928                           ; Padding undefined space
  2929   300000                     	org	3145728
  2930   300000  FF                 	db	255
  2931                           
  2932                           ;Config register CONFIG1H @ 0x300001
  2933                           ;	Oscillator Selection bits
  2934                           ;	OSC = HS, HS oscillator
  2935                           ;	Fail-Safe Clock Monitor Enable bit
  2936                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2937                           ;	Internal/External Oscillator Switchover bit
  2938                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2939   300001                     	org	3145729
  2940   300001  02                 	db	2
  2941                           
  2942                           ;Config register CONFIG2L @ 0x300002
  2943                           ;	Power-up Timer Enable bit
  2944                           ;	PWRT = OFF, PWRT disabled
  2945                           ;	Brown-out Reset Enable bits
  2946                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2947                           ;	Brown Out Reset Voltage bits
  2948                           ;	BORV = 3, Minimum setting
  2949   300002                     	org	3145730
  2950   300002  1F                 	db	31
  2951                           
  2952                           ;Config register CONFIG2H @ 0x300003
  2953                           ;	Watchdog Timer Enable bit
  2954                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2955                           ;	Watchdog Timer Postscale Select bits
  2956                           ;	WDTPS = 32768, 1:32768
  2957   300003                     	org	3145731
  2958   300003  1E                 	db	30
  2959                           
  2960                           ; Padding undefined space
  2961   300004                     	org	3145732
  2962   300004  FF                 	db	255
  2963                           
  2964                           ;Config register CONFIG3H @ 0x300005
  2965                           ;	CCP2 MUX bit
  2966                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2967                           ;	PORTB A/D Enable bit
  2968                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2969                           ;	Low-Power Timer1 Oscillator Enable bit
  2970                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2971                           ;	MCLR Pin Enable bit
  2972                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2973   300005                     	org	3145733
  2974   300005  81                 	db	129
  2975                           
  2976                           ;Config register CONFIG4L @ 0x300006
  2977                           ;	Stack Full/Underflow Reset Enable bit
  2978                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2979                           ;	Single-Supply ICSP Enable bit
  2980                           ;	LVP = OFF, Single-Supply ICSP disabled
  2981                           ;	Extended Instruction Set Enable bit
  2982                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2983                           ;	Background Debugger Enable bit
  2984                           ;	DEBUG = 0x1, unprogrammed default
  2985   300006                     	org	3145734
  2986   300006  81                 	db	129
  2987                           
  2988                           ; Padding undefined space
  2989   300007                     	org	3145735
  2990   300007  FF                 	db	255
  2991                           
  2992                           ;Config register CONFIG5L @ 0x300008
  2993                           ;	Code Protection bit
  2994                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2995                           ;	Code Protection bit
  2996                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2997                           ;	Code Protection bit
  2998                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2999                           ;	Code Protection bit
  3000                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3001   300008                     	org	3145736
  3002   300008  0F                 	db	15
  3003                           
  3004                           ;Config register CONFIG5H @ 0x300009
  3005                           ;	Boot Block Code Protection bit
  3006                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3007                           ;	Data EEPROM Code Protection bit
  3008                           ;	CPD = OFF, Data EEPROM not code-protected
  3009   300009                     	org	3145737
  3010   300009  C0                 	db	192
  3011                           
  3012                           ;Config register CONFIG6L @ 0x30000A
  3013                           ;	Write Protection bit
  3014                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3015                           ;	Write Protection bit
  3016                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3017                           ;	Write Protection bit
  3018                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3019                           ;	Write Protection bit
  3020                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3021   30000A                     	org	3145738
  3022   30000A  0F                 	db	15
  3023                           
  3024                           ;Config register CONFIG6H @ 0x30000B
  3025                           ;	Configuration Register Write Protection bit
  3026                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3027                           ;	Boot Block Write Protection bit
  3028                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3029                           ;	Data EEPROM Write Protection bit
  3030                           ;	WRTD = OFF, Data EEPROM not write-protected
  3031   30000B                     	org	3145739
  3032   30000B  E0                 	db	224
  3033                           
  3034                           ;Config register CONFIG7L @ 0x30000C
  3035                           ;	Table Read Protection bit
  3036                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3037                           ;	Table Read Protection bit
  3038                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3039                           ;	Table Read Protection bit
  3040                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3041                           ;	Table Read Protection bit
  3042                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3043   30000C                     	org	3145740
  3044   30000C  0F                 	db	15
  3045                           
  3046                           ;Config register CONFIG7H @ 0x30000D
  3047                           ;	Boot Block Table Read Protection bit
  3048                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3049   30000D                     	org	3145741
  3050   30000D  40                 	db	64
  3051                           tosu	equ	0xFFF
  3052                           tosh	equ	0xFFE
  3053                           tosl	equ	0xFFD
  3054                           stkptr	equ	0xFFC
  3055                           pclatu	equ	0xFFB
  3056                           pclath	equ	0xFFA
  3057                           pcl	equ	0xFF9
  3058                           tblptru	equ	0xFF8
  3059                           tblptrh	equ	0xFF7
  3060                           tblptrl	equ	0xFF6
  3061                           tablat	equ	0xFF5
  3062                           prodh	equ	0xFF4
  3063                           prodl	equ	0xFF3
  3064                           indf0	equ	0xFEF
  3065                           postinc0	equ	0xFEE
  3066                           postdec0	equ	0xFED
  3067                           preinc0	equ	0xFEC
  3068                           plusw0	equ	0xFEB
  3069                           fsr0h	equ	0xFEA
  3070                           fsr0l	equ	0xFE9
  3071                           wreg	equ	0xFE8
  3072                           indf1	equ	0xFE7
  3073                           postinc1	equ	0xFE6
  3074                           postdec1	equ	0xFE5
  3075                           preinc1	equ	0xFE4
  3076                           plusw1	equ	0xFE3
  3077                           fsr1h	equ	0xFE2
  3078                           fsr1l	equ	0xFE1
  3079                           bsr	equ	0xFE0
  3080                           indf2	equ	0xFDF
  3081                           postinc2	equ	0xFDE
  3082                           postdec2	equ	0xFDD
  3083                           preinc2	equ	0xFDC
  3084                           plusw2	equ	0xFDB
  3085                           fsr2h	equ	0xFDA
  3086                           fsr2l	equ	0xFD9
  3087                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        43
    BSS         107
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18     108
    BANK0           128     17      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Result_Format_Configuration@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_Voltage_Reference_Configuration@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ecu_led_initializ@_led_config	PTR const struct . size(1) Largest target is 3
		 -> led1(COMRAM[3]), 

    ecu_led_toggle@_led_config	PTR const struct . size(1) Largest target is 3
		 -> led1(COMRAM[3]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[4]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[4]), ecu_led_initializ@_pin_config(BANK0[4]), ecu_relay_initializ@relay_init(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[4]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[4]), ecu_led_initializ@_pin_config(BANK0[4]), ecu_relay_initializ@relay_init(COMRAM[4]), 

    gpio_pin_toggle_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_led_toggle@_pin_config(COMRAM[4]), ecu_relay_toggle@relay_init(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[4]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[4]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[4]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[4]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[4]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[4]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[4]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[4]), 
		 -> ecu_led_initializ@_pin_config(BANK0[4]), ecu_led_turn_off@_pin_config(COMRAM[4]), ecu_led_turn_on@_pin_config(COMRAM[4]), ecu_relay_initializ@relay_init(COMRAM[4]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[4]), ecu_relay_turn_on@relay_init(COMRAM[4]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@_interrupt_RBx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    INTx_Set_Interrupt_Handler@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1549$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S1591$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S2126$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    S2852$buffer	PTR unsigned char  size(2) Largest target is 0

    S2852$source	PTR const unsigned char  size(2) Largest target is 0

    S910$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    timer0$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    Timer0_Init@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_Init@timer0_confg$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    Timer0_Interrupt_init@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_Mode@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_Mode@timer0_confg$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    Timer0_preloaded_value@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_preloaded_value@timer0_confg$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    Timer0_Prescaler_config@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_Prescaler_config@timer0_confg$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    Timer0_Register_Size@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_Register_Size@timer0_confg$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    Timer0_Select_Edge@timer0_confg	PTR const struct . size(1) Largest target is 10
		 -> timer0(BANK0[10]), 

    Timer0_Select_Edge@timer0_confg$Timer0_Interrupt_Handlar	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    TMR_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager in COMRAM

    _ADC_Interrupt_function->_ecu_led_toggle
    _ecu_led_toggle->_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _application_initializ->_ecu_led_initializ
    _ecu_led_initializ->_gpio_pin_Initialization
    _gpio_pin_Initialization->_gpio_pin_write_logic
    _Timer0_Init->_Timer0_Mode
    _Timer0_Mode->_Timer0_Select_Edge

Critical Paths under _Interrupt_Manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9156
              _application_initializ
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0    9156
                        _Timer0_Init
                  _ecu_led_initializ
 ---------------------------------------------------------------------------------
 (2) _ecu_led_initializ                                    6     5      1    7993
                                             11 BANK0      6     5      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    7552
                                              8 BANK0      3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 8     6      2    5297
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     617
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (2) _Timer0_Init                                          2     1      1    1163
                                              6 BANK0      2     1      1
              _Timer0_Interrupt_init
                        _Timer0_Mode
            _Timer0_Prescaler_config
               _Timer0_Register_Size
             _Timer0_preloaded_value
 ---------------------------------------------------------------------------------
 (3) _Timer0_preloaded_value                               3     2      1     183
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Register_Size                                 3     2      1     121
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Prescaler_config                              3     2      1     152
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Mode                                          3     2      1     273
                                              3 BANK0      3     2      1
                 _Timer0_Select_Edge
 ---------------------------------------------------------------------------------
 (4) _Timer0_Select_Edge                                   3     2      1     121
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Interrupt_init                                1     0      1      90
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Manager                                    6     6      0     552
                                             12 COMRAM     6     6      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     552
                                NULL *
             _ADC_Interrupt_function *
 ---------------------------------------------------------------------------------
 (7) _ADC_Interrupt_function                               0     0      0     552
                     _ecu_led_toggle
 ---------------------------------------------------------------------------------
 (8) _ecu_led_toggle                                       6     5      1     552
                                              6 COMRAM     6     5      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (9) _gpio_pin_toggle_logic                                6     5      1     264
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ
     _Timer0_Init
       _Timer0_Interrupt_init
       _Timer0_Mode
         _Timer0_Select_Edge
       _Timer0_Prescaler_config
       _Timer0_Register_Size
       _Timer0_preloaded_value
     _ecu_led_initializ
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic

 _Interrupt_Manager (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
     NULL(Fake) *
     _ADC_Interrupt_function *
       _ecu_led_toggle
         _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     11      4E       5       60.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     12      6C       1       85.7%
BITBIGSFRhhllhh     18      0       0      37        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhhlll      10      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRllhll       7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      44        0.0%
DATA                 0      0      BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 26 17:13:49 2024

            Timer0_Mode@timer0_confg 00C0                  ??_Interrupt_Manager 0063  
     __end_of_ADC_Interrupt_function 186A                                  l321 14A2  
                                l325 14EA                                  l607 1404  
                                l628 1668                                  l588 12FC  
                                l966 156A                                  l968 15AA  
                                l993 166E                                  l994 1670  
                                l995 1672                                  l997 16C6  
                    __end_of_ADC_ISR 18A0                                  _ret 006C  
                                tosl 0FFD                                  wreg 0FE8  
                    __end_of_RB4_ISR 1890                      __end_of_RB5_ISR 188C  
                    __end_of_RB6_ISR 1888                      __end_of_RB7_ISR 1884  
                               l1001 1760                                 l1002 1762  
                               l1003 1764                                 l1005 17A0  
                               l1013 1714                                 l1021 175A  
                               l1024 187E                                 l1009 16CC  
                               l1017 171A                                 l1018 171C  
                               l1050 186E                                 l1019 171E  
                               l1027 17E0                                 l1051 186E  
                               l1056 1858                                 l5040 149A  
                               l5050 14DC                                 l5042 14B2  
                               l5060 156C                                 l5044 14BC  
                               l5052 14E8                                 l5062 1584  
                               l5070 15A6                                 l5046 14CA  
                               l5038 1488                                 l5064 158C  
                               l5056 154C                                 l5048 14CE  
                               l5136 1840                                 l5066 159C  
                               l5058 1562                                 l5138 184C  
                               l5068 15A4              ??_application_initializ 0069  
                               l4900 1640                                 l4910 16AE  
                               l4902 1666                                 l4920 1724  
                               l4840 12FE                                 l4930 16CE  
                               l4906 166A                                 l4842 1314  
                               l4932 16D6                                 l4908 1678  
                               l4852 13D8                                 l4844 132E  
                               l4934 16D8                                 l4918 1716  
                               l4870 1278                                 l4862 11EC  
                               l4846 1336                                 l4854 1402  
                               l4944 1876                                 l4936 16DE  
                               l4928 16C8                                 l4864 1202  
                               l4848 138A                                 l4946 17A2  
                               l4874 12C6                                 l4866 121C  
                               l4884 175C                                 l4868 1224  
                               l4876 12FA                                 l4886 176A  
                               l5950 1698                                 l4894 160C  
                               l5782 186A                                 l5952 16FE  
                               l5944 13EC                                 l4896 161E  
                               l5954 178A                                 l5946 12E4  
                               l4898 1638                                 l5948 1744  
                               STR_1 1011                                 _LATA 0F89  
                               _LATB 0F8A                                 _LATC 0F8B  
                               _LATD 0F8C                                 _LATE 0F8D  
                               u3304 1240                                 u3240 1314  
                               u3320 161E                                 u3305 123C  
                               u3241 1310                                 u3321 161A  
                               u3314 1294                                 u3250 132E  
                               u3330 1638                                 u3315 1290  
                               u3251 132A                                 u3331 1634  
                               u3430 149A                                 u3431 1496  
                               u3440 1562                                 u3280 1202  
                               u3264 1352                                 u3441 155E  
                               u3281 11FE                                 u3265 134E  
                               u3290 121C                                 u3274 13A6  
                               u3291 1218                                 u3275 13A2  
          __end_of_Interrupt_Manager 11EC                                 _led1 0069  
                               _flag 0041                                 _main 186A  
                               fsr2h 0FDA                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
           ?_gpio_pin_direction_init 00BD                                 btemp 006D  
                               prodh 0FF4                                 prodl 0FF3  
                               start 000E                 _RB7_InterruptHandler 0047  
                       ___param_bank 0000               ?_gpio_pin_toggle_logic 0057  
               _gpio_pin_write_logic 12FE                     __end_of_INT0_ISR 189C  
                   __end_of_INT1_ISR 1898                     __end_of_INT2_ISR 1894  
                              ?_main 0057                                _EEADR 0FA9  
                              i2l342 15C4                                i2l512 189E  
                              i2l346 160A                                i2l621 1486  
                              i2l941 11D0                                i2l871 1896  
                              i2l867 189A                                i2l875 1892  
                              i2l883 188A                                i2l891 1882  
                              i2l879 188E                                i2l887 1886  
                              i2l989 1816          ecu_dc_motor_initializ@F3064 003D  
        ecu_dc_motor_initializ@F3066 0039                                _TMR0H 0FD7  
                              _TMR0L 0FD6                                _PORTA 0F80  
                              _PORTB 0F81                                _PORTC 0F82  
                              _PORTD 0F83                                _PORTE 0F84  
                              _TRISA 0F92                                _TRISB 0F93  
                              _TRISC 0F94                                _TRISD 0F95  
                              _TRISE 0F96                     __end_of_TMR0_ISR 1818  
                              pclath 0FFA                                pclatu 0FFB  
                              tablat 0FF5                                ttemp5 006E  
                              ttemp6 0071                                ttemp7 0075  
                              status 0FD8                                wtemp8 006E  
                    __initialization 14EC                         __end_of_main 1876  
              ?_gpio_pin_write_logic 00BD              _Timer0_Prescaler_config 166A  
                ecu_led_toggle@F3076 0011                            ??_ADC_ISR 0057  
                      _lat_registers 008A                               ??_main 0069  
            _gpio_pin_Initialization 160C                        __activetblptr 0003  
              _TMR_Interrupt_Handler 0045                            ??_RB4_ISR 0057  
                          ??_RB5_ISR 0057                            ??_RB6_ISR 0057  
                          ??_RB7_ISR 0057                               _ADRESH 0FC4  
                             _EEADRH 0FAA                               _ADRESL 0FC3  
                             _EEDATA 0FA8                               _EECON2 0FA7  
                             i2l2120 189C                               i2l1059 1868  
                             i2l2160 1898                               i2l2164 1894  
                             i2l2172 188C                               i2l2180 1884  
                             i2l2168 1890                               i2l2176 1888  
                             i2l2184 1880                               i2l3630 15EC  
                             i2l3622 15AC                               i2l3632 15F0  
                             i2l3624 15BC                               i2l3634 15FE  
                             i2l3626 15D4                               i2l3802 185A  
                             i2l3628 15DE                               i2l3636 1608  
                             i2l3804 185E                               i2l3590 1406  
                             i2l3592 141A                               i2l4800 118C  
                             i2l3594 1434                               i2l4810 11BE  
                             i2l4802 1190                               i2l3596 143C  
                             i2l4812 11CC                               i2l4804 119E  
                             i2l4740 104C                               i2l3598 1484  
                             i2l3870 17E4                               i2l4806 11AC  
                             i2l4750 107E                               i2l4742 1050  
                             i2l3872 17E8                               i2l4808 11B0  
                             i2l4760 10BA                               i2l4752 108C  
                             i2l4744 105E                               i2l4736 1030  
                             i2l3874 17EC                               i2l4770 10EC  
                             i2l4762 10BE                               i2l4746 106C  
                             i2l4754 1090                               i2l4738 103E  
                             i2l3876 17FE                               i2l3868 17E2  
                             i2l4780 111E                               i2l4772 10FA  
                             i2l4764 10CC                               i2l4756 109E  
                             i2l4748 107A                               i2l4782 112C  
                             i2l4790 1150                               i2l4774 10FE  
                             i2l4758 10AC                               i2l4766 10D0  
                             i2l4792 115E                               i2l4784 113A  
                             i2l4776 110C                               i2l4768 10DE  
                             i2l4794 116C                               i2l4786 113E  
                             i2l4778 1110                               i2l4796 1170  
                             i2l4788 114C                               i2l4798 117E  
          ecu_led_toggle@_led_config 005D     gpio_pin_toggle_logic@_pin_config 0057  
                      ??_Timer0_Init 0069                        ??_Timer0_Mode 00C1  
           gpio_pin_toggle_logic@ret 005C              ??_Timer0_Interrupt_init 0069  
                             clear_0 1530                               clear_1 153C  
                             _timer0 009E                               isa$std 0001  
                       __pdataCOMRAM 0069                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                           __accesstop 0080  
            __end_of__initialization 1542                            ?_INT0_ISR 0057  
                          ?_INT1_ISR 0057                            ?_INT2_ISR 0057  
          ecu_led_toggle@_pin_config 005F                        ___rparam_used 0001  
          ??_Timer0_Prescaler_config 00BE               ??_gpio_pin_write_logic 00BF  
                     __pcstackCOMRAM 0057                         __pidataBANK0 1818  
                          ?_TMR0_ISR 0057            ??_gpio_pin_Initialization 00C6  
                    _preloaded_value 0043                  __end_of_Timer0_Init 15AC  
                __end_of_Timer0_Mode 1716         ecu_dc_motor_move_right@F3071 0035  
       ecu_dc_motor_move_right@F3073 0031                           __pbssBANK0 00A8  
      __end_of_application_initializ 185A                _INT0_InterruptHandler 0053  
                         ??_INT0_ISR 0057                           ??_INT1_ISR 0057  
                         ??_INT2_ISR 0057                           __pnvCOMRAM 006C  
            ??_gpio_pin_toggle_logic 0058   gpio_pin_direction_init@_pin_config 00BD  
                         ??_TMR0_ISR 0063         __end_of_Timer0_Register_Size 175C  
                            _ADC_ISR 189C                              _RB4_ISR 188C  
                            _RB5_ISR 1888                              _RB6_ISR 1884  
                            _RB7_ISR 1880      __end_of_gpio_pin_Initialization 166A  
                     _tris_registers 0094                 _ADC_InterruptHandler 0055  
                            __Hparam 0000                          _Timer0_Init 154C  
                        _Timer0_Mode 16C8                              __Lparam 0000  
                       __psmallconst 1000                              __pcinit 14EC  
                            __ramtop 1000                              __ptext0 186A  
                            __ptext1 1840                              __ptext2 1488  
                            __ptext3 160C                              __ptext4 12FE  
                            __ptext5 11EC                              __ptext6 154C  
                            __ptext7 17A2                              __ptext8 1716  
                            __ptext9 166A                            _T0CONbits 0FD5  
           ??_Timer0_preloaded_value 00BE   gpio_pin_Initialization@_pin_config 00C5  
                     __pintcode_body 1016                 end_of_initialization 1542  
                     _ecu_led_toggle 15AC                              int_func 1016  
           ??_ADC_Interrupt_function 0063                              postdec1 0FE5  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc2 0FDE        __end_of_Timer0_Interrupt_init 1880  
     Timer0_Select_Edge@timer0_confg 00BD                _INT1_InterruptHandler 0051  
                          _PORTBbits 0F81               __end_of_ecu_led_toggle 160C  
  Timer0_Interrupt_init@timer0_confg 00BD                 _Timer0_Register_Size 1716  
            Timer0_Init@timer0_confg 00C3  Timer0_Prescaler_config@timer0_confg 00BD  
              ecu_led_turn_off@F3071 0015        convert_uint32_to_string@F3242 00A8  
      convert_uint16_to_string@F3235 00B3                    ecu_led_toggle@ret 005E  
            _gpio_pin_direction_init 11EC                        __pidataCOMRAM 18A0  
           ecu_relay_initializ@F3061 000D                  start_initialization 14EC  
        ecu_dc_motor_move_left@F3080 0029          ecu_dc_motor_move_left@F3078 002D  
               _RB4_InterruptHandler 004D                    _ecu_led_initializ 1488  
              ?_Timer0_Register_Size 00BD                      ?_ecu_led_toggle 005D  
                 ?_ecu_led_initializ 00C8           __end_of_Timer0_Select_Edge 17A2  
                ??_ecu_led_initializ 0069        __end_of_gpio_pin_toggle_logic 1488  
                        __pdataBANK0 0080         convert_uint8_to_string@F3228 00B9  
                           ?_ADC_ISR 0057                             ?_RB4_ISR 0057  
                           ?_RB5_ISR 0057                             ?_RB6_ISR 0057  
                           ?_RB7_ISR 0057                          __pbssCOMRAM 0001  
          __end_of_ecu_led_initializ 14EC                        __pcstackBANK0 00BD  
              _INT2_InterruptHandler 004F             ?_Timer0_Prescaler_config 00BD  
             _Timer0_preloaded_value 17A2                _application_initializ 1840  
                       ?_Timer0_Init 00C3                         ?_Timer0_Mode 00C0  
           ?_gpio_pin_Initialization 00C5            ??_gpio_pin_direction_init 00BE  
                          __pintcode 0008      gpio_pin_write_logic@_pin_config 00BD  
          gpio_pin_write_logic@logic 00BE                          __smallconst 1000  
             _ADC_Interrupt_function 185A               ??_Timer0_Register_Size 00BE  
                           _INT0_ISR 1898                             _INT1_ISR 1894  
                           _INT2_ISR 1890                             _PIE1bits 0F9D  
                     _keypad_sampels 1001                 ecu_led_initializ@ret 00C9  
              ecu_relay_toggle@F3076 0001                             i2u300_40 105E  
                           i2u300_41 105A                             i2u213_40 17FE  
                           i2u301_40 106C                             i2u213_41 17FA  
                           i2u301_41 1068                             i2u310_40 10FA  
                           i2u302_40 107A                             i2u310_41 10F6  
                           i2u302_41 1076           gpio_pin_Initialization@ret 00C7  
                           i2u214_48 1804                             i2u311_40 110C  
                           i2u303_40 108C                             i2u214_49 1816  
                           i2u311_41 1108                             i2u303_41 1088  
                           i2u320_40 119E                             i2u312_40 111E  
                           i2u304_40 109E                             i2u320_41 119A  
                           i2u312_41 111A                             i2u304_41 109A  
                           i2u321_40 11AC                             i2u313_40 112C  
                           i2u305_40 10AC                             i2u321_41 11A8  
                           i2u313_41 1128                             i2u305_41 10A8  
                           i2u322_40 11BE                             i2u314_40 113A  
                           i2u306_40 10BA                             i2u322_41 11BA  
                           i2u314_41 1136                             i2u306_41 10B6  
                           i2u323_40 11CC                             i2u315_40 114C  
                           i2u307_40 10CC                             i2u323_41 11C8  
                           i2u315_41 1148                             i2u307_41 10C8  
                           i2u316_40 115E                             i2u308_40 10DE  
                           i2u316_41 115A                             i2u308_41 10DA  
                           i2u317_40 116C                             i2u309_40 10EC  
                           i2u317_41 1168                             i2u309_41 10E8  
                           i2u190_40 141A                             i2u318_40 117E  
                           i2u190_41 1416                             i2u318_41 117A  
                           i2u191_40 1434                             i2u319_40 118C  
                           i2u191_41 1430                             i2u319_41 1188  
                           i2u192_44 1458                             i2u192_45 1454  
   Timer0_Register_Size@timer0_confg 00BD                             _PIR1bits 0F9E  
                           i2u195_40 15BC                             i2u195_41 15B8  
               _RB5_InterruptHandler 004B                             i2u298_40 103E  
                           i2u298_41 103A                             i2u299_40 104C  
                           i2u299_41 1048                             _TMR0_ISR 17E2  
                         _ADCON0bits 0FC2                           _ADCON1bits 0FC1  
                         _ADCON2bits 0FC0                 ecu_led_turn_on@F3066 0019  
    __end_of_gpio_pin_direction_init 12FE      __end_of_Timer0_Prescaler_config 16C8  
            gpio_pin_write_logic@ret 00C4                          _INTCON2bits 0FF1  
                        _INTCON3bits 0FF0                            copy_data0 1500  
             __end_of_keypad_sampels 1011               ?_application_initializ 0057  
                         _EECON1bits 0FA6                             __Hrparam 0000  
                           __Lrparam 0000   Timer0_preloaded_value@timer0_confg 00BD  
              _Timer0_Interrupt_init 1876                     ??_ecu_led_toggle 005E  
                           __ptext10 16C8                             __ptext11 175C  
                           __ptext20 1888                             __ptext12 1876  
                           __ptext21 188C                             __ptext22 1890  
                           __ptext14 17E2                             __ptext23 1894  
                           __ptext15 185A                             __ptext24 1898  
                           __ptext16 15AC                             __ptext25 189C  
                           __ptext17 1406                             __ptext18 1880  
                           __ptext19 1884               ecu_dc_motor_stop@F3085 0025  
             ecu_dc_motor_stop@F3087 0021              ecu_relay_turn_off@F3071 0005  
                           isa$xinst 0000         ecu_led_initializ@_led_config 00C8  
                           int$flags 006D               ecu_led_initializ@F3061 001D  
                 _Timer0_Select_Edge 175C                       Timer0_Init@ret 00C4  
                         _INTCONbits 0FF2                 _RB6_InterruptHandler 0049  
                ?_Timer0_Select_Edge 00BD         __end_of_gpio_pin_write_logic 1406  
                           intlevel2 0000              ?_Timer0_preloaded_value 00BD  
             ecu_relay_turn_on@F3066 0009                 ??_Timer0_Select_Edge 00BE  
       ecu_led_initializ@_pin_config 00CA                _gpio_pin_toggle_logic 1406  
             ?_Timer0_Interrupt_init 00BD              ?_ADC_Interrupt_function 0057  
                     _port_registers 0080           gpio_pin_direction_init@ret 00C3  
     __end_of_Timer0_preloaded_value 17E2                    _Interrupt_Manager 0008  
                 ?_Interrupt_Manager 0057  
