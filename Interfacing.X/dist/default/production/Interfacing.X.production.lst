

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 14 04:30:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 17/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0014F6                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   0014F6  80                 	db	128
    65   0014F7  0F                 	db	15
    66   0014F8  81                 	db	129
    67   0014F9  0F                 	db	15
    68   0014FA  82                 	db	130
    69   0014FB  0F                 	db	15
    70   0014FC  83                 	db	131
    71   0014FD  0F                 	db	15
    72   0014FE  84                 	db	132
    73   0014FF  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   001500  89                 	db	137
    77   001501  0F                 	db	15
    78   001502  8A                 	db	138
    79   001503  0F                 	db	15
    80   001504  8B                 	db	139
    81   001505  0F                 	db	15
    82   001506  8C                 	db	140
    83   001507  0F                 	db	15
    84   001508  8D                 	db	141
    85   001509  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   00150A  92                 	db	146
    89   00150B  0F                 	db	15
    90   00150C  93                 	db	147
    91   00150D  0F                 	db	15
    92   00150E  94                 	db	148
    93   00150F  0F                 	db	15
    94   001510  95                 	db	149
    95   001511  0F                 	db	15
    96   001512  96                 	db	150
    97   001513  0F                 	db	15
    98                           
    99                           ;initializer for _keypad_1
   100   001514  02                 	db	2
   101   001515  0A                 	db	10
   102   001516  12                 	db	18
   103   001517  1A                 	db	26
   104   001518  62                 	db	98
   105   001519  6A                 	db	106
   106   00151A  72                 	db	114
   107   00151B  7A                 	db	122
   108                           
   109                           	psect	smallconst
   110   001000                     __psmallconst:
   111                           	callstack 0
   112   001000  00                 	db	0
   113   001001                     _keypad_sampels:
   114                           	callstack 0
   115   001001  37                 	db	55
   116   001002  38                 	db	56
   117   001003  39                 	db	57
   118   001004  2F                 	db	47
   119   001005  34                 	db	52
   120   001006  35                 	db	53
   121   001007  36                 	db	54
   122   001008  2A                 	db	42
   123   001009  31                 	db	49
   124   00100A  32                 	db	50
   125   00100B  33                 	db	51
   126   00100C  2D                 	db	45
   127   00100D  23                 	db	35
   128   00100E  30                 	db	48
   129   00100F  3D                 	db	61
   130   001010  2B                 	db	43
   131   001011                     __end_of_keypad_sampels:
   132                           	callstack 0
   133   001011  00                 	db	0	; dummy byte at the end
   134   000000                     
   135                           	psect	nvCOMRAM
   136   00004B                     __pnvCOMRAM:
   137                           	callstack 0
   138   00004B                     _ret:
   139                           	callstack 0
   140   00004B                     	ds	1
   141   000000                     _PORTE	set	3972
   142   000000                     _PORTD	set	3971
   143   000000                     _PORTC	set	3970
   144   000000                     _PORTB	set	3969
   145   000000                     _PORTA	set	3968
   146   000000                     _LATA	set	3977
   147   000000                     _TRISA	set	3986
   148   000000                     _TRISE	set	3990
   149   000000                     _TRISD	set	3989
   150   000000                     _TRISC	set	3988
   151   000000                     _TRISB	set	3987
   152   000000                     _LATE	set	3981
   153   000000                     _LATD	set	3980
   154   000000                     _LATC	set	3979
   155   000000                     _LATB	set	3978
   156                           
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160   0014C0                     __pcinit:
   161                           	callstack 0
   162   0014C0                     start_initialization:
   163                           	callstack 0
   164   0014C0                     __initialization:
   165                           	callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (38 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169   0014C0  0EF6               	movlw	low __pidataCOMRAM
   170   0014C2  6EF6               	movwf	tblptrl,c
   171   0014C4  0E14               	movlw	high __pidataCOMRAM
   172   0014C6  6EF7               	movwf	tblptrh,c
   173   0014C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174   0014CA  6EF8               	movwf	tblptru,c
   175   0014CC  EE00  F001         	lfsr	0,__pdataCOMRAM
   176   0014D0  EE10 F026          	lfsr	1,38
   177   0014D4                     copy_data0:
   178   0014D4  0009               	tblrd		*+
   179   0014D6  CFF5 FFEE          	movff	tablat,postinc0
   180   0014DA  50E5               	movf	postdec1,w,c
   181   0014DC  50E1               	movf	fsr1l,w,c
   182   0014DE  E1FA               	bnz	copy_data0
   183                           
   184                           ; Clear objects allocated to COMRAM (17 bytes)
   185   0014E0  EE00  F03A         	lfsr	0,__pbssCOMRAM
   186   0014E4  0E11               	movlw	17
   187   0014E6                     clear_0:
   188   0014E6  6AEE               	clrf	postinc0,c
   189   0014E8  06E8               	decf	wreg,f,c
   190   0014EA  E1FD               	bnz	clear_0
   191   0014EC                     end_of_initialization:
   192                           	callstack 0
   193   0014EC                     __end_of__initialization:
   194                           	callstack 0
   195   0014EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196   0014EE  6EF8               	movwf	tblptru,c
   197   0014F0  0100               	movlb	0
   198   0014F2  EF8E  F00A         	goto	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMRAM
   201   00003A                     __pbssCOMRAM:
   202                           	callstack 0
   203   00003A                     ecu_relay_toggle@F2909:
   204                           	callstack 0
   205   00003A                     	ds	1
   206   00003B                     ecu_relay_turn_off@F2904:
   207                           	callstack 0
   208   00003B                     	ds	1
   209   00003C                     ecu_relay_turn_on@F2899:
   210                           	callstack 0
   211   00003C                     	ds	1
   212   00003D                     ecu_relay_initializ@F2894:
   213                           	callstack 0
   214   00003D                     	ds	1
   215   00003E                     ecu_led_toggle@F2909:
   216                           	callstack 0
   217   00003E                     	ds	1
   218   00003F                     ecu_led_turn_off@F2904:
   219                           	callstack 0
   220   00003F                     	ds	1
   221   000040                     ecu_led_turn_on@F2899:
   222                           	callstack 0
   223   000040                     	ds	1
   224   000041                     ecu_led_initializ@F2894:
   225                           	callstack 0
   226   000041                     	ds	1
   227   000042                     ecu_dc_motor_stop@F2920:
   228                           	callstack 0
   229   000042                     	ds	1
   230   000043                     ecu_dc_motor_stop@F2918:
   231                           	callstack 0
   232   000043                     	ds	1
   233   000044                     ecu_dc_motor_move_left@F2913:
   234                           	callstack 0
   235   000044                     	ds	1
   236   000045                     ecu_dc_motor_move_left@F2911:
   237                           	callstack 0
   238   000045                     	ds	1
   239   000046                     ecu_dc_motor_move_right@F2906:
   240                           	callstack 0
   241   000046                     	ds	1
   242   000047                     ecu_dc_motor_move_right@F2904:
   243                           	callstack 0
   244   000047                     	ds	1
   245   000048                     ecu_dc_motor_initializ@F2899:
   246                           	callstack 0
   247   000048                     	ds	1
   248   000049                     ecu_dc_motor_initializ@F2897:
   249                           	callstack 0
   250   000049                     	ds	1
   251   00004A                     _keypad_value:
   252                           	callstack 0
   253   00004A                     	ds	1
   254                           
   255                           	psect	dataCOMRAM
   256   000001                     __pdataCOMRAM:
   257                           	callstack 0
   258   000001                     _port_registers:
   259                           	callstack 0
   260   000001                     	ds	10
   261   00000B                     _lat_registers:
   262                           	callstack 0
   263   00000B                     	ds	10
   264   000015                     _tris_registers:
   265                           	callstack 0
   266   000015                     	ds	10
   267   00001F                     _keypad_1:
   268                           	callstack 0
   269   00001F                     	ds	8
   270                           
   271                           	psect	cstackCOMRAM
   272   000027                     __pcstackCOMRAM:
   273                           	callstack 0
   274   000027                     gpio_pin_direction_init@_pin_config:
   275                           	callstack 0
   276   000027                     gpio_pin_write_logic@_pin_config:
   277                           	callstack 0
   278   000027                     gpio_pin_read_logic@_pin_config:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x0
   282   000027                     	ds	1
   283   000028                     ??_gpio_pin_direction_init:
   284   000028                     gpio_pin_write_logic@logic:
   285                           	callstack 0
   286   000028                     gpio_pin_read_logic@logic:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x1
   290   000028                     	ds	1
   291   000029                     ??_gpio_pin_write_logic:
   292   000029                     ??_gpio_pin_read_logic:
   293                           
   294                           ; 1 bytes @ 0x2
   295   000029                     	ds	4
   296   00002D                     gpio_pin_direction_init@ret:
   297                           	callstack 0
   298   00002D                     gpio_pin_read_logic@ret:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x6
   302   00002D                     	ds	1
   303   00002E                     gpio_pin_write_logic@ret:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x7
   307   00002E                     	ds	1
   308   00002F                     keypad_get_value@_keypad_config:
   309                           	callstack 0
   310   00002F                     gpio_pin_Initialization@_pin_config:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x8
   314   00002F                     	ds	1
   315   000030                     ??_gpio_pin_Initialization:
   316   000030                     keypad_get_value@value:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x9
   320   000030                     	ds	1
   321   000031                     ??_keypad_get_value:
   322   000031                     gpio_pin_Initialization@ret:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xA
   326   000031                     	ds	1
   327   000032                     keypad_initialize@_keypad_config:
   328                           	callstack 0
   329   000032                     keypad_get_value@ret:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333   000032                     	ds	1
   334   000033                     keypad_initialize@ret:
   335                           	callstack 0
   336   000033                     keypad_get_value@colum_logic:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xC
   340   000033                     	ds	1
   341   000034                     keypad_initialize@i:
   342                           	callstack 0
   343   000034                     keypad_get_value@j:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xD
   347   000034                     	ds	2
   348   000036                     keypad_initialize@j:
   349                           	callstack 0
   350   000036                     keypad_get_value@i:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xF
   354   000036                     	ds	2
   355   000038                     keypad_get_value@k:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x11
   359   000038                     	ds	2
   360   00003A                     
   361                           ; 1 bytes @ 0x13
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 27 in file "application.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  2  312[None  ] int 
   374 ;; Registers used:
   375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels required when called: 4
   387 ;; This function calls:
   388 ;;		_application_initializ
   389 ;;		_keypad_get_value
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text0
   396   00151C                     __ptext0:
   397                           	callstack 0
   398   00151C                     _main:
   399                           	callstack 27
   400   00151C                     
   401                           ;application.c: 29:     application_initializ();
   402   00151C  EC9B  F00A         	call	_application_initializ	;wreg free
   403   001520                     l1957:
   404                           
   405                           ;application.c: 32:     {;application.c: 33:         ret = keypad_get_value(&keypad_1 , 
      +                          &keypad_value);
   406   001520  0E1F               	movlw	low _keypad_1
   407   001522  6E2F               	movwf	keypad_get_value@_keypad_config^0,c
   408   001524  0E4A               	movlw	low _keypad_value
   409   001526  6E30               	movwf	keypad_get_value@value^0,c
   410   001528  EC1A  F009         	call	_keypad_get_value	;wreg free
   411   00152C  6E4B               	movwf	_ret^0,c
   412   00152E  EF90  F00A         	goto	l1957
   413   001532  EF00  F000         	goto	start
   414   001536                     __end_of_main:
   415                           	callstack 0
   416                           
   417 ;; *************** function _keypad_get_value *****************
   418 ;; Defined at:
   419 ;;		line 52 in file "ECU_layer/Keypad/keypad.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  _keypad_conf    1    8[COMRAM] PTR const struct .
   422 ;;		 -> keypad_1(8), 
   423 ;;  value           1    9[COMRAM] PTR unsigned char 
   424 ;;		 -> keypad_value(1), 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  k               2   17[COMRAM] int 
   427 ;;  j               2   13[COMRAM] int 
   428 ;;  i               2   15[COMRAM] int 
   429 ;;  colum_logic     1   12[COMRAM] unsigned char 
   430 ;;  ret             1   11[COMRAM] unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      unsigned char 
   433 ;; Registers used:
   434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;Total ram usage:       11 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 1
   447 ;; This function calls:
   448 ;;		_gpio_pin_read_logic
   449 ;;		_gpio_pin_write_logic
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text1
   456   001234                     __ptext1:
   457                           	callstack 0
   458   001234                     _keypad_get_value:
   459                           	callstack 29
   460   001234                     
   461                           ;ECU_layer/Keypad/keypad.c: 55:     uint8 colum_logic = 0;
   462   001234  0E00               	movlw	0
   463   001236  6E33               	movwf	keypad_get_value@colum_logic^0,c
   464                           
   465                           ;ECU_layer/Keypad/keypad.c: 57:     if ((((void*)0) == _keypad_config) || (((void*)0) ==
      +                           value))
   466   001238  502F               	movf	keypad_get_value@_keypad_config^0,w,c
   467   00123A  B4D8               	btfsc	status,2,c
   468   00123C  EF22  F009         	goto	u951
   469   001240  EF24  F009         	goto	u950
   470   001244                     u951:
   471   001244  EF2C  F009         	goto	l1637
   472   001248                     u950:
   473   001248  5030               	movf	keypad_get_value@value^0,w,c
   474   00124A  A4D8               	btfss	status,2,c
   475   00124C  EF2A  F009         	goto	u961
   476   001250  EF2C  F009         	goto	u960
   477   001254                     u961:
   478   001254  EF30  F009         	goto	l1639
   479   001258                     u960:
   480   001258                     l1637:
   481                           
   482                           ;ECU_layer/Keypad/keypad.c: 58:     {;ECU_layer/Keypad/keypad.c: 59:         ret = (STD_
      +                          ReturnType)0x00;
   483   001258  0E00               	movlw	0
   484   00125A  6E32               	movwf	keypad_get_value@ret^0,c
   485                           
   486                           ;ECU_layer/Keypad/keypad.c: 60:     }
   487   00125C  EF9B  F009         	goto	l1679
   488   001260                     l1639:
   489                           
   490                           ;ECU_layer/Keypad/keypad.c: 62:     {;ECU_layer/Keypad/keypad.c: 63:         for(int i =
      +                           0 ; i < 4 ; i++)
   491   001260  0E00               	movlw	0
   492   001262  6E37               	movwf	(keypad_get_value@i+1)^0,c
   493   001264  0E00               	movlw	0
   494   001266  6E36               	movwf	keypad_get_value@i^0,c
   495   001268                     l1645:
   496                           
   497                           ;ECU_layer/Keypad/keypad.c: 64:         {;ECU_layer/Keypad/keypad.c: 65:             for
      +                          (int j = 0 ; j < 4 ; j++)
   498   001268  0E00               	movlw	0
   499   00126A  6E35               	movwf	(keypad_get_value@j+1)^0,c
   500   00126C  0E00               	movlw	0
   501   00126E  6E34               	movwf	keypad_get_value@j^0,c
   502   001270                     l1651:
   503   001270  502F               	movf	keypad_get_value@_keypad_config^0,w,c
   504   001272  2434               	addwf	keypad_get_value@j^0,w,c
   505   001274  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   506   001276  0E00               	movlw	0
   507   001278  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   508   00127A  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   509   00127E                     
   510                           ;ECU_layer/Keypad/keypad.c: 68:             }
   511   00127E  4A34               	infsnz	keypad_get_value@j^0,f,c
   512   001280  2A35               	incf	(keypad_get_value@j+1)^0,f,c
   513   001282  BE35               	btfsc	(keypad_get_value@j+1)^0,7,c
   514   001284  EF4D  F009         	goto	u971
   515   001288  5035               	movf	(keypad_get_value@j+1)^0,w,c
   516   00128A  E109               	bnz	u970
   517   00128C  0E04               	movlw	4
   518   00128E  5C34               	subwf	keypad_get_value@j^0,w,c
   519   001290  A0D8               	btfss	status,0,c
   520   001292  EF4D  F009         	goto	u971
   521   001296  EF4F  F009         	goto	u970
   522   00129A                     u971:
   523   00129A  EF38  F009         	goto	l1651
   524   00129E                     u970:
   525   00129E  502F               	movf	keypad_get_value@_keypad_config^0,w,c
   526   0012A0  2436               	addwf	keypad_get_value@i^0,w,c
   527   0012A2  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   528   0012A4  0E01               	movlw	1
   529   0012A6  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   530   0012A8  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   531   0012AC                     
   532                           ;ECU_layer/Keypad/keypad.c: 72:             for(int k=0 ; k < 4 ; k++)
   533   0012AC  0E00               	movlw	0
   534   0012AE  6E39               	movwf	(keypad_get_value@k+1)^0,c
   535   0012B0  0E00               	movlw	0
   536   0012B2  6E38               	movwf	keypad_get_value@k^0,c
   537   0012B4                     l1665:
   538                           
   539                           ;ECU_layer/Keypad/keypad.c: 73:             {;ECU_layer/Keypad/keypad.c: 74:            
      +                               ret = gpio_pin_read_logic(&(_keypad_config->keypad_colums[k]) , &colum_logic);
   540   0012B4  502F               	movf	keypad_get_value@_keypad_config^0,w,c
   541   0012B6  2438               	addwf	keypad_get_value@k^0,w,c
   542   0012B8  0F04               	addlw	4
   543   0012BA  6E27               	movwf	gpio_pin_read_logic@_pin_config^0,c
   544   0012BC  0E33               	movlw	low keypad_get_value@colum_logic
   545   0012BE  6E28               	movwf	gpio_pin_read_logic@logic^0,c
   546   0012C0  EC9D  F009         	call	_gpio_pin_read_logic	;wreg free
   547   0012C4  6E32               	movwf	keypad_get_value@ret^0,c
   548   0012C6                     
   549                           ;ECU_layer/Keypad/keypad.c: 76:                 if(GPIO_HIGH == colum_logic)
   550   0012C6  0433               	decf	keypad_get_value@colum_logic^0,w,c
   551   0012C8  A4D8               	btfss	status,2,c
   552   0012CA  EF69  F009         	goto	u981
   553   0012CE  EF6B  F009         	goto	u980
   554   0012D2                     u981:
   555   0012D2  EF7B  F009         	goto	l1671
   556   0012D6                     u980:
   557   0012D6                     
   558                           ;ECU_layer/Keypad/keypad.c: 77:                 {;ECU_layer/Keypad/keypad.c: 78:        
      +                                       *value = keypad_sampels[i][k];
   559   0012D6  5036               	movf	keypad_get_value@i^0,w,c
   560   0012D8  0D04               	mullw	4
   561   0012DA  50F3               	movf	243,w,c
   562   0012DC  0F01               	addlw	low _keypad_sampels
   563   0012DE  2438               	addwf	keypad_get_value@k^0,w,c
   564   0012E0  6E31               	movwf	??_keypad_get_value^0,c
   565   0012E2  C031  FFF6         	movff	??_keypad_get_value,tblptrl
   566   0012E6                     	if	1	;There is more than 1 active tblptr byte
   567   0012E6  0E10               	movlw	high __smallconst
   568   0012E8  6EF7               	movwf	tblptrh,c
   569   0012EA                     	endif
   570   0012EA                     	if	0	;tblptru may be non-zero
   571   0012EA                     	endif
   572   0012EA                     	if	0	;tblptru may be non-zero
   573   0012EA                     	endif
   574   0012EA  5030               	movf	keypad_get_value@value^0,w,c
   575   0012EC  6ED9               	movwf	fsr2l,c
   576   0012EE  6ADA               	clrf	fsr2h,c
   577   0012F0  0008               	tblrd		*
   578   0012F2  CFF5 FFDF          	movff	tablat,indf2
   579   0012F6                     l1671:
   580                           
   581                           ;ECU_layer/Keypad/keypad.c: 80:             }
   582   0012F6  4A38               	infsnz	keypad_get_value@k^0,f,c
   583   0012F8  2A39               	incf	(keypad_get_value@k+1)^0,f,c
   584   0012FA  BE39               	btfsc	(keypad_get_value@k+1)^0,7,c
   585   0012FC  EF89  F009         	goto	u991
   586   001300  5039               	movf	(keypad_get_value@k+1)^0,w,c
   587   001302  E109               	bnz	u990
   588   001304  0E04               	movlw	4
   589   001306  5C38               	subwf	keypad_get_value@k^0,w,c
   590   001308  A0D8               	btfss	status,0,c
   591   00130A  EF89  F009         	goto	u991
   592   00130E  EF8B  F009         	goto	u990
   593   001312                     u991:
   594   001312  EF5A  F009         	goto	l1665
   595   001316                     u990:
   596   001316                     
   597                           ;ECU_layer/Keypad/keypad.c: 81:         }
   598   001316  4A36               	infsnz	keypad_get_value@i^0,f,c
   599   001318  2A37               	incf	(keypad_get_value@i+1)^0,f,c
   600   00131A  BE37               	btfsc	(keypad_get_value@i+1)^0,7,c
   601   00131C  EF99  F009         	goto	u1001
   602   001320  5037               	movf	(keypad_get_value@i+1)^0,w,c
   603   001322  E109               	bnz	u1000
   604   001324  0E04               	movlw	4
   605   001326  5C36               	subwf	keypad_get_value@i^0,w,c
   606   001328  A0D8               	btfss	status,0,c
   607   00132A  EF99  F009         	goto	u1001
   608   00132E  EF9B  F009         	goto	u1000
   609   001332                     u1001:
   610   001332  EF34  F009         	goto	l1645
   611   001336                     u1000:
   612   001336                     l1679:
   613                           
   614                           ;ECU_layer/Keypad/keypad.c: 84:     return ret;
   615   001336  5032               	movf	keypad_get_value@ret^0,w,c
   616   001338  0012               	return		;funcret
   617   00133A                     __end_of_keypad_get_value:
   618                           	callstack 0
   619                           
   620 ;; *************** function _gpio_pin_read_logic *****************
   621 ;; Defined at:
   622 ;;		line 109 in file "MCAL_layer/GPIO/gpio.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   625 ;;		 -> keypad_1$keypad_colums(4), keypad_1(8), 
   626 ;;  logic           1    1[COMRAM] PTR enum E2814
   627 ;;		 -> keypad_get_value@colum_logic(1), ecu_button_read_state@pin_logic_status(1), 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  ret             1    6[COMRAM] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      unsigned char 
   632 ;; Registers used:
   633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;Total ram usage:        7 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_keypad_get_value
   649 ;;		_ecu_button_read_state
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text2
   654   00133A                     __ptext2:
   655                           	callstack 0
   656   00133A                     _gpio_pin_read_logic:
   657                           	callstack 29
   658   00133A                     
   659                           ;MCAL_layer/GPIO/gpio.c: 109: STD_ReturnType gpio_pin_read_logic(const pin_config *_pin_
      +                          config, logic_t *logic);MCAL_layer/GPIO/gpio.c: 110: {;MCAL_layer/GPIO/gpio.c: 111:     
      +                          STD_ReturnType ret = (STD_ReturnType)0x01;
   660   00133A  0E01               	movlw	1
   661   00133C  6E2D               	movwf	gpio_pin_read_logic@ret^0,c
   662                           
   663                           ;MCAL_layer/GPIO/gpio.c: 112:     if(((void*)0) == _pin_config || ((void*)0) == logic ||
      +                           _pin_config->pin > 8 -1)
   664   00133E  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   665   001340  B4D8               	btfsc	status,2,c
   666   001342  EFA5  F009         	goto	u881
   667   001346  EFA7  F009         	goto	u880
   668   00134A                     u881:
   669   00134A  EFBF  F009         	goto	l1593
   670   00134E                     u880:
   671   00134E  5028               	movf	gpio_pin_read_logic@logic^0,w,c
   672   001350  B4D8               	btfsc	status,2,c
   673   001352  EFAD  F009         	goto	u891
   674   001356  EFAF  F009         	goto	u890
   675   00135A                     u891:
   676   00135A  EFBF  F009         	goto	l1593
   677   00135E                     u890:
   678   00135E  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   679   001360  6ED9               	movwf	fsr2l,c
   680   001362  6ADA               	clrf	fsr2h,c
   681   001364  30DF               	rrcf	223,w,c
   682   001366  32E8               	rrcf	wreg,f,c
   683   001368  32E8               	rrcf	wreg,f,c
   684   00136A  0B07               	andlw	7
   685   00136C  6E29               	movwf	??_gpio_pin_read_logic^0,c
   686   00136E  0E07               	movlw	7
   687   001370  6429               	cpfsgt	??_gpio_pin_read_logic^0,c
   688   001372  EFBD  F009         	goto	u901
   689   001376  EFBF  F009         	goto	u900
   690   00137A                     u901:
   691   00137A  EFC3  F009         	goto	l1595
   692   00137E                     u900:
   693   00137E                     l1593:
   694                           
   695                           ;MCAL_layer/GPIO/gpio.c: 113:     {;MCAL_layer/GPIO/gpio.c: 114:         ret = (STD_Retu
      +                          rnType)0x00;
   696   00137E  0E00               	movlw	0
   697   001380  6E2D               	movwf	gpio_pin_read_logic@ret^0,c
   698                           
   699                           ;MCAL_layer/GPIO/gpio.c: 115:     }
   700   001382  EFED  F009         	goto	l1597
   701   001386                     l1595:
   702                           
   703                           ;MCAL_layer/GPIO/gpio.c: 117:     {;MCAL_layer/GPIO/gpio.c: 118:         *logic = ((*por
      +                          t_registers[_pin_config->port] >> _pin_config->pin)& (uint8)1);
   704   001386  5028               	movf	gpio_pin_read_logic@logic^0,w,c
   705   001388  6ED9               	movwf	fsr2l,c
   706   00138A  6ADA               	clrf	fsr2h,c
   707   00138C  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   708   00138E  6EE1               	movwf	fsr1l,c
   709   001390  6AE2               	clrf	fsr1h,c
   710   001392  30E7               	rrcf	231,w,c
   711   001394  32E8               	rrcf	wreg,f,c
   712   001396  32E8               	rrcf	wreg,f,c
   713   001398  0B07               	andlw	7
   714   00139A  6E29               	movwf	??_gpio_pin_read_logic^0,c
   715   00139C  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   716   00139E  6EE1               	movwf	fsr1l,c
   717   0013A0  6AE2               	clrf	fsr1h,c
   718   0013A2  50E7               	movf	231,w,c
   719   0013A4  0B07               	andlw	7
   720   0013A6  0D02               	mullw	2
   721   0013A8  50F3               	movf	243,w,c
   722   0013AA  0F01               	addlw	low _port_registers
   723   0013AC  6EE1               	movwf	fsr1l,c
   724   0013AE  6AE2               	clrf	fsr1h,c
   725   0013B0  CFE6 F02A          	movff	postinc1,??_gpio_pin_read_logic+1
   726   0013B4  CFE5 F02B          	movff	postdec1,??_gpio_pin_read_logic+2
   727   0013B8  C02A  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
   728   0013BC  C02B  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
   729   0013C0  50E7               	movf	indf1,w,c
   730   0013C2  6E2C               	movwf	(??_gpio_pin_read_logic+3)^0,c
   731   0013C4  2A29               	incf	??_gpio_pin_read_logic^0,f,c
   732   0013C6  EFE7  F009         	goto	u914
   733   0013CA                     u915:
   734   0013CA  90D8               	bcf	status,0,c
   735   0013CC  322C               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
   736   0013CE                     u914:
   737   0013CE  2E29               	decfsz	??_gpio_pin_read_logic^0,f,c
   738   0013D0  EFE5  F009         	goto	u915
   739   0013D4  502C               	movf	(??_gpio_pin_read_logic+3)^0,w,c
   740   0013D6  0B01               	andlw	1
   741   0013D8  6EDF               	movwf	indf2,c
   742   0013DA                     l1597:
   743                           
   744                           ;MCAL_layer/GPIO/gpio.c: 121:     return ret;
   745   0013DA  502D               	movf	gpio_pin_read_logic@ret^0,w,c
   746   0013DC  0012               	return		;funcret
   747   0013DE                     __end_of_gpio_pin_read_logic:
   748                           	callstack 0
   749                           
   750 ;; *************** function _application_initializ *****************
   751 ;; Defined at:
   752 ;;		line 40 in file "application.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 3
   773 ;; This function calls:
   774 ;;		_keypad_initialize
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   001536                     __ptext3:
   782                           	callstack 0
   783   001536                     _application_initializ:
   784                           	callstack 27
   785   001536                     
   786                           ;application.c: 42:     ret = keypad_initialize(&keypad_1);
   787   001536  0E1F               	movlw	low _keypad_1
   788   001538  6E32               	movwf	keypad_initialize@_keypad_config^0,c
   789   00153A  ECEF  F009         	call	_keypad_initialize	;wreg free
   790   00153E  6E4B               	movwf	_ret^0,c
   791   001540  0012               	return		;funcret
   792   001542                     __end_of_application_initializ:
   793                           	callstack 0
   794                           
   795 ;; *************** function _keypad_initialize *****************
   796 ;; Defined at:
   797 ;;		line 22 in file "ECU_layer/Keypad/keypad.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  _keypad_conf    1   11[COMRAM] PTR const struct .
   800 ;;		 -> keypad_1(8), 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  j               2   15[COMRAM] int 
   803 ;;  i               2   13[COMRAM] int 
   804 ;;  ret             1   12[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      unsigned char 
   807 ;; Registers used:
   808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   814 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;Total ram usage:        6 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 2
   821 ;; This function calls:
   822 ;;		_gpio_pin_Initialization
   823 ;; This function is called by:
   824 ;;		_application_initializ
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text4
   829   0013DE                     __ptext4:
   830                           	callstack 0
   831   0013DE                     _keypad_initialize:
   832                           	callstack 27
   833   0013DE                     
   834                           ;ECU_layer/Keypad/keypad.c: 26:     if (((void*)0) == _keypad_config)
   835   0013DE  5032               	movf	keypad_initialize@_keypad_config^0,w,c
   836   0013E0  A4D8               	btfss	status,2,c
   837   0013E2  EFF5  F009         	goto	u921
   838   0013E6  EFF7  F009         	goto	u920
   839   0013EA                     u921:
   840   0013EA  EFFB  F009         	goto	l1605
   841   0013EE                     u920:
   842   0013EE                     
   843                           ;ECU_layer/Keypad/keypad.c: 27:     {;ECU_layer/Keypad/keypad.c: 28:         ret = (STD_
      +                          ReturnType)0x00;
   844   0013EE  0E00               	movlw	0
   845   0013F0  6E33               	movwf	keypad_initialize@ret^0,c
   846                           
   847                           ;ECU_layer/Keypad/keypad.c: 29:     }
   848   0013F2  EF2F  F00A         	goto	l1629
   849   0013F6                     l1605:
   850                           
   851                           ;ECU_layer/Keypad/keypad.c: 31:     {;ECU_layer/Keypad/keypad.c: 32:         for(int i =
      +                           0 ; i < 4 ; i++)
   852   0013F6  0E00               	movlw	0
   853   0013F8  6E35               	movwf	(keypad_initialize@i+1)^0,c
   854   0013FA  0E00               	movlw	0
   855   0013FC  6E34               	movwf	keypad_initialize@i^0,c
   856   0013FE                     l1611:
   857   0013FE  5032               	movf	keypad_initialize@_keypad_config^0,w,c
   858   001400  2434               	addwf	keypad_initialize@i^0,w,c
   859   001402  6E2F               	movwf	gpio_pin_Initialization@_pin_config^0,c
   860   001404  EC31  F00A         	call	_gpio_pin_Initialization	;wreg free
   861   001408                     
   862                           ;ECU_layer/Keypad/keypad.c: 35:         }
   863   001408  4A34               	infsnz	keypad_initialize@i^0,f,c
   864   00140A  2A35               	incf	(keypad_initialize@i+1)^0,f,c
   865   00140C  BE35               	btfsc	(keypad_initialize@i+1)^0,7,c
   866   00140E  EF12  F00A         	goto	u931
   867   001412  5035               	movf	(keypad_initialize@i+1)^0,w,c
   868   001414  E109               	bnz	u930
   869   001416  0E04               	movlw	4
   870   001418  5C34               	subwf	keypad_initialize@i^0,w,c
   871   00141A  A0D8               	btfss	status,0,c
   872   00141C  EF12  F00A         	goto	u931
   873   001420  EF14  F00A         	goto	u930
   874   001424                     u931:
   875   001424  EFFF  F009         	goto	l1611
   876   001428                     u930:
   877   001428                     
   878                           ;ECU_layer/Keypad/keypad.c: 37:         for(int j = 0 ; j < 4 ; j++)
   879   001428  0E00               	movlw	0
   880   00142A  6E37               	movwf	(keypad_initialize@j+1)^0,c
   881   00142C  0E00               	movlw	0
   882   00142E  6E36               	movwf	keypad_initialize@j^0,c
   883   001430                     l1623:
   884                           
   885                           ;ECU_layer/Keypad/keypad.c: 38:         {;ECU_layer/Keypad/keypad.c: 39:         ret = g
      +                          pio_pin_Initialization(&(_keypad_config->keypad_colums[j]));
   886   001430  5032               	movf	keypad_initialize@_keypad_config^0,w,c
   887   001432  2436               	addwf	keypad_initialize@j^0,w,c
   888   001434  0F04               	addlw	4
   889   001436  6E2F               	movwf	gpio_pin_Initialization@_pin_config^0,c
   890   001438  EC31  F00A         	call	_gpio_pin_Initialization	;wreg free
   891   00143C  6E33               	movwf	keypad_initialize@ret^0,c
   892   00143E                     
   893                           ;ECU_layer/Keypad/keypad.c: 40:         }
   894   00143E  4A36               	infsnz	keypad_initialize@j^0,f,c
   895   001440  2A37               	incf	(keypad_initialize@j+1)^0,f,c
   896   001442  BE37               	btfsc	(keypad_initialize@j+1)^0,7,c
   897   001444  EF2D  F00A         	goto	u941
   898   001448  5037               	movf	(keypad_initialize@j+1)^0,w,c
   899   00144A  E109               	bnz	u940
   900   00144C  0E04               	movlw	4
   901   00144E  5C36               	subwf	keypad_initialize@j^0,w,c
   902   001450  A0D8               	btfss	status,0,c
   903   001452  EF2D  F00A         	goto	u941
   904   001456  EF2F  F00A         	goto	u940
   905   00145A                     u941:
   906   00145A  EF18  F00A         	goto	l1623
   907   00145E                     u940:
   908   00145E                     l1629:
   909                           
   910                           ;ECU_layer/Keypad/keypad.c: 43:     return ret;
   911   00145E  5033               	movf	keypad_initialize@ret^0,w,c
   912   001460  0012               	return		;funcret
   913   001462                     __end_of_keypad_initialize:
   914                           	callstack 0
   915                           
   916 ;; *************** function _gpio_pin_Initialization *****************
   917 ;; Defined at:
   918 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   921 ;;		 -> keypad_1$keypad_colums(4), keypad_1$keypad_rows(4), keypad_1(8), ecu_relay_initializ@relay_init(1), 
   922 ;;		 -> ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_
      +1(1), 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  ret             1   10[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      unsigned char 
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        3 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 1
   941 ;; This function calls:
   942 ;;		_gpio_pin_direction_init
   943 ;;		_gpio_pin_write_logic
   944 ;; This function is called by:
   945 ;;		_keypad_initialize
   946 ;;		_seg_initialization
   947 ;;		_ecu_dc_motor_initializ
   948 ;;		_ecu_led_initializ
   949 ;;		_ecu_relay_initializ
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text5
   954   001462                     __ptext5:
   955                           	callstack 0
   956   001462                     _gpio_pin_Initialization:
   957                           	callstack 27
   958   001462                     
   959                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
   960   001462  502F               	movf	gpio_pin_Initialization@_pin_config^0,w,c
   961   001464  B4D8               	btfsc	status,2,c
   962   001466  EF37  F00A         	goto	u861
   963   00146A  EF39  F00A         	goto	u860
   964   00146E                     u861:
   965   00146E  EF49  F00A         	goto	l1579
   966   001472                     u860:
   967   001472  502F               	movf	gpio_pin_Initialization@_pin_config^0,w,c
   968   001474  6ED9               	movwf	fsr2l,c
   969   001476  6ADA               	clrf	fsr2h,c
   970   001478  30DF               	rrcf	223,w,c
   971   00147A  32E8               	rrcf	wreg,f,c
   972   00147C  32E8               	rrcf	wreg,f,c
   973   00147E  0B07               	andlw	7
   974   001480  6E30               	movwf	??_gpio_pin_Initialization^0,c
   975   001482  0E07               	movlw	7
   976   001484  6430               	cpfsgt	??_gpio_pin_Initialization^0,c
   977   001486  EF47  F00A         	goto	u871
   978   00148A  EF49  F00A         	goto	u870
   979   00148E                     u871:
   980   00148E  EF4D  F00A         	goto	l1581
   981   001492                     u870:
   982   001492                     l1579:
   983                           
   984                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
   985   001492  0E00               	movlw	0
   986   001494  6E31               	movwf	gpio_pin_Initialization@ret^0,c
   987                           
   988                           ;MCAL_layer/GPIO/gpio.c: 154:     }
   989   001496  EF5E  F00A         	goto	l1583
   990   00149A                     l1581:
   991                           
   992                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
   993   00149A  C02F  F027         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
   994   00149E  EC09  F008         	call	_gpio_pin_direction_init	;wreg free
   995   0014A2  6E31               	movwf	gpio_pin_Initialization@ret^0,c
   996                           
   997                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
   998   0014A4  C02F  F027         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
   999   0014A8  502F               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1000   0014AA  6ED9               	movwf	fsr2l,c
  1001   0014AC  6ADA               	clrf	fsr2h,c
  1002   0014AE  0E00               	movlw	0
  1003   0014B0  BEDF               	btfsc	indf2,7,c
  1004   0014B2  0E01               	movlw	1
  1005   0014B4  6E28               	movwf	gpio_pin_write_logic@logic^0,c
  1006   0014B6  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1007   0014BA  6E31               	movwf	gpio_pin_Initialization@ret^0,c
  1008   0014BC                     l1583:
  1009                           
  1010                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
  1011   0014BC  5031               	movf	gpio_pin_Initialization@ret^0,w,c
  1012   0014BE  0012               	return		;funcret
  1013   0014C0                     __end_of_gpio_pin_Initialization:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _gpio_pin_write_logic *****************
  1017 ;; Defined at:
  1018 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1021 ;;		 -> keypad_1$keypad_colums(4), keypad_1$keypad_rows(4), keypad_1(8), ecu_relay_turn_off@relay_init(1), 
  1022 ;;		 -> ecu_relay_turn_on@relay_init(1), ecu_relay_initializ@relay_init(1), ecu_led_turn_off@_pin_config(1), ecu_led_tur
      +n_on@_pin_config(1), 
  1023 ;;		 -> ecu_led_initializ@_pin_config(1), ecu_dc_motor_stop@dc_motor_pin_2(1), ecu_dc_motor_stop@dc_motor_pin_1(1), ecu_
      +dc_motor_move_left@dc_motor_pin_2(1), 
  1024 ;;		 -> ecu_dc_motor_move_left@dc_motor_pin_1(1), ecu_dc_motor_move_right@dc_motor_pin_2(1), ecu_dc_motor_move_right@dc_
      +motor_pin_1(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), 
  1025 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1026 ;;  logic           1    1[COMRAM] enum E2814
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  ret             1    7[COMRAM] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      unsigned char 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;Total ram usage:        8 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_keypad_get_value
  1048 ;;		_gpio_pin_Initialization
  1049 ;;		_seg_write_number
  1050 ;;		_ecu_dc_motor_move_right
  1051 ;;		_ecu_dc_motor_move_left
  1052 ;;		_ecu_dc_motor_stop
  1053 ;;		_ecu_led_turn_on
  1054 ;;		_ecu_led_turn_off
  1055 ;;		_ecu_relay_turn_on
  1056 ;;		_ecu_relay_turn_off
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text6
  1061   001124                     __ptext6:
  1062                           	callstack 0
  1063   001124                     _gpio_pin_write_logic:
  1064                           	callstack 29
  1065   001124                     
  1066                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
  1067   001124  0E01               	movlw	1
  1068   001126  6E2E               	movwf	gpio_pin_write_logic@ret^0,c
  1069                           
  1070                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1071   001128  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1072   00112A  B4D8               	btfsc	status,2,c
  1073   00112C  EF9A  F008         	goto	u771
  1074   001130  EF9C  F008         	goto	u770
  1075   001134                     u771:
  1076   001134  EFAC  F008         	goto	l1539
  1077   001138                     u770:
  1078   001138  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1079   00113A  6ED9               	movwf	fsr2l,c
  1080   00113C  6ADA               	clrf	fsr2h,c
  1081   00113E  30DF               	rrcf	223,w,c
  1082   001140  32E8               	rrcf	wreg,f,c
  1083   001142  32E8               	rrcf	wreg,f,c
  1084   001144  0B07               	andlw	7
  1085   001146  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1086   001148  0E07               	movlw	7
  1087   00114A  6429               	cpfsgt	??_gpio_pin_write_logic^0,c
  1088   00114C  EFAA  F008         	goto	u781
  1089   001150  EFAC  F008         	goto	u780
  1090   001154                     u781:
  1091   001154  EF03  F009         	goto	l1547
  1092   001158                     u780:
  1093   001158                     l1539:
  1094                           
  1095                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
  1096   001158  0E00               	movlw	0
  1097   00115A  6E2E               	movwf	gpio_pin_write_logic@ret^0,c
  1098                           
  1099                           ;MCAL_layer/GPIO/gpio.c: 82:     }
  1100   00115C  EF18  F009         	goto	l1549
  1101   001160                     l1541:
  1102                           
  1103                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  1104   001160  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1105   001162  6ED9               	movwf	fsr2l,c
  1106   001164  6ADA               	clrf	fsr2h,c
  1107   001166  30DF               	rrcf	223,w,c
  1108   001168  32E8               	rrcf	wreg,f,c
  1109   00116A  32E8               	rrcf	wreg,f,c
  1110   00116C  0B07               	andlw	7
  1111   00116E  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1112   001170  0E01               	movlw	1
  1113   001172  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1114   001174  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1115   001176  EFBF  F008         	goto	u794
  1116   00117A                     u795:
  1117   00117A  90D8               	bcf	status,0,c
  1118   00117C  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1119   00117E                     u794:
  1120   00117E  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1121   001180  EFBD  F008         	goto	u795
  1122   001184  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1123   001186  0AFF               	xorlw	255
  1124   001188  6E2B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1125   00118A  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1126   00118C  6ED9               	movwf	fsr2l,c
  1127   00118E  6ADA               	clrf	fsr2h,c
  1128   001190  50DF               	movf	223,w,c
  1129   001192  0B07               	andlw	7
  1130   001194  0D02               	mullw	2
  1131   001196  50F3               	movf	243,w,c
  1132   001198  0F0B               	addlw	low _lat_registers
  1133   00119A  6ED9               	movwf	fsr2l,c
  1134   00119C  6ADA               	clrf	fsr2h,c
  1135   00119E  CFDE F02C          	movff	postinc2,??_gpio_pin_write_logic+3
  1136   0011A2  CFDD F02D          	movff	postdec2,??_gpio_pin_write_logic+4
  1137   0011A6  C02C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1138   0011AA  C02D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1139   0011AE  502B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1140   0011B0  16DF               	andwf	indf2,f,c
  1141                           
  1142                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
  1143   0011B2  EF18  F009         	goto	l1549
  1144   0011B6                     l1543:
  1145                           
  1146                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  1147   0011B6  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1148   0011B8  6ED9               	movwf	fsr2l,c
  1149   0011BA  6ADA               	clrf	fsr2h,c
  1150   0011BC  30DF               	rrcf	223,w,c
  1151   0011BE  32E8               	rrcf	wreg,f,c
  1152   0011C0  32E8               	rrcf	wreg,f,c
  1153   0011C2  0B07               	andlw	7
  1154   0011C4  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1155   0011C6  0E01               	movlw	1
  1156   0011C8  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1157   0011CA  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1158   0011CC  EFEA  F008         	goto	u804
  1159   0011D0                     u805:
  1160   0011D0  90D8               	bcf	status,0,c
  1161   0011D2  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1162   0011D4                     u804:
  1163   0011D4  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1164   0011D6  EFE8  F008         	goto	u805
  1165   0011DA  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1166   0011DC  6ED9               	movwf	fsr2l,c
  1167   0011DE  6ADA               	clrf	fsr2h,c
  1168   0011E0  50DF               	movf	223,w,c
  1169   0011E2  0B07               	andlw	7
  1170   0011E4  0D02               	mullw	2
  1171   0011E6  50F3               	movf	243,w,c
  1172   0011E8  0F0B               	addlw	low _lat_registers
  1173   0011EA  6ED9               	movwf	fsr2l,c
  1174   0011EC  6ADA               	clrf	fsr2h,c
  1175   0011EE  CFDE F02B          	movff	postinc2,??_gpio_pin_write_logic+2
  1176   0011F2  CFDD F02C          	movff	postdec2,??_gpio_pin_write_logic+3
  1177   0011F6  C02B  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1178   0011FA  C02C  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1179   0011FE  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1180   001200  12DF               	iorwf	indf2,f,c
  1181                           
  1182                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  1183   001202  EF18  F009         	goto	l1549
  1184   001206                     l1547:
  1185   001206  5028               	movf	gpio_pin_write_logic@logic^0,w,c
  1186   001208  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1187   00120A  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1188                           
  1189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 0 to 0
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ;	Chosen strategy is simple_byte
  1196   00120C  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1197   00120E  0A00               	xorlw	0	; case 0
  1198   001210  B4D8               	btfsc	status,2,c
  1199   001212  EF0D  F009         	goto	l1963
  1200   001216  EFAC  F008         	goto	l1539
  1201   00121A                     l1963:
  1202                           
  1203                           ; Switch size 1, requested type "simple"
  1204                           ; Number of cases is 2, Range of values is 0 to 1
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte            7     4 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209   00121A  5029               	movf	??_gpio_pin_write_logic^0,w,c
  1210   00121C  0A00               	xorlw	0	; case 0
  1211   00121E  B4D8               	btfsc	status,2,c
  1212   001220  EFB0  F008         	goto	l1541
  1213   001224  0A01               	xorlw	1	; case 1
  1214   001226  B4D8               	btfsc	status,2,c
  1215   001228  EFDB  F008         	goto	l1543
  1216   00122C  EFAC  F008         	goto	l1539
  1217   001230                     l1549:
  1218                           
  1219                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  1220   001230  502E               	movf	gpio_pin_write_logic@ret^0,w,c
  1221   001232  0012               	return		;funcret
  1222   001234                     __end_of_gpio_pin_write_logic:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _gpio_pin_direction_init *****************
  1226 ;; Defined at:
  1227 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1230 ;;		 -> keypad_1$keypad_colums(4), keypad_1$keypad_rows(4), keypad_1(8), ecu_relay_initializ@relay_init(1), 
  1231 ;;		 -> ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_
      +1(1), 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  ret             1    6[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1243 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;Total ram usage:        7 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_gpio_pin_Initialization
  1253 ;;		_ecu_button_init
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text7
  1258   001012                     __ptext7:
  1259                           	callstack 0
  1260   001012                     _gpio_pin_direction_init:
  1261                           	callstack 27
  1262   001012                     
  1263                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  1264   001012  0E01               	movlw	1
  1265   001014  6E2D               	movwf	gpio_pin_direction_init@ret^0,c
  1266                           
  1267                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1268   001016  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1269   001018  B4D8               	btfsc	status,2,c
  1270   00101A  EF11  F008         	goto	u811
  1271   00101E  EF13  F008         	goto	u810
  1272   001022                     u811:
  1273   001022  EF23  F008         	goto	l1561
  1274   001026                     u810:
  1275   001026  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1276   001028  6ED9               	movwf	fsr2l,c
  1277   00102A  6ADA               	clrf	fsr2h,c
  1278   00102C  30DF               	rrcf	223,w,c
  1279   00102E  32E8               	rrcf	wreg,f,c
  1280   001030  32E8               	rrcf	wreg,f,c
  1281   001032  0B07               	andlw	7
  1282   001034  6E28               	movwf	??_gpio_pin_direction_init^0,c
  1283   001036  0E07               	movlw	7
  1284   001038  6428               	cpfsgt	??_gpio_pin_direction_init^0,c
  1285   00103A  EF21  F008         	goto	u821
  1286   00103E  EF23  F008         	goto	u820
  1287   001042                     u821:
  1288   001042  EF7A  F008         	goto	l1569
  1289   001046                     u820:
  1290   001046                     l1561:
  1291                           
  1292                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  1293   001046  0E00               	movlw	0
  1294   001048  6E2D               	movwf	gpio_pin_direction_init@ret^0,c
  1295                           
  1296                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  1297   00104A  EF90  F008         	goto	l1571
  1298   00104E                     l1563:
  1299                           
  1300                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  1301   00104E  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1302   001050  6ED9               	movwf	fsr2l,c
  1303   001052  6ADA               	clrf	fsr2h,c
  1304   001054  30DF               	rrcf	223,w,c
  1305   001056  32E8               	rrcf	wreg,f,c
  1306   001058  32E8               	rrcf	wreg,f,c
  1307   00105A  0B07               	andlw	7
  1308   00105C  6E28               	movwf	??_gpio_pin_direction_init^0,c
  1309   00105E  0E01               	movlw	1
  1310   001060  6E29               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1311   001062  2A28               	incf	??_gpio_pin_direction_init^0,f,c
  1312   001064  EF36  F008         	goto	u834
  1313   001068                     u835:
  1314   001068  90D8               	bcf	status,0,c
  1315   00106A  3629               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1316   00106C                     u834:
  1317   00106C  2E28               	decfsz	??_gpio_pin_direction_init^0,f,c
  1318   00106E  EF34  F008         	goto	u835
  1319   001072  5029               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1320   001074  0AFF               	xorlw	255
  1321   001076  6E2A               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1322   001078  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1323   00107A  6ED9               	movwf	fsr2l,c
  1324   00107C  6ADA               	clrf	fsr2h,c
  1325   00107E  50DF               	movf	223,w,c
  1326   001080  0B07               	andlw	7
  1327   001082  0D02               	mullw	2
  1328   001084  50F3               	movf	243,w,c
  1329   001086  0F15               	addlw	low _tris_registers
  1330   001088  6ED9               	movwf	fsr2l,c
  1331   00108A  6ADA               	clrf	fsr2h,c
  1332   00108C  CFDE F02B          	movff	postinc2,??_gpio_pin_direction_init+3
  1333   001090  CFDD F02C          	movff	postdec2,??_gpio_pin_direction_init+4
  1334   001094  C02B  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1335   001098  C02C  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1336   00109C  502A               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1337   00109E  16DF               	andwf	indf2,f,c
  1338                           
  1339                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  1340   0010A0  EF90  F008         	goto	l1571
  1341   0010A4                     l1565:
  1342                           
  1343                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  1344   0010A4  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1345   0010A6  6ED9               	movwf	fsr2l,c
  1346   0010A8  6ADA               	clrf	fsr2h,c
  1347   0010AA  30DF               	rrcf	223,w,c
  1348   0010AC  32E8               	rrcf	wreg,f,c
  1349   0010AE  32E8               	rrcf	wreg,f,c
  1350   0010B0  0B07               	andlw	7
  1351   0010B2  6E28               	movwf	??_gpio_pin_direction_init^0,c
  1352   0010B4  0E01               	movlw	1
  1353   0010B6  6E29               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1354   0010B8  2A28               	incf	??_gpio_pin_direction_init^0,f,c
  1355   0010BA  EF61  F008         	goto	u844
  1356   0010BE                     u845:
  1357   0010BE  90D8               	bcf	status,0,c
  1358   0010C0  3629               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1359   0010C2                     u844:
  1360   0010C2  2E28               	decfsz	??_gpio_pin_direction_init^0,f,c
  1361   0010C4  EF5F  F008         	goto	u845
  1362   0010C8  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1363   0010CA  6ED9               	movwf	fsr2l,c
  1364   0010CC  6ADA               	clrf	fsr2h,c
  1365   0010CE  50DF               	movf	223,w,c
  1366   0010D0  0B07               	andlw	7
  1367   0010D2  0D02               	mullw	2
  1368   0010D4  50F3               	movf	243,w,c
  1369   0010D6  0F15               	addlw	low _tris_registers
  1370   0010D8  6ED9               	movwf	fsr2l,c
  1371   0010DA  6ADA               	clrf	fsr2h,c
  1372   0010DC  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_init+2
  1373   0010E0  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_init+3
  1374   0010E4  C02A  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1375   0010E8  C02B  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1376   0010EC  5029               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1377   0010EE  12DF               	iorwf	indf2,f,c
  1378                           
  1379                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  1380   0010F0  EF90  F008         	goto	l1571
  1381   0010F4                     l1569:
  1382   0010F4  5027               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1383   0010F6  6ED9               	movwf	fsr2l,c
  1384   0010F8  6ADA               	clrf	fsr2h,c
  1385   0010FA  BCDF               	btfsc	indf2,6,c
  1386   0010FC  EF82  F008         	goto	u851
  1387   001100  EF85  F008         	goto	u850
  1388   001104                     u851:
  1389   001104  0E01               	movlw	1
  1390   001106  EF86  F008         	goto	u856
  1391   00110A                     u850:
  1392   00110A  0E00               	movlw	0
  1393   00110C                     u856:
  1394                           
  1395                           ; Switch size 1, requested type "simple"
  1396                           ; Number of cases is 2, Range of values is 0 to 1
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte            7     4 (average)
  1400                           ;	Chosen strategy is simple_byte
  1401   00110C  0A00               	xorlw	0	; case 0
  1402   00110E  B4D8               	btfsc	status,2,c
  1403   001110  EF27  F008         	goto	l1563
  1404   001114  0A01               	xorlw	1	; case 1
  1405   001116  B4D8               	btfsc	status,2,c
  1406   001118  EF52  F008         	goto	l1565
  1407   00111C  EF23  F008         	goto	l1561
  1408   001120                     l1571:
  1409                           
  1410                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  1411   001120  502D               	movf	gpio_pin_direction_init@ret^0,w,c
  1412   001122  0012               	return		;funcret
  1413   001124                     __end_of_gpio_pin_direction_init:
  1414                           	callstack 0
  1415                           
  1416                           	psect	rparam
  1417   000000                     
  1418                           	psect	config
  1419                           
  1420                           ; Padding undefined space
  1421   300000                     	org	3145728
  1422   300000  FF                 	db	255
  1423                           
  1424                           ;Config register CONFIG1H @ 0x300001
  1425                           ;	Oscillator Selection bits
  1426                           ;	OSC = HS, HS oscillator
  1427                           ;	Fail-Safe Clock Monitor Enable bit
  1428                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1429                           ;	Internal/External Oscillator Switchover bit
  1430                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1431   300001                     	org	3145729
  1432   300001  02                 	db	2
  1433                           
  1434                           ;Config register CONFIG2L @ 0x300002
  1435                           ;	Power-up Timer Enable bit
  1436                           ;	PWRT = OFF, PWRT disabled
  1437                           ;	Brown-out Reset Enable bits
  1438                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1439                           ;	Brown Out Reset Voltage bits
  1440                           ;	BORV = 3, Minimum setting
  1441   300002                     	org	3145730
  1442   300002  1F                 	db	31
  1443                           
  1444                           ;Config register CONFIG2H @ 0x300003
  1445                           ;	Watchdog Timer Enable bit
  1446                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1447                           ;	Watchdog Timer Postscale Select bits
  1448                           ;	WDTPS = 32768, 1:32768
  1449   300003                     	org	3145731
  1450   300003  1E                 	db	30
  1451                           
  1452                           ; Padding undefined space
  1453   300004                     	org	3145732
  1454   300004  FF                 	db	255
  1455                           
  1456                           ;Config register CONFIG3H @ 0x300005
  1457                           ;	CCP2 MUX bit
  1458                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1459                           ;	PORTB A/D Enable bit
  1460                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1461                           ;	Low-Power Timer1 Oscillator Enable bit
  1462                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1463                           ;	MCLR Pin Enable bit
  1464                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1465   300005                     	org	3145733
  1466   300005  81                 	db	129
  1467                           
  1468                           ;Config register CONFIG4L @ 0x300006
  1469                           ;	Stack Full/Underflow Reset Enable bit
  1470                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1471                           ;	Single-Supply ICSP Enable bit
  1472                           ;	LVP = OFF, Single-Supply ICSP disabled
  1473                           ;	Extended Instruction Set Enable bit
  1474                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1475                           ;	Background Debugger Enable bit
  1476                           ;	DEBUG = 0x1, unprogrammed default
  1477   300006                     	org	3145734
  1478   300006  81                 	db	129
  1479                           
  1480                           ; Padding undefined space
  1481   300007                     	org	3145735
  1482   300007  FF                 	db	255
  1483                           
  1484                           ;Config register CONFIG5L @ 0x300008
  1485                           ;	Code Protection bit
  1486                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1487                           ;	Code Protection bit
  1488                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1489                           ;	Code Protection bit
  1490                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1491                           ;	Code Protection bit
  1492                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1493   300008                     	org	3145736
  1494   300008  0F                 	db	15
  1495                           
  1496                           ;Config register CONFIG5H @ 0x300009
  1497                           ;	Boot Block Code Protection bit
  1498                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1499                           ;	Data EEPROM Code Protection bit
  1500                           ;	CPD = OFF, Data EEPROM not code-protected
  1501   300009                     	org	3145737
  1502   300009  C0                 	db	192
  1503                           
  1504                           ;Config register CONFIG6L @ 0x30000A
  1505                           ;	Write Protection bit
  1506                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1507                           ;	Write Protection bit
  1508                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1509                           ;	Write Protection bit
  1510                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1511                           ;	Write Protection bit
  1512                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1513   30000A                     	org	3145738
  1514   30000A  0F                 	db	15
  1515                           
  1516                           ;Config register CONFIG6H @ 0x30000B
  1517                           ;	Configuration Register Write Protection bit
  1518                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1519                           ;	Boot Block Write Protection bit
  1520                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1521                           ;	Data EEPROM Write Protection bit
  1522                           ;	WRTD = OFF, Data EEPROM not write-protected
  1523   30000B                     	org	3145739
  1524   30000B  E0                 	db	224
  1525                           
  1526                           ;Config register CONFIG7L @ 0x30000C
  1527                           ;	Table Read Protection bit
  1528                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1529                           ;	Table Read Protection bit
  1530                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1531                           ;	Table Read Protection bit
  1532                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1533                           ;	Table Read Protection bit
  1534                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1535   30000C                     	org	3145740
  1536   30000C  0F                 	db	15
  1537                           
  1538                           ;Config register CONFIG7H @ 0x30000D
  1539                           ;	Boot Block Table Read Protection bit
  1540                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1541   30000D                     	org	3145741
  1542   30000D  40                 	db	64
  1543                           tosu	equ	0xFFF
  1544                           tosh	equ	0xFFE
  1545                           tosl	equ	0xFFD
  1546                           stkptr	equ	0xFFC
  1547                           pclatu	equ	0xFFB
  1548                           pclath	equ	0xFFA
  1549                           pcl	equ	0xFF9
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           prodh	equ	0xFF4
  1555                           prodl	equ	0xFF3
  1556                           indf0	equ	0xFEF
  1557                           postinc0	equ	0xFEE
  1558                           postdec0	equ	0xFED
  1559                           preinc0	equ	0xFEC
  1560                           plusw0	equ	0xFEB
  1561                           fsr0h	equ	0xFEA
  1562                           fsr0l	equ	0xFE9
  1563                           wreg	equ	0xFE8
  1564                           indf1	equ	0xFE7
  1565                           postinc1	equ	0xFE6
  1566                           postdec1	equ	0xFE5
  1567                           preinc1	equ	0xFE4
  1568                           plusw1	equ	0xFE3
  1569                           fsr1h	equ	0xFE2
  1570                           fsr1l	equ	0xFE1
  1571                           bsr	equ	0xFE0
  1572                           indf2	equ	0xFDF
  1573                           postinc2	equ	0xFDE
  1574                           postdec2	equ	0xFDD
  1575                           preinc2	equ	0xFDC
  1576                           plusw2	equ	0xFDB
  1577                           fsr2h	equ	0xFDA
  1578                           fsr2l	equ	0xFD9
  1579                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        38
    BSS         17
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     19      75
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> keypad_1(COMRAM[8]), keypad_1$keypad_colums(COMRAM[4]), keypad_1$keypad_rows(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> keypad_1(COMRAM[8]), keypad_1$keypad_colums(COMRAM[4]), keypad_1$keypad_rows(COMRAM[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad_1(COMRAM[8]), keypad_1$keypad_colums(COMRAM[4]), 

    gpio_pin_read_logic@logic	PTR enum E2814 size(1) Largest target is 1
		 -> ecu_button_read_state@pin_logic_status(COMRAM[1]), keypad_get_value@colum_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), keypad_1(COMRAM[8]), keypad_1$keypad_colums(COMRAM[4]), 
		 -> keypad_1$keypad_rows(COMRAM[4]), 

    keypad_get_value@_keypad_config	PTR const struct . size(1) Largest target is 8
		 -> keypad_1(COMRAM[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> keypad_value(COMRAM[1]), 

    keypad_initialize@_keypad_config	PTR const struct . size(1) Largest target is 8
		 -> keypad_1(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _keypad_get_value->_gpio_pin_write_logic
    _application_initializ->_keypad_initialize
    _keypad_initialize->_gpio_pin_Initialization
    _gpio_pin_Initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8123
              _application_initializ
                   _keypad_get_value
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     9      2    3829
                                              8 COMRAM    11     9      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     460
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0    4294
                  _keypad_initialize
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                    6     5      1    4294
                                             11 COMRAM     6     5      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    3990
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    2763
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ
     _keypad_initialize
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     13      4B       1       59.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      39        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 14 04:30:44 2024

                                l97 1460                                 l111 1338  
                               l227 1122                                 l253 13DC  
                               l246 1232                                 l319 1540  
                               l267 14BE                                 u810 1026  
                               u811 1022                                 u820 1046  
                               u804 11D4                                 u900 137E  
                               u821 1042                                 u805 11D0  
                               u901 137A                                 u920 13EE  
                               u921 13EA                                 u850 110A  
                               u834 106C                                 u770 1138  
                               u930 1428                                 u914 13CE  
                               u851 1104                                 u835 1068  
                               u771 1134                                 u931 1424  
                               u915 13CA                                 u844 10C2  
                               u780 1158                                 u860 1472  
                               u940 145E                                 u845 10BE  
                               u781 1154                                 u861 146E  
                               u941 145A                                 u870 1492  
                               u950 1248                                 u871 148E  
                               u951 1244                                 u856 110C  
                               u880 134E                                 u960 1258  
                               u881 134A                                 u961 1254  
                               u794 117E                                 u890 135E  
                               u970 129E                                 u795 117A  
                               u891 135A                                 u971 129A  
                               u980 12D6                                 u981 12D2  
                               u990 1316                                 u991 1312  
              keypad_initialize@ret 0033                                 _ret 004B  
                               wreg 0FE8                                l1601 13DE  
                              l1611 13FE                                l1603 13EE  
                              l1541 1160                                l1613 1408  
                              l1605 13F6                                l1543 11B6  
                              l1535 1124                                l1623 1430  
                              l1615 140C                                l1561 1046  
                              l1537 1138                                l1625 143E  
                              l1617 1428                                l1633 1234  
                              l1563 104E                                l1571 1120  
                              l1547 1206                                l1539 1158  
                              l1627 1442                                l1651 1270  
                              l1635 1248                                l1565 10A4  
                              l1557 1012                                l1549 1230  
                              l1581 149A                                l1629 145E  
                              l1653 127E                                l1645 1268  
                              l1637 1258                                l1559 1026  
                              l1583 14BC                                l1575 1462  
                              l1591 135E                                l1671 12F6  
                              l1655 1282                                l1639 1260  
                              l1569 10F4                                l1577 1472  
                              l1593 137E                                l1673 12FA  
                              l1665 12B4                                l1657 129E  
                              l1579 1492                                l1683 1536  
                              l1595 1386                                l1587 133A  
                              l1675 1316                                l1667 12C6  
                              l1659 12AC                                l1597 13DA  
                              l1589 134E                                l1677 131A  
                              l1669 12D6                                l1679 1336  
                              l1963 121A                                l1955 151C  
                              l1957 1520             ??_application_initializ 0038  
                              u1000 1336                                u1001 1332  
                              _LATA 0F89                                _LATB 0F8A  
                              _LATC 0F8B                                _LATD 0F8C  
                              _LATE 0F8D      gpio_pin_read_logic@_pin_config 0027  
                              _main 151C                                fsr1h 0FE2  
                              fsr2h 0FDA                                indf1 0FE7  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9            ?_gpio_pin_direction_init 0027  
                              prodl 0FF3                                start 0000  
                      ___param_bank 0000                _gpio_pin_write_logic 1124  
                             ?_main 0027         ecu_dc_motor_initializ@F2897 0049  
       ecu_dc_motor_initializ@F2899 0048                               _PORTA 0F80  
                             _PORTB 0F81                               _PORTC 0F82  
                             _PORTD 0F83                               _PORTE 0F84  
                             _TRISA 0F92                               _TRISB 0F93  
                             _TRISC 0F94                               _TRISD 0F95  
                             _TRISE 0F96            __end_of_keypad_get_value 133A  
                             tablat 0FF5                               status 0FD8  
                   __initialization 14C0                 keypad_get_value@ret 0032  
                      __end_of_main 1536               ?_gpio_pin_write_logic 0027  
               ecu_led_toggle@F2909 003E            gpio_pin_read_logic@logic 0028  
                     _lat_registers 000B                              ??_main 003A  
           _gpio_pin_Initialization 1462                       __activetblptr 0002  
   keypad_initialize@_keypad_config 0032                              clear_0 14E6  
                            isa$std 0001                        __pdataCOMRAM 0001  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                        __accesstop 0080             __end_of__initialization 14EC  
                     ___rparam_used 0001              ??_gpio_pin_write_logic 0029  
                    __pcstackCOMRAM 0027           ??_gpio_pin_Initialization 0030  
      ecu_dc_motor_move_right@F2904 0047        ecu_dc_motor_move_right@F2906 0046  
     __end_of_application_initializ 1542                          __pnvCOMRAM 004B  
gpio_pin_direction_init@_pin_config 0027                   ?_keypad_get_value 002F  
   __end_of_gpio_pin_Initialization 14C0                  ??_keypad_get_value 0031  
                    _tris_registers 0015                             __Hparam 0000  
                           __Lparam 0000                 _gpio_pin_read_logic 133A  
                      __psmallconst 1000                             __pcinit 14C0  
                           __ramtop 1000                             __ptext0 151C  
                           __ptext1 1234                             __ptext2 133A  
                           __ptext3 1536                             __ptext4 13DE  
                           __ptext5 1462                             __ptext6 1124  
                           __ptext7 1012  gpio_pin_Initialization@_pin_config 002F  
              ?_gpio_pin_read_logic 0027                end_of_initialization 14EC  
                     __Lmediumconst 0000                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
             ??_gpio_pin_read_logic 0029               ecu_led_turn_off@F2904 003F  
             keypad_get_value@value 0030             _gpio_pin_direction_init 1012  
    keypad_get_value@_keypad_config 002F                       __pidataCOMRAM 14F6  
          ecu_relay_initializ@F2894 003D                 start_initialization 14C0  
       ecu_dc_motor_move_left@F2911 0045         ecu_dc_motor_move_left@F2913 0044  
                       __pbssCOMRAM 003A               _application_initializ 1536  
          ?_gpio_pin_Initialization 002F           ??_gpio_pin_direction_init 0028  
   gpio_pin_write_logic@_pin_config 0027           gpio_pin_write_logic@logic 0028  
                      _keypad_value 004A                         __smallconst 1000  
                    _keypad_sampels 1001               ecu_relay_toggle@F2909 003A  
        gpio_pin_Initialization@ret 0031                  keypad_initialize@i 0034  
                keypad_initialize@j 0036                ecu_led_turn_on@F2899 0040  
   __end_of_gpio_pin_direction_init 1124             gpio_pin_write_logic@ret 002E  
                         copy_data0 14D4                   _keypad_initialize 13DE  
                 keypad_get_value@i 0036                   keypad_get_value@j 0034  
                 keypad_get_value@k 0038              __end_of_keypad_sampels 1011  
                ?_keypad_initialize 0032              gpio_pin_read_logic@ret 002D  
            ?_application_initializ 0027                            __Hrparam 0000  
                          __Lrparam 0000                 ??_keypad_initialize 0033  
       __end_of_gpio_pin_read_logic 13DE           __end_of_keypad_initialize 1462  
            ecu_dc_motor_stop@F2920 0042              ecu_dc_motor_stop@F2918 0043  
                          _keypad_1 001F                    _keypad_get_value 1234  
           ecu_relay_turn_off@F2904 003B                            isa$xinst 0000  
            ecu_led_initializ@F2894 0041        __end_of_gpio_pin_write_logic 1234  
            ecu_relay_turn_on@F2899 003C         keypad_get_value@colum_logic 0033  
                    _port_registers 0001          gpio_pin_direction_init@ret 002D  
