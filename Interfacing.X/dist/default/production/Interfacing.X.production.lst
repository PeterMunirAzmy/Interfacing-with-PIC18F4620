

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 16 21:39:59 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 17/10/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F4620 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataCOMRAM
    98   0022A0                     __pidataCOMRAM:
    99                           	callstack 0
   100                           
   101                           ;initializer for _lat_registers
   102   0022A0  89                 	db	137
   103   0022A1  0F                 	db	15
   104   0022A2  8A                 	db	138
   105   0022A3  0F                 	db	15
   106   0022A4  8B                 	db	139
   107   0022A5  0F                 	db	15
   108   0022A6  8C                 	db	140
   109   0022A7  0F                 	db	15
   110   0022A8  8D                 	db	141
   111   0022A9  0F                 	db	15
   112                           
   113                           ;initializer for _tris_registers
   114   0022AA  92                 	db	146
   115   0022AB  0F                 	db	15
   116   0022AC  93                 	db	147
   117   0022AD  0F                 	db	15
   118   0022AE  94                 	db	148
   119   0022AF  0F                 	db	15
   120   0022B0  95                 	db	149
   121   0022B1  0F                 	db	15
   122   0022B2  96                 	db	150
   123   0022B3  0F                 	db	15
   124                           
   125                           ;initializer for _lcd_1
   126   0022B4  0A                 	db	10
   127   0022B5  02                 	db	2
   128   0022B6  12                 	db	18
   129   0022B7  1A                 	db	26
   130   0022B8  22                 	db	34
   131   0022B9  2A                 	db	42
   132                           
   133                           	psect	idataBANK0
   134   0022D0                     __pidataBANK0:
   135                           	callstack 0
   136                           
   137                           ;initializer for _port_registers
   138   0022D0  80                 	db	128
   139   0022D1  0F                 	db	15
   140   0022D2  81                 	db	129
   141   0022D3  0F                 	db	15
   142   0022D4  82                 	db	130
   143   0022D5  0F                 	db	15
   144   0022D6  83                 	db	131
   145   0022D7  0F                 	db	15
   146   0022D8  84                 	db	132
   147   0022D9  0F                 	db	15
   148                           
   149                           ;initializer for _adc1
   150   0022DA  04                 	db	low _ADC_Interrupt_function
   151   0022DB  20                 	db	high _ADC_Interrupt_function
   152   0022DC  00                 	db	0
   153   0022DD  05                 	db	5
   154   0022DE  05                 	db	5
   155   0022DF  00                 	db	0
   156   0022E0  00                 	db	0
   157   0022E1  00                 	db	0
   158   0022E2  01                 	db	1
   159                           
   160                           	psect	smallconst
   161   001000                     __psmallconst:
   162                           	callstack 0
   163   001000  00                 	db	0
   164   001001                     _keypad_sampels:
   165                           	callstack 0
   166   001001  37                 	db	55
   167   001002  38                 	db	56
   168   001003  39                 	db	57
   169   001004  2F                 	db	47
   170   001005  34                 	db	52
   171   001006  35                 	db	53
   172   001007  36                 	db	54
   173   001008  2A                 	db	42
   174   001009  31                 	db	49
   175   00100A  32                 	db	50
   176   00100B  33                 	db	51
   177   00100C  2D                 	db	45
   178   00100D  23                 	db	35
   179   00100E  30                 	db	48
   180   00100F  3D                 	db	61
   181   001010  2B                 	db	43
   182   001011                     __end_of_keypad_sampels:
   183                           	callstack 0
   184   000000                     _INTCON2bits	set	4081
   185   000000                     _EECON2	set	4007
   186   000000                     _ADCON1bits	set	4033
   187   000000                     _ADRESL	set	4035
   188   000000                     _ADRESH	set	4036
   189   000000                     _INTCONbits	set	4082
   190   000000                     _TRISD	set	3989
   191   000000                     _TRISC	set	3988
   192   000000                     _TRISB	set	3987
   193   000000                     _TRISE	set	3990
   194   001011                     STR_4:
   195   001011  50                 	db	80	;'P'
   196   001012  4F                 	db	79	;'O'
   197   001013  54                 	db	84	;'T'
   198   001014  31                 	db	49	;'1'
   199   001015  3A                 	db	58	;':'
   200   001016  20                 	db	32
   201   001017  00                 	db	0
   202   001018                     STR_5:
   203   001018  50                 	db	80	;'P'
   204   001019  4F                 	db	79	;'O'
   205   00101A  54                 	db	84	;'T'
   206   00101B  32                 	db	50	;'2'
   207   00101C  3A                 	db	58	;':'
   208   00101D  20                 	db	32
   209   00101E  00                 	db	0
   210   00101F                     STR_6:
   211   00101F  20                 	db	32
   212   001020  20                 	db	32
   213   001021  20                 	db	32
   214   001022  20                 	db	32
   215   001023  00                 	db	0
   216   001024                     STR_1:
   217   001024  25                 	db	37
   218   001025  69                 	db	105	;'i'
   219   001026  00                 	db	0
   220   001027  00                 	db	0	; dummy byte at the end
   221   000000                     
   222                           	psect	nvCOMRAM
   223   000071                     __pnvCOMRAM:
   224                           	callstack 0
   225   000071                     _ret:
   226                           	callstack 0
   227   000071                     	ds	1
   228   000000                     _PORTBbits	set	3969
   229   000000                     _PIE1bits	set	3997
   230   000000                     _ADCON2bits	set	4032
   231   000000                     _ADCON0bits	set	4034
   232   000000                     _PORTE	set	3972
   233   000000                     _PORTD	set	3971
   234   000000                     _PORTC	set	3970
   235   000000                     _PORTB	set	3969
   236   000000                     _PORTA	set	3968
   237   000000                     _LATA	set	3977
   238   000000                     _TRISA	set	3986
   239   000000                     _EECON1bits	set	4006
   240   000000                     _EEDATA	set	4008
   241   000000                     _EEADR	set	4009
   242   000000                     _EEADRH	set	4010
   243   000000                     _IPR1bits	set	3999
   244   000000                     _PIR1bits	set	3998
   245   000000                     _INTCON3bits	set	4080
   246   000000                     _LATE	set	3981
   247   000000                     _LATD	set	3980
   248   000000                     _LATC	set	3979
   249   000000                     _LATB	set	3978
   250                           
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254   001E40                     __pcinit:
   255                           	callstack 0
   256   001E40                     start_initialization:
   257                           	callstack 0
   258   001E40                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Initialize objects allocated to BANK0 (19 bytes)
   262                           ; load TBLPTR registers with __pidataBANK0
   263   001E40  0ED0               	movlw	low __pidataBANK0
   264   001E42  6EF6               	movwf	tblptrl,c
   265   001E44  0E22               	movlw	high __pidataBANK0
   266   001E46  6EF7               	movwf	tblptrh,c
   267   001E48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   268   001E4A  6EF8               	movwf	tblptru,c
   269   001E4C  EE00  F0B8         	lfsr	0,__pdataBANK0
   270   001E50  EE10 F013          	lfsr	1,19
   271   001E54                     copy_data0:
   272   001E54  0009               	tblrd		*+
   273   001E56  CFF5 FFEE          	movff	tablat,postinc0
   274   001E5A  50E5               	movf	postdec1,w,c
   275   001E5C  50E1               	movf	fsr1l,w,c
   276   001E5E  E1FA               	bnz	copy_data0
   277                           
   278                           ; Initialize objects allocated to COMRAM (26 bytes)
   279                           ; load TBLPTR registers with __pidataCOMRAM
   280   001E60  0EA0               	movlw	low __pidataCOMRAM
   281   001E62  6EF6               	movwf	tblptrl,c
   282   001E64  0E22               	movlw	high __pidataCOMRAM
   283   001E66  6EF7               	movwf	tblptrh,c
   284   001E68  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   285   001E6A  6EF8               	movwf	tblptru,c
   286   001E6C  EE00  F057         	lfsr	0,__pdataCOMRAM
   287   001E70  EE10 F01A          	lfsr	1,26
   288   001E74                     copy_data1:
   289   001E74  0009               	tblrd		*+
   290   001E76  CFF5 FFEE          	movff	tablat,postinc0
   291   001E7A  50E5               	movf	postdec1,w,c
   292   001E7C  50E1               	movf	fsr1l,w,c
   293   001E7E  E1FA               	bnz	copy_data1
   294                           
   295                           ; Clear objects allocated to BANK0 (56 bytes)
   296   001E80  EE00  F080         	lfsr	0,__pbssBANK0
   297   001E84  0E38               	movlw	56
   298   001E86                     clear_0:
   299   001E86  6AEE               	clrf	postinc0,c
   300   001E88  06E8               	decf	wreg,f,c
   301   001E8A  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to COMRAM (42 bytes)
   304   001E8C  EE00  F02D         	lfsr	0,__pbssCOMRAM
   305   001E90  0E2A               	movlw	42
   306   001E92                     clear_1:
   307   001E92  6AEE               	clrf	postinc0,c
   308   001E94  06E8               	decf	wreg,f,c
   309   001E96  E1FD               	bnz	clear_1
   310   001E98                     end_of_initialization:
   311                           	callstack 0
   312   001E98                     __end_of__initialization:
   313                           	callstack 0
   314   001E98  9072               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315   001E9A  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316   001E9C  0100               	movlb	0
   317   001E9E  EFC7  F009         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMRAM
   320   00002D                     __pbssCOMRAM:
   321                           	callstack 0
   322   00002D                     _width:
   323                           	callstack 0
   324   00002D                     	ds	2
   325   00002F                     _prec:
   326                           	callstack 0
   327   00002F                     	ds	2
   328   000031                     _RB7_InterruptHandler:
   329                           	callstack 0
   330   000031                     	ds	2
   331   000033                     _RB6_InterruptHandler:
   332                           	callstack 0
   333   000033                     	ds	2
   334   000035                     _RB5_InterruptHandler:
   335                           	callstack 0
   336   000035                     	ds	2
   337   000037                     _RB4_InterruptHandler:
   338                           	callstack 0
   339   000037                     	ds	2
   340   000039                     _INT2_InterruptHandler:
   341                           	callstack 0
   342   000039                     	ds	2
   343   00003B                     _INT1_InterruptHandler:
   344                           	callstack 0
   345   00003B                     	ds	2
   346   00003D                     _INT0_InterruptHandler:
   347                           	callstack 0
   348   00003D                     	ds	2
   349   00003F                     _ADC_InterruptHandler:
   350                           	callstack 0
   351   00003F                     	ds	2
   352   000041                     _flags:
   353                           	callstack 0
   354   000041                     	ds	1
   355   000042                     _flag:
   356                           	callstack 0
   357   000042                     	ds	1
   358   000043                     ecu_relay_toggle@F3076:
   359                           	callstack 0
   360   000043                     	ds	1
   361   000044                     ecu_relay_turn_off@F3071:
   362                           	callstack 0
   363   000044                     	ds	1
   364   000045                     ecu_relay_turn_on@F3066:
   365                           	callstack 0
   366   000045                     	ds	1
   367   000046                     ecu_relay_initializ@F3061:
   368                           	callstack 0
   369   000046                     	ds	1
   370   000047                     ecu_led_toggle@F3076:
   371                           	callstack 0
   372   000047                     	ds	1
   373   000048                     ecu_led_turn_off@F3071:
   374                           	callstack 0
   375   000048                     	ds	1
   376   000049                     ecu_led_turn_on@F3066:
   377                           	callstack 0
   378   000049                     	ds	1
   379   00004A                     ecu_led_initializ@F3061:
   380                           	callstack 0
   381   00004A                     	ds	1
   382   00004B                     ecu_dc_motor_stop@F3087:
   383                           	callstack 0
   384   00004B                     	ds	1
   385   00004C                     ecu_dc_motor_stop@F3085:
   386                           	callstack 0
   387   00004C                     	ds	1
   388   00004D                     ecu_dc_motor_move_left@F3080:
   389                           	callstack 0
   390   00004D                     	ds	1
   391   00004E                     ecu_dc_motor_move_left@F3078:
   392                           	callstack 0
   393   00004E                     	ds	1
   394   00004F                     ecu_dc_motor_move_right@F3073:
   395                           	callstack 0
   396   00004F                     	ds	1
   397   000050                     ecu_dc_motor_move_right@F3071:
   398                           	callstack 0
   399   000050                     	ds	1
   400   000051                     ecu_dc_motor_initializ@F3066:
   401                           	callstack 0
   402   000051                     	ds	1
   403   000052                     ecu_dc_motor_initializ@F3064:
   404                           	callstack 0
   405   000052                     	ds	1
   406   000053                     _res_2:
   407                           	callstack 0
   408   000053                     	ds	2
   409   000055                     _res_1:
   410                           	callstack 0
   411   000055                     	ds	2
   412                           
   413                           	psect	dataCOMRAM
   414   000057                     __pdataCOMRAM:
   415                           	callstack 0
   416   000057                     _lat_registers:
   417                           	callstack 0
   418   000057                     	ds	10
   419   000061                     _tris_registers:
   420                           	callstack 0
   421   000061                     	ds	10
   422   00006B                     _lcd_1:
   423                           	callstack 0
   424   00006B                     	ds	6
   425                           
   426                           	psect	bssBANK0
   427   000080                     __pbssBANK0:
   428                           	callstack 0
   429   000080                     _dbuf:
   430                           	callstack 0
   431   000080                     	ds	32
   432   0000A0                     _result_2:
   433                           	callstack 0
   434   0000A0                     	ds	12
   435   0000AC                     _result_1:
   436                           	callstack 0
   437   0000AC                     	ds	12
   438                           
   439                           	psect	dataBANK0
   440   0000B8                     __pdataBANK0:
   441                           	callstack 0
   442   0000B8                     _port_registers:
   443                           	callstack 0
   444   0000B8                     	ds	10
   445   0000C2                     _adc1:
   446                           	callstack 0
   447   0000C2                     	ds	9
   448                           
   449                           	psect	cstackBANK0
   450   0000CB                     __pcstackBANK0:
   451                           	callstack 0
   452   0000CB                     sprintf@ap:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x0
   456   0000CB                     	ds	1
   457   0000CC                     sprintf@f:
   458                           	callstack 0
   459                           
   460                           ; 12 bytes @ 0x1
   461   0000CC                     	ds	12
   462                           
   463                           	psect	cstackCOMRAM
   464   000001                     __pcstackCOMRAM:
   465                           	callstack 0
   466   000001                     ADC_Get_Conversion_Result@adc_config:
   467                           	callstack 0
   468   000001                     
   469                           ; 1 bytes @ 0x0
   470   000001                     	ds	1
   471   000002                     ADC_Get_Conversion_Result@conversion_result:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x1
   475   000002                     	ds	1
   476   000003                     ??_ADC_Get_Conversion_Result:
   477                           
   478                           ; 1 bytes @ 0x2
   479   000003                     	ds	4
   480   000007                     ADC_Get_Conversion_Result@ret:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x6
   484   000007                     	ds	1
   485   000008                     ??_Interrupt_Manager:
   486                           
   487                           ; 1 bytes @ 0x7
   488   000008                     	ds	4
   489   00000C                     ??_ADC_Input_Channel_Port_Configuration:
   490   00000C                     ?___awdiv:
   491                           	callstack 0
   492   00000C                     ?___awmod:
   493                           	callstack 0
   494   00000C                     ADC_Start_Conversion@adc_config:
   495                           	callstack 0
   496   00000C                     ADC_Voltage_Reference_Configuration@adc_config:
   497                           	callstack 0
   498   00000C                     ADC_Result_Format_Configuration@adc_config:
   499                           	callstack 0
   500   00000C                     gpio_pin_direction_init@_pin_config:
   501                           	callstack 0
   502   00000C                     gpio_pin_write_logic@_pin_config:
   503                           	callstack 0
   504   00000C                     memset@dest:
   505                           	callstack 0
   506   00000C                     ___awdiv@dividend:
   507                           	callstack 0
   508   00000C                     ___awmod@dividend:
   509                           	callstack 0
   510   00000C                     fputc@c:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xB
   514   00000C                     	ds	1
   515   00000D                     ??_gpio_pin_direction_init:
   516   00000D                     ADC_Start_Conversion@ret:
   517                           	callstack 0
   518   00000D                     gpio_pin_write_logic@logic:
   519                           	callstack 0
   520   00000D                     memset@c:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xC
   524   00000D                     	ds	1
   525   00000E                     ??_gpio_pin_write_logic:
   526   00000E                     ADC_Input_Channel_Port_Configuration@adc_channel_select:
   527                           	callstack 0
   528   00000E                     fputc@fp:
   529                           	callstack 0
   530   00000E                     ___awdiv@divisor:
   531                           	callstack 0
   532   00000E                     ___awmod@divisor:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xD
   536   00000E                     	ds	1
   537   00000F                     ??_fputc:
   538   00000F                     ADC_Init@adc_config:
   539                           	callstack 0
   540   00000F                     ADC_Select_Channel@adc_config:
   541                           	callstack 0
   542   00000F                     memset@n:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xE
   546   00000F                     	ds	1
   547   000010                     ??_ADC_Init:
   548   000010                     ADC_Select_Channel@adc_channel_select:
   549                           	callstack 0
   550   000010                     ___awdiv@counter:
   551                           	callstack 0
   552   000010                     ___awmod@counter:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0xF
   556   000010                     	ds	1
   557   000011                     ??_ADC_Select_Channel:
   558   000011                     ___awdiv@sign:
   559                           	callstack 0
   560   000011                     ___awmod@sign:
   561                           	callstack 0
   562   000011                     memset@p:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x10
   566   000011                     	ds	1
   567   000012                     ?_abs:
   568                           	callstack 0
   569   000012                     ADC_Init@ret:
   570                           	callstack 0
   571   000012                     ADC_Select_Channel@ret:
   572                           	callstack 0
   573   000012                     gpio_pin_direction_init@ret:
   574                           	callstack 0
   575   000012                     ___awdiv@quotient:
   576                           	callstack 0
   577   000012                     abs@a:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x11
   581   000012                     	ds	1
   582   000013                     ADC_Full_Conversion_Interrupt@adc_config:
   583                           	callstack 0
   584   000013                     gpio_pin_write_logic@ret:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x12
   588   000013                     	ds	1
   589   000014                     ??_abs:
   590   000014                     lcd_send_4bits@lcd:
   591                           	callstack 0
   592   000014                     lcd_send_4bit_enable_signal@lcd:
   593                           	callstack 0
   594   000014                     ADC_Full_Conversion_Interrupt@adc_channel_select:
   595                           	callstack 0
   596   000014                     gpio_pin_Initialization@_pin_config:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x13
   600   000014                     	ds	1
   601   000015                     ??_gpio_pin_Initialization:
   602   000015                     ??_lcd_send_4bit_enable_signal:
   603   000015                     lcd_send_4bits@data_command:
   604                           	callstack 0
   605   000015                     ADC_Full_Conversion_Interrupt@ret:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x14
   609   000015                     	ds	1
   610   000016                     ??_lcd_send_4bits:
   611   000016                     lcd_send_4bit_enable_signal@ret:
   612                           	callstack 0
   613   000016                     gpio_pin_Initialization@ret:
   614                           	callstack 0
   615   000016                     vfpfcnvrt@fp:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x15
   619   000016                     	ds	1
   620   000017                     vfpfcnvrt@fmt:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x16
   624   000017                     	ds	1
   625   000018                     lcd_send_4bits@ret:
   626                           	callstack 0
   627   000018                     vfpfcnvrt@ap:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x17
   631   000018                     	ds	1
   632   000019                     ??_vfpfcnvrt:
   633   000019                     lcd_send_4bits@i:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x18
   637   000019                     	ds	1
   638   00001A                     vfpfcnvrt@done:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x19
   642   00001A                     	ds	1
   643   00001B                     lcd_4bit_send_command@lcd:
   644                           	callstack 0
   645   00001B                     lcd_4bit_send_data@lcd:
   646                           	callstack 0
   647   00001B                     vfpfcnvrt@cp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x1A
   651   00001B                     	ds	1
   652   00001C                     lcd_4bit_send_command@command:
   653                           	callstack 0
   654   00001C                     lcd_4bit_send_data@data:
   655                           	callstack 0
   656   00001C                     vfpfcnvrt@convarg:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x1B
   660   00001C                     	ds	1
   661   00001D                     lcd_4bit_send_command@ret:
   662                           	callstack 0
   663   00001D                     lcd_4bit_send_data@ret:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x1C
   667   00001D                     	ds	1
   668   00001E                     lcd_4bit_init@lcd:
   669                           	callstack 0
   670   00001E                     lcd_4bit_set_cursor@lcd:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x1D
   674   00001E                     	ds	1
   675   00001F                     ??_lcd_4bit_init:
   676   00001F                     lcd_4bit_set_cursor@row:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x1E
   680   00001F                     	ds	1
   681   000020                     lcd_4bit_set_cursor@colum:
   682                           	callstack 0
   683   000020                     vfpfcnvrt@c:
   684                           	callstack 0
   685   000020                     lcd_4bit_init@i:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x1F
   689   000020                     	ds	1
   690   000021                     ?_vfprintf:
   691                           	callstack 0
   692   000021                     lcd_4bit_set_cursor@ret:
   693                           	callstack 0
   694   000021                     vfprintf@fp:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x20
   698   000021                     	ds	1
   699   000022                     lcd_4bit_init@ret:
   700                           	callstack 0
   701   000022                     lcd_4bit_send_string_pos@lcd:
   702                           	callstack 0
   703   000022                     vfprintf@fmt:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x21
   707   000022                     	ds	1
   708   000023                     lcd_4bit_send_string_pos@row:
   709                           	callstack 0
   710   000023                     vfprintf@ap:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x22
   714   000023                     	ds	1
   715   000024                     lcd_4bit_send_string_pos@colum:
   716                           	callstack 0
   717   000024                     vfprintf@cfmt:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x23
   721   000024                     	ds	1
   722   000025                     ?_sprintf:
   723                           	callstack 0
   724   000025                     sprintf@s:
   725                           	callstack 0
   726   000025                     lcd_4bit_send_string_pos@str:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x24
   730   000025                     	ds	1
   731   000026                     sprintf@fmt:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x25
   735   000026                     	ds	1
   736   000027                     lcd_4bit_send_string_pos@ret:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x26
   740   000027                     	ds	2
   741   000029                     convert_uint16_to_string@value:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x28
   745   000029                     	ds	2
   746   00002B                     convert_uint16_to_string@str:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x2A
   750   00002B                     	ds	1
   751   00002C                     convert_uint16_to_string@ret:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x2B
   755   00002C                     	ds	1
   756   00002D                     
   757                           ; 1 bytes @ 0x2C
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 28 in file "application.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2  960[None  ] int 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels required when called: 10
   783 ;; This function calls:
   784 ;;		_ADC_Full_Conversion_Interrupt
   785 ;;		_application_initializ
   786 ;;		_convert_uint16_to_string
   787 ;;		_lcd_4bit_send_string_pos
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text0
   794   00138E                     __ptext0:
   795                           	callstack 0
   796   00138E                     _main:
   797                           	callstack 21
   798   00138E                     
   799                           ;application.c: 30:     application_initializ();
   800   00138E  EC5D  F011         	call	_application_initializ	;wreg free
   801   001392                     
   802                           ;application.c: 31:     ret = lcd_4bit_send_string_pos(&lcd_1 , 1 , 1 ,"POT1: ");
   803   001392  0E6B               	movlw	low _lcd_1
   804   001394  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   805   001396  0E01               	movlw	1
   806   001398  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
   807   00139A  0E01               	movlw	1
   808   00139C  6E24               	movwf	lcd_4bit_send_string_pos@colum^0,c
   809   00139E  0E11               	movlw	low STR_4
   810   0013A0  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
   811   0013A2  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
   812   0013A4  A4D8               	btfss	status,2,c
   813   0013A6  0E10               	movlw	high __smallconst
   814   0013A8  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   815   0013AA  EC8A  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   816   0013AE  6E71               	movwf	_ret^0,c
   817   0013B0                     
   818                           ;application.c: 32:     ret = lcd_4bit_send_string_pos(&lcd_1 , 2 , 1 ,"POT2: ");
   819   0013B0  0E6B               	movlw	low _lcd_1
   820   0013B2  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   821   0013B4  0E02               	movlw	2
   822   0013B6  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
   823   0013B8  0E01               	movlw	1
   824   0013BA  6E24               	movwf	lcd_4bit_send_string_pos@colum^0,c
   825   0013BC  0E18               	movlw	low STR_5
   826   0013BE  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
   827   0013C0  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
   828   0013C2  A4D8               	btfss	status,2,c
   829   0013C4  0E10               	movlw	high __smallconst
   830   0013C6  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   831   0013C8  EC8A  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   832   0013CC  6E71               	movwf	_ret^0,c
   833   0013CE                     l5231:
   834                           
   835                           ;application.c: 36:         if (0 == flag) {
   836   0013CE  5042               	movf	_flag^0,w,c
   837   0013D0  A4D8               	btfss	status,2,c
   838   0013D2  EFED  F009         	goto	u4391
   839   0013D6  EFEF  F009         	goto	u4390
   840   0013DA                     u4391:
   841   0013DA  EF1B  F00A         	goto	l5241
   842   0013DE                     u4390:
   843   0013DE                     
   844                           ;application.c: 37:             ret = ADC_Full_Conversion_Interrupt(&adc1, ADC_CHANNEL_A
      +                          N0);
   845   0013DE  0EC2               	movlw	low _adc1
   846   0013E0  6E13               	movwf	ADC_Full_Conversion_Interrupt@adc_config^0,c
   847   0013E2  0E00               	movlw	0
   848   0013E4  6E14               	movwf	ADC_Full_Conversion_Interrupt@adc_channel_select^0,c
   849   0013E6  ECF6  F010         	call	_ADC_Full_Conversion_Interrupt	;wreg free
   850   0013EA  6E71               	movwf	_ret^0,c
   851   0013EC                     
   852                           ;application.c: 38:             ret = convert_uint16_to_string(res_1, result_1);
   853   0013EC  C055  F029         	movff	_res_1,convert_uint16_to_string@value
   854   0013F0  C056  F02A         	movff	_res_1+1,convert_uint16_to_string@value+1
   855   0013F4  0EAC               	movlw	low _result_1
   856   0013F6  6E2B               	movwf	convert_uint16_to_string@str^0,c
   857   0013F8  ECDC  F00F         	call	_convert_uint16_to_string	;wreg free
   858   0013FC  6E71               	movwf	_ret^0,c
   859   0013FE                     
   860                           ;application.c: 41:             lcd_4bit_send_string_pos(&lcd_1, 1, 6, "    ");
   861   0013FE  0E6B               	movlw	low _lcd_1
   862   001400  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   863   001402  0E01               	movlw	1
   864   001404  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
   865   001406  0E06               	movlw	6
   866   001408  6E24               	movwf	lcd_4bit_send_string_pos@colum^0,c
   867   00140A  0E1F               	movlw	low STR_6
   868   00140C  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
   869   00140E  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
   870   001410  A4D8               	btfss	status,2,c
   871   001412  0E10               	movlw	high __smallconst
   872   001414  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   873   001416  EC8A  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   874   00141A                     
   875                           ;application.c: 44:             ret = lcd_4bit_send_string_pos(&lcd_1, 1, 6, result_1);
   876   00141A  0E6B               	movlw	low _lcd_1
   877   00141C  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   878   00141E  0E01               	movlw	1
   879   001420  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
   880   001422  0E06               	movlw	6
   881   001424  6E24               	movwf	lcd_4bit_send_string_pos@colum^0,c
   882   001426  0EAC               	movlw	low _result_1
   883   001428  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
   884   00142A  6A26               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
   885   00142C  EC8A  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   886   001430  6E71               	movwf	_ret^0,c
   887                           
   888                           ;application.c: 45:         } else if (1 == flag) {
   889   001432  EFE7  F009         	goto	l5231
   890   001436                     l5241:
   891   001436  0442               	decf	_flag^0,w,c
   892   001438  A4D8               	btfss	status,2,c
   893   00143A  EF21  F00A         	goto	u4401
   894   00143E  EF23  F00A         	goto	u4400
   895   001442                     u4401:
   896   001442  EFE7  F009         	goto	l5231
   897   001446                     u4400:
   898   001446                     
   899                           ;application.c: 46:             ret = ADC_Full_Conversion_Interrupt(&adc1, ADC_CHANNEL_A
      +                          N1);
   900   001446  0EC2               	movlw	low _adc1
   901   001448  6E13               	movwf	ADC_Full_Conversion_Interrupt@adc_config^0,c
   902   00144A  0E01               	movlw	1
   903   00144C  6E14               	movwf	ADC_Full_Conversion_Interrupt@adc_channel_select^0,c
   904   00144E  ECF6  F010         	call	_ADC_Full_Conversion_Interrupt	;wreg free
   905   001452  6E71               	movwf	_ret^0,c
   906   001454                     
   907                           ;application.c: 47:             ret = convert_uint16_to_string(res_2, result_2);
   908   001454  C053  F029         	movff	_res_2,convert_uint16_to_string@value
   909   001458  C054  F02A         	movff	_res_2+1,convert_uint16_to_string@value+1
   910   00145C  0EA0               	movlw	low _result_2
   911   00145E  6E2B               	movwf	convert_uint16_to_string@str^0,c
   912   001460  ECDC  F00F         	call	_convert_uint16_to_string	;wreg free
   913   001464  6E71               	movwf	_ret^0,c
   914   001466                     
   915                           ;application.c: 50:             lcd_4bit_send_string_pos(&lcd_1, 2, 6, "    ");
   916   001466  0E6B               	movlw	low _lcd_1
   917   001468  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   918   00146A  0E02               	movlw	2
   919   00146C  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
   920   00146E  0E06               	movlw	6
   921   001470  6E24               	movwf	lcd_4bit_send_string_pos@colum^0,c
   922   001472  0E1F               	movlw	low STR_6
   923   001474  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
   924   001476  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
   925   001478  A4D8               	btfss	status,2,c
   926   00147A  0E10               	movlw	high __smallconst
   927   00147C  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   928   00147E  EC8A  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   929   001482                     
   930                           ;application.c: 53:             ret = lcd_4bit_send_string_pos(&lcd_1, 2, 6, result_2);
   931   001482  0E6B               	movlw	low _lcd_1
   932   001484  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   933   001486  0E02               	movlw	2
   934   001488  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
   935   00148A  0E06               	movlw	6
   936   00148C  6E24               	movwf	lcd_4bit_send_string_pos@colum^0,c
   937   00148E  0EA0               	movlw	low _result_2
   938   001490  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
   939   001492  6A26               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
   940   001494  EC8A  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   941   001498  6E71               	movwf	_ret^0,c
   942   00149A  EFE7  F009         	goto	l5231
   943   00149E  EF07  F000         	goto	start
   944   0014A2                     __end_of_main:
   945                           	callstack 0
   946                           
   947 ;; *************** function _lcd_4bit_send_string_pos *****************
   948 ;; Defined at:
   949 ;;		line 165 in file "ECU_layer/lcd/lcd.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  lcd             1   33[COMRAM] PTR const struct .
   952 ;;		 -> lcd_1(6), 
   953 ;;  row             1   34[COMRAM] unsigned char 
   954 ;;  colum           1   35[COMRAM] unsigned char 
   955 ;;  str             2   36[COMRAM] PTR unsigned char 
   956 ;;		 -> STR_7(5), result_2(12), STR_6(5), result_1(12), 
   957 ;;		 -> STR_5(7), STR_4(7), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  ret             1   38[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      unsigned char 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        6 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 8
   976 ;; This function calls:
   977 ;;		_lcd_4bit_send_data
   978 ;;		_lcd_4bit_set_cursor
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text1
   985   001B14                     __ptext1:
   986                           	callstack 0
   987   001B14                     _lcd_4bit_send_string_pos:
   988                           	callstack 22
   989   001B14                     
   990                           ;ECU_layer/lcd/lcd.c: 169:     if ((((void*)0) == lcd) || (((void*)0) == str))
   991   001B14  5022               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
   992   001B16  B4D8               	btfsc	status,2,c
   993   001B18  EF90  F00D         	goto	u2841
   994   001B1C  EF92  F00D         	goto	u2840
   995   001B20                     u2841:
   996   001B20  EF9B  F00D         	goto	l4129
   997   001B24                     u2840:
   998   001B24  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
   999   001B26  1026               	iorwf	(lcd_4bit_send_string_pos@str+1)^0,w,c
  1000   001B28  A4D8               	btfss	status,2,c
  1001   001B2A  EF99  F00D         	goto	u2851
  1002   001B2E  EF9B  F00D         	goto	u2850
  1003   001B32                     u2851:
  1004   001B32  EF9F  F00D         	goto	l4131
  1005   001B36                     u2850:
  1006   001B36                     l4129:
  1007                           
  1008                           ;ECU_layer/lcd/lcd.c: 170:     {;ECU_layer/lcd/lcd.c: 171:         ret = (STD_ReturnType
      +                          )0x00;
  1009   001B36  0E00               	movlw	0
  1010   001B38  6E27               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1011                           
  1012                           ;ECU_layer/lcd/lcd.c: 172:     }
  1013   001B3A  EFE6  F00D         	goto	l4143
  1014   001B3E                     l4131:
  1015                           
  1016                           ;ECU_layer/lcd/lcd.c: 174:     {;ECU_layer/lcd/lcd.c: 175:         ret = lcd_4bit_set_cu
      +                          rsor(lcd , row , colum);
  1017   001B3E  C022  F01E         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1018   001B42  C023  F01F         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1019   001B46  C024  F020         	movff	lcd_4bit_send_string_pos@colum,lcd_4bit_set_cursor@colum
  1020   001B4A  EC95  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  1021   001B4E  6E27               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1022                           
  1023                           ;ECU_layer/lcd/lcd.c: 176:         while(*str)
  1024   001B50  EFCD  F00D         	goto	l4141
  1025   001B54                     l4133:
  1026                           
  1027                           ;ECU_layer/lcd/lcd.c: 177:         {;ECU_layer/lcd/lcd.c: 178:             ret = lcd_4bi
      +                          t_send_data(lcd , *str++);
  1028   001B54  C022  F01B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_data@lcd
  1029   001B58  C025  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1030   001B5C  C026  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1031   001B60  0E00               	movlw	low (__smallconst shr (0+16))
  1032   001B62  6EF8               	movwf	tblptru,c
  1033   001B64  0E0F               	movlw	(high __ramtop+-1)
  1034   001B66  64F7               	cpfsgt	tblptrh,c
  1035   001B68  D003               	bra	u2867
  1036   001B6A  0008               	tblrd		*
  1037   001B6C  50F5               	movf	tablat,w,c
  1038   001B6E  D005               	bra	u2860
  1039   001B70                     u2867:
  1040   001B70  CFF6 FFE9          	movff	tblptrl,fsr0l
  1041   001B74  CFF7 FFEA          	movff	tblptrh,fsr0h
  1042   001B78  50EF               	movf	indf0,w,c
  1043   001B7A                     u2860:
  1044   001B7A  6E1C               	movwf	lcd_4bit_send_data@data^0,c
  1045   001B7C  EC80  F00F         	call	_lcd_4bit_send_data	;wreg free
  1046   001B80  6E27               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1047   001B82  4A25               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1048   001B84  2A26               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1049   001B86                     
  1050                           ;ECU_layer/lcd/lcd.c: 180:             if (ret != (STD_ReturnType)0x01)
  1051   001B86  0427               	decf	lcd_4bit_send_string_pos@ret^0,w,c
  1052   001B88  B4D8               	btfsc	status,2,c
  1053   001B8A  EFC9  F00D         	goto	u2871
  1054   001B8E  EFCB  F00D         	goto	u2870
  1055   001B92                     u2871:
  1056   001B92  EFCD  F00D         	goto	l4141
  1057   001B96                     u2870:
  1058   001B96  EFE6  F00D         	goto	l4143
  1059   001B9A                     l4141:
  1060                           
  1061                           ;ECU_layer/lcd/lcd.c: 176:         while(*str)
  1062   001B9A  C025  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1063   001B9E  C026  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1064   001BA2  0E00               	movlw	low (__smallconst shr (0+16))
  1065   001BA4  6EF8               	movwf	tblptru,c
  1066   001BA6  0E0F               	movlw	(high __ramtop+-1)
  1067   001BA8  64F7               	cpfsgt	tblptrh,c
  1068   001BAA  D003               	bra	u2887
  1069   001BAC  0008               	tblrd		*
  1070   001BAE  50F5               	movf	tablat,w,c
  1071   001BB0  D005               	bra	u2880
  1072   001BB2                     u2887:
  1073   001BB2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1074   001BB6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1075   001BBA  50EF               	movf	indf0,w,c
  1076   001BBC                     u2880:
  1077   001BBC  0900               	iorlw	0
  1078   001BBE  A4D8               	btfss	status,2,c
  1079   001BC0  EFE4  F00D         	goto	u2891
  1080   001BC4  EFE6  F00D         	goto	u2890
  1081   001BC8                     u2891:
  1082   001BC8  EFAA  F00D         	goto	l4133
  1083   001BCC                     u2890:
  1084   001BCC                     l4143:
  1085                           
  1086                           ;ECU_layer/lcd/lcd.c: 186:     return ret;
  1087   001BCC  5027               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1088   001BCE  0012               	return		;funcret
  1089   001BD0                     __end_of_lcd_4bit_send_string_pos:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _lcd_4bit_set_cursor *****************
  1093 ;; Defined at:
  1094 ;;		line 267 in file "ECU_layer/lcd/lcd.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  lcd             1   29[COMRAM] PTR const struct .
  1097 ;;		 -> lcd_1(6), 
  1098 ;;  row             1   30[COMRAM] unsigned char 
  1099 ;;  colum           1   31[COMRAM] unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  ret             1   32[COMRAM] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      unsigned char 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        4 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; Hardware stack levels required when called: 7
  1118 ;; This function calls:
  1119 ;;		_lcd_4bit_send_command
  1120 ;; This function is called by:
  1121 ;;		_lcd_4bit_send_string_pos
  1122 ;;		_lcd_4bit_send_data_pos
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text2
  1127   001D2A                     __ptext2:
  1128                           	callstack 0
  1129   001D2A                     _lcd_4bit_set_cursor:
  1130                           	callstack 22
  1131   001D2A                     
  1132                           ;ECU_layer/lcd/lcd.c: 270:     colum--;
  1133   001D2A  0620               	decf	lcd_4bit_set_cursor@colum^0,f,c
  1134   001D2C                     
  1135                           ;ECU_layer/lcd/lcd.c: 272:     if (((void*)0) == lcd)
  1136   001D2C  501E               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1137   001D2E  A4D8               	btfss	status,2,c
  1138   001D30  EF9C  F00E         	goto	u2721
  1139   001D34  EF9E  F00E         	goto	u2720
  1140   001D38                     u2721:
  1141   001D38  EFD3  F00E         	goto	l3979
  1142   001D3C                     u2720:
  1143   001D3C                     
  1144                           ;ECU_layer/lcd/lcd.c: 273:     {;ECU_layer/lcd/lcd.c: 274:         ret = (STD_ReturnType
      +                          )0x00;
  1145   001D3C  0E00               	movlw	0
  1146   001D3E  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1147                           
  1148                           ;ECU_layer/lcd/lcd.c: 275:     }
  1149   001D40  EFE6  F00E         	goto	l3981
  1150   001D44                     l3967:
  1151                           
  1152                           ;ECU_layer/lcd/lcd.c: 281:                 ret = lcd_4bit_send_command(lcd , (0x80 + col
      +                          um));
  1153   001D44  C01E  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1154   001D48  5020               	movf	lcd_4bit_set_cursor@colum^0,w,c
  1155   001D4A  0F80               	addlw	128
  1156   001D4C  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  1157   001D4E  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  1158   001D52  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1159                           
  1160                           ;ECU_layer/lcd/lcd.c: 282:                 break;
  1161   001D54  EFE6  F00E         	goto	l3981
  1162   001D58                     l3969:
  1163                           
  1164                           ;ECU_layer/lcd/lcd.c: 284:                 ret = lcd_4bit_send_command(lcd , (0xC0 + col
      +                          um));
  1165   001D58  C01E  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1166   001D5C  5020               	movf	lcd_4bit_set_cursor@colum^0,w,c
  1167   001D5E  0FC0               	addlw	192
  1168   001D60  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  1169   001D62  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  1170   001D66  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1171                           
  1172                           ;ECU_layer/lcd/lcd.c: 285:                 break;
  1173   001D68  EFE6  F00E         	goto	l3981
  1174   001D6C                     l3971:
  1175                           
  1176                           ;ECU_layer/lcd/lcd.c: 287:                 ret = lcd_4bit_send_command(lcd , (0x94 + col
      +                          um));
  1177   001D6C  C01E  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1178   001D70  5020               	movf	lcd_4bit_set_cursor@colum^0,w,c
  1179   001D72  0F94               	addlw	148
  1180   001D74  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  1181   001D76  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  1182   001D7A  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1183                           
  1184                           ;ECU_layer/lcd/lcd.c: 288:                 break;
  1185   001D7C  EFE6  F00E         	goto	l3981
  1186   001D80                     l3973:
  1187                           
  1188                           ;ECU_layer/lcd/lcd.c: 290:                 ret = lcd_4bit_send_command(lcd , (0xD4 + col
      +                          um));
  1189   001D80  C01E  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1190   001D84  5020               	movf	lcd_4bit_set_cursor@colum^0,w,c
  1191   001D86  0FD4               	addlw	212
  1192   001D88  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  1193   001D8A  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  1194   001D8E  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1195                           
  1196                           ;ECU_layer/lcd/lcd.c: 291:                 break;
  1197   001D90  EFE6  F00E         	goto	l3981
  1198   001D94                     l3975:
  1199                           
  1200                           ;ECU_layer/lcd/lcd.c: 293:                 ret = lcd_4bit_send_command(lcd , 0x02);
  1201   001D94  C01E  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1202   001D98  0E02               	movlw	2
  1203   001D9A  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  1204   001D9C  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  1205   001DA0  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1206                           
  1207                           ;ECU_layer/lcd/lcd.c: 294:                 break;
  1208   001DA2  EFE6  F00E         	goto	l3981
  1209   001DA6                     l3979:
  1210   001DA6  501F               	movf	lcd_4bit_set_cursor@row^0,w,c
  1211                           
  1212                           ; Switch size 1, requested type "simple"
  1213                           ; Number of cases is 4, Range of values is 1 to 4
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte           13     7 (average)
  1217                           ;	Chosen strategy is simple_byte
  1218   001DA8  0A01               	xorlw	1	; case 1
  1219   001DAA  B4D8               	btfsc	status,2,c
  1220   001DAC  EFA2  F00E         	goto	l3967
  1221   001DB0  0A03               	xorlw	3	; case 2
  1222   001DB2  B4D8               	btfsc	status,2,c
  1223   001DB4  EFAC  F00E         	goto	l3969
  1224   001DB8  0A01               	xorlw	1	; case 3
  1225   001DBA  B4D8               	btfsc	status,2,c
  1226   001DBC  EFB6  F00E         	goto	l3971
  1227   001DC0  0A07               	xorlw	7	; case 4
  1228   001DC2  B4D8               	btfsc	status,2,c
  1229   001DC4  EFC0  F00E         	goto	l3973
  1230   001DC8  EFCA  F00E         	goto	l3975
  1231   001DCC                     l3981:
  1232                           
  1233                           ;ECU_layer/lcd/lcd.c: 297:     return ret;
  1234   001DCC  5021               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1235   001DCE  0012               	return		;funcret
  1236   001DD0                     __end_of_lcd_4bit_set_cursor:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _lcd_4bit_send_data *****************
  1240 ;; Defined at:
  1241 ;;		line 82 in file "ECU_layer/lcd/lcd.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  lcd             1   26[COMRAM] PTR const struct .
  1244 ;;		 -> lcd_1(6), 
  1245 ;;  data            1   27[COMRAM] unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  ret             1   28[COMRAM] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      unsigned char 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;Total ram usage:        3 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; Hardware stack levels required when called: 6
  1264 ;; This function calls:
  1265 ;;		_gpio_pin_write_logic
  1266 ;;		_lcd_send_4bit_enable_signal
  1267 ;;		_lcd_send_4bits
  1268 ;; This function is called by:
  1269 ;;		_lcd_4bit_send_string_pos
  1270 ;;		_lcd_4bit_send_data_pos
  1271 ;;		_lcd_4bit_send_string
  1272 ;;		_lcd_4bit_send_custom_char
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text3
  1277   001F00                     __ptext3:
  1278                           	callstack 0
  1279   001F00                     _lcd_4bit_send_data:
  1280                           	callstack 23
  1281   001F00                     
  1282                           ;ECU_layer/lcd/lcd.c: 87:     if (((void*)0) == lcd)
  1283   001F00  501B               	movf	lcd_4bit_send_data@lcd^0,w,c
  1284   001F02  A4D8               	btfss	status,2,c
  1285   001F04  EF86  F00F         	goto	u2711
  1286   001F08  EF88  F00F         	goto	u2710
  1287   001F0C                     u2711:
  1288   001F0C  EF8C  F00F         	goto	l3953
  1289   001F10                     u2710:
  1290   001F10                     
  1291                           ;ECU_layer/lcd/lcd.c: 88:     {;ECU_layer/lcd/lcd.c: 89:         ret = (STD_ReturnType)0
      +                          x00;
  1292   001F10  0E00               	movlw	0
  1293   001F12  6E1D               	movwf	lcd_4bit_send_data@ret^0,c
  1294                           
  1295                           ;ECU_layer/lcd/lcd.c: 90:     }
  1296   001F14  EFAC  F00F         	goto	l3955
  1297   001F18                     l3953:
  1298                           
  1299                           ;ECU_layer/lcd/lcd.c: 92:     {;ECU_layer/lcd/lcd.c: 93:         ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs),GPIO_HIGH);
  1300   001F18  C01B  F00C         	movff	lcd_4bit_send_data@lcd,gpio_pin_write_logic@_pin_config
  1301   001F1C  0E01               	movlw	1
  1302   001F1E  6E0D               	movwf	gpio_pin_write_logic@logic^0,c
  1303   001F20  ECDA  F00A         	call	_gpio_pin_write_logic	;wreg free
  1304   001F24  6E1D               	movwf	lcd_4bit_send_data@ret^0,c
  1305                           
  1306                           ;ECU_layer/lcd/lcd.c: 94:         ret = lcd_send_4bits(lcd, data >> 4);
  1307   001F26  C01B  F014         	movff	lcd_4bit_send_data@lcd,lcd_send_4bits@lcd
  1308   001F2A  381C               	swapf	lcd_4bit_send_data@data^0,w,c
  1309   001F2C  0B0F               	andlw	15
  1310   001F2E  6E15               	movwf	lcd_send_4bits@data_command^0,c
  1311   001F30  ECE8  F00E         	call	_lcd_send_4bits	;wreg free
  1312   001F34  6E1D               	movwf	lcd_4bit_send_data@ret^0,c
  1313                           
  1314                           ;ECU_layer/lcd/lcd.c: 95:         ret = lcd_send_4bit_enable_signal(lcd);
  1315   001F36  C01B  F014         	movff	lcd_4bit_send_data@lcd,lcd_send_4bit_enable_signal@lcd
  1316   001F3A  EC27  F010         	call	_lcd_send_4bit_enable_signal	;wreg free
  1317   001F3E  6E1D               	movwf	lcd_4bit_send_data@ret^0,c
  1318                           
  1319                           ;ECU_layer/lcd/lcd.c: 96:         ret = lcd_send_4bits(lcd, data);
  1320   001F40  C01B  F014         	movff	lcd_4bit_send_data@lcd,lcd_send_4bits@lcd
  1321   001F44  C01C  F015         	movff	lcd_4bit_send_data@data,lcd_send_4bits@data_command
  1322   001F48  ECE8  F00E         	call	_lcd_send_4bits	;wreg free
  1323   001F4C  6E1D               	movwf	lcd_4bit_send_data@ret^0,c
  1324                           
  1325                           ;ECU_layer/lcd/lcd.c: 97:         ret = lcd_send_4bit_enable_signal(lcd);
  1326   001F4E  C01B  F014         	movff	lcd_4bit_send_data@lcd,lcd_send_4bit_enable_signal@lcd
  1327   001F52  EC27  F010         	call	_lcd_send_4bit_enable_signal	;wreg free
  1328   001F56  6E1D               	movwf	lcd_4bit_send_data@ret^0,c
  1329   001F58                     l3955:
  1330                           
  1331                           ;ECU_layer/lcd/lcd.c: 99:     return ret;
  1332   001F58  501D               	movf	lcd_4bit_send_data@ret^0,w,c
  1333   001F5A  0012               	return		;funcret
  1334   001F5C                     __end_of_lcd_4bit_send_data:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _convert_uint16_to_string *****************
  1338 ;; Defined at:
  1339 ;;		line 600 in file "ECU_layer/lcd/lcd.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  value           2   40[COMRAM] unsigned short 
  1342 ;;  str             1   42[COMRAM] PTR unsigned short 
  1343 ;;		 -> result_2(12), result_1(12), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  ret             1   43[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      unsigned char 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        4 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 9
  1362 ;; This function calls:
  1363 ;;		_memset
  1364 ;;		_sprintf
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text4
  1371   001FB8                     __ptext4:
  1372                           	callstack 0
  1373   001FB8                     _convert_uint16_to_string:
  1374                           	callstack 21
  1375   001FB8                     
  1376                           ;ECU_layer/lcd/lcd.c: 600: STD_ReturnType convert_uint16_to_string(uint16 value , uint16
      +                           *str);ECU_layer/lcd/lcd.c: 601: {;ECU_layer/lcd/lcd.c: 602:     STD_ReturnType ret = (S
      +                          TD_ReturnType)0x01;
  1377   001FB8  0E01               	movlw	1
  1378   001FBA  6E2C               	movwf	convert_uint16_to_string@ret^0,c
  1379                           
  1380                           ;ECU_layer/lcd/lcd.c: 604:     if (((void*)0) == str)
  1381   001FBC  502B               	movf	convert_uint16_to_string@str^0,w,c
  1382   001FBE  A4D8               	btfss	status,2,c
  1383   001FC0  EFE4  F00F         	goto	u4361
  1384   001FC4  EFE6  F00F         	goto	u4360
  1385   001FC8                     u4361:
  1386   001FC8  EFEA  F00F         	goto	l5193
  1387   001FCC                     u4360:
  1388   001FCC                     
  1389                           ;ECU_layer/lcd/lcd.c: 605:     {;ECU_layer/lcd/lcd.c: 606:         ret = (STD_ReturnType
      +                          )0x00;
  1390   001FCC  0E00               	movlw	0
  1391   001FCE  6E2C               	movwf	convert_uint16_to_string@ret^0,c
  1392                           
  1393                           ;ECU_layer/lcd/lcd.c: 607:     }
  1394   001FD0  EF00  F010         	goto	l5197
  1395   001FD4                     l5193:
  1396                           
  1397                           ;ECU_layer/lcd/lcd.c: 609:     {;ECU_layer/lcd/lcd.c: 610:         memset(str, '\0' , 6)
      +                          ;
  1398   001FD4  C02B  F00C         	movff	convert_uint16_to_string@str,memset@dest
  1399   001FD8  0E00               	movlw	0
  1400   001FDA  6E0E               	movwf	(memset@c+1)^0,c
  1401   001FDC  0E00               	movlw	0
  1402   001FDE  6E0D               	movwf	memset@c^0,c
  1403   001FE0  0E00               	movlw	0
  1404   001FE2  6E10               	movwf	(memset@n+1)^0,c
  1405   001FE4  0E06               	movlw	6
  1406   001FE6  6E0F               	movwf	memset@n^0,c
  1407   001FE8  EC10  F011         	call	_memset	;wreg free
  1408   001FEC                     
  1409                           ;ECU_layer/lcd/lcd.c: 611:         sprintf(str , "%i" ,value);
  1410   001FEC  C02B  F025         	movff	convert_uint16_to_string@str,sprintf@s
  1411   001FF0  0E24               	movlw	low STR_1
  1412   001FF2  6E26               	movwf	sprintf@fmt^0,c
  1413   001FF4  C029  F027         	movff	convert_uint16_to_string@value,?_sprintf+2
  1414   001FF8  C02A  F028         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  1415   001FFC  EC88  F010         	call	_sprintf	;wreg free
  1416   002000                     l5197:
  1417                           
  1418                           ;ECU_layer/lcd/lcd.c: 613:     return ret;
  1419   002000  502C               	movf	convert_uint16_to_string@ret^0,w,c
  1420   002002  0012               	return		;funcret
  1421   002004                     __end_of_convert_uint16_to_string:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _sprintf *****************
  1425 ;; Defined at:
  1426 ;;		line 9 in file "G:\C_Extention\pic\sources\c99\common\nf_sprintf.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  s               1   36[COMRAM] PTR unsigned char 
  1429 ;;		 -> result_2(12), result_1(12), 
  1430 ;;  fmt             1   37[COMRAM] PTR const unsigned char 
  1431 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  f              12    1[BANK0 ] struct _IO_FILE
  1434 ;;  ret             2    0        int 
  1435 ;;  ap              1    0[BANK0 ] PTR void [1]
  1436 ;;		 -> ?_sprintf(2), 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  2   36[COMRAM] int 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         4      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:       17 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 8
  1453 ;; This function calls:
  1454 ;;		_vfprintf
  1455 ;; This function is called by:
  1456 ;;		_convert_uint16_to_string
  1457 ;;		_convert_uint8_to_string
  1458 ;;		_convert_uint32_to_string
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text5
  1463   002110                     __ptext5:
  1464                           	callstack 0
  1465   002110                     _sprintf:
  1466                           	callstack 21
  1467   002110  0E27               	movlw	low (?_sprintf+2)
  1468   002112  0100               	movlb	0	; () banked
  1469   002114  6FCB               	movwf	sprintf@ap& (0+255),b
  1470   002116  C025  F0CC         	movff	sprintf@s,sprintf@f
  1471   00211A                     
  1472                           ; BSR set to: 0
  1473   00211A  0E00               	movlw	0
  1474   00211C  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  1475   00211E  0E00               	movlw	0
  1476   002120  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  1477   002122                     
  1478                           ; BSR set to: 0
  1479   002122  0E00               	movlw	0
  1480   002124  6FD7               	movwf	(sprintf@f+11)& (0+255),b
  1481   002126  0E00               	movlw	0
  1482   002128  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  1483   00212A                     
  1484                           ; BSR set to: 0
  1485   00212A  0ECC               	movlw	low sprintf@f
  1486   00212C  6E21               	movwf	vfprintf@fp^0,c
  1487   00212E  C026  F022         	movff	sprintf@fmt,vfprintf@fmt
  1488   002132  0ECB               	movlw	low sprintf@ap
  1489   002134  6E23               	movwf	vfprintf@ap^0,c
  1490   002136  EC49  F010         	call	_vfprintf	;wreg free
  1491   00213A  5025               	movf	sprintf@s^0,w,c
  1492   00213C  0100               	movlb	0	; () banked
  1493   00213E  25CF               	addwf	(sprintf@f+3)& (0+255),w,b
  1494   002140  6ED9               	movwf	fsr2l,c
  1495   002142  6ADA               	clrf	fsr2h,c
  1496   002144  6ADF               	clrf	indf2,c
  1497   002146                     
  1498                           ; BSR set to: 0
  1499   002146  0012               	return		;funcret
  1500   002148                     __end_of_sprintf:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _vfprintf *****************
  1504 ;; Defined at:
  1505 ;;		line 1817 in file "G:\C_Extention\pic\sources\c99\common\doprnt.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  fp              1   32[COMRAM] PTR struct _IO_FILE
  1508 ;;		 -> sprintf@f(12), 
  1509 ;;  fmt             1   33[COMRAM] PTR const unsigned char 
  1510 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1511 ;;  ap              1   34[COMRAM] PTR PTR void 
  1512 ;;		 -> sprintf@ap(1), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  cfmt            1   35[COMRAM] PTR unsigned char 
  1515 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2   32[COMRAM] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1525 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;Total ram usage:        4 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 7
  1532 ;; This function calls:
  1533 ;;		_vfpfcnvrt
  1534 ;; This function is called by:
  1535 ;;		_sprintf
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text6
  1540   002092                     __ptext6:
  1541                           	callstack 0
  1542   002092                     _vfprintf:
  1543                           	callstack 21
  1544   002092                     
  1545                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const char
      +                           *fmt, va_list ap);G:\C_Extention\pic\sources\c99\common\doprnt.c: 1818: {;G:\C_Extentio
      +                          n\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;G:\C_Extention\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1546   002092  C022  F024         	movff	vfprintf@fmt,vfprintf@cfmt
  1547                           
  1548                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  1549   002096  EF55  F010         	goto	l5171
  1550   00209A                     l5169:
  1551                           
  1552                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  1553   00209A  C021  F016         	movff	vfprintf@fp,vfpfcnvrt@fp
  1554   00209E  0E24               	movlw	low vfprintf@cfmt
  1555   0020A0  6E17               	movwf	vfpfcnvrt@fmt^0,c
  1556   0020A2  C023  F018         	movff	vfprintf@ap,vfpfcnvrt@ap
  1557   0020A6  EC14  F008         	call	_vfpfcnvrt	;wreg free
  1558   0020AA                     l5171:
  1559                           
  1560                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  1561   0020AA  C024  FFF6         	movff	vfprintf@cfmt,tblptrl
  1562   0020AE                     	if	1	;There is more than 1 active tblptr byte
  1563   0020AE  0E10               	movlw	high __smallconst
  1564   0020B0  6EF7               	movwf	tblptrh,c
  1565   0020B2                     	endif
  1566   0020B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1567   0020B2  6AF8               	clrf	tblptru,c
  1568   0020B4                     	endif
  1569   0020B4                     	if	0	;tblptru may be non-zero
  1570   0020B4                     	endif
  1571   0020B4  0008               	tblrd		*
  1572   0020B6  50F5               	movf	tablat,w,c
  1573   0020B8  0900               	iorlw	0
  1574   0020BA  A4D8               	btfss	status,2,c
  1575   0020BC  EF62  F010         	goto	u4351
  1576   0020C0  EF64  F010         	goto	u4350
  1577   0020C4                     u4351:
  1578   0020C4  EF4D  F010         	goto	l5169
  1579   0020C8                     u4350:
  1580   0020C8                     
  1581                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1582   0020C8  0E00               	movlw	0
  1583   0020CA  6E22               	movwf	(?_vfprintf+1)^0,c
  1584   0020CC  0E00               	movlw	0
  1585   0020CE  6E21               	movwf	?_vfprintf^0,c
  1586   0020D0  0012               	return		;funcret
  1587   0020D2                     __end_of_vfprintf:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _vfpfcnvrt *****************
  1591 ;; Defined at:
  1592 ;;		line 1177 in file "G:\C_Extention\pic\sources\c99\common\doprnt.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1595 ;;		 -> sprintf@f(12), 
  1596 ;;  fmt             1   22[COMRAM] PTR PTR unsigned char 
  1597 ;;		 -> vfprintf@cfmt(1), 
  1598 ;;  ap              1   23[COMRAM] PTR PTR void 
  1599 ;;		 -> sprintf@ap(1), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  convarg         4   27[COMRAM] struct .
  1602 ;;  c               1   31[COMRAM] unsigned char 
  1603 ;;  cp              1   26[COMRAM] PTR unsigned char 
  1604 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1605 ;;  done            1   25[COMRAM] _Bool 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1615 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;Total ram usage:       11 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 6
  1622 ;; This function calls:
  1623 ;;		___awdiv
  1624 ;;		___awmod
  1625 ;;		_abs
  1626 ;;		_fputc
  1627 ;; This function is called by:
  1628 ;;		_vfprintf
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text7
  1633   001028                     __ptext7:
  1634                           	callstack 0
  1635   001028                     _vfpfcnvrt:
  1636                           	callstack 21
  1637   001028                     
  1638                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt[], 
      +                          va_list ap);G:\C_Extention\pic\sources\c99\common\doprnt.c: 1178: {;G:\C_Extention\pic\s
      +                          ources\c99\common\doprnt.c: 1179:     char c, *cp;;G:\C_Extention\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1188:  
      +                          } convarg;;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1201:     if ((*fmt)[0] == '%
      +                          ') {
  1639   001028  5017               	movf	vfpfcnvrt@fmt^0,w,c
  1640   00102A  6ED9               	movwf	fsr2l,c
  1641   00102C  6ADA               	clrf	fsr2h,c
  1642   00102E  CFDF FFF6          	movff	indf2,tblptrl
  1643   001032                     	if	1	;There is more than 1 active tblptr byte
  1644   001032  0E10               	movlw	high __smallconst
  1645   001034  6EF7               	movwf	tblptrh,c
  1646   001036                     	endif
  1647   001036                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1648   001036  6AF8               	clrf	tblptru,c
  1649   001038                     	endif
  1650   001038                     	if	0	;tblptru may be non-zero
  1651   001038                     	endif
  1652   001038  0008               	tblrd		*
  1653   00103A  50F5               	movf	tablat,w,c
  1654   00103C  0A25               	xorlw	37
  1655   00103E  A4D8               	btfss	status,2,c
  1656   001040  EF24  F008         	goto	u4251
  1657   001044  EF26  F008         	goto	u4250
  1658   001048                     u4251:
  1659   001048  EFE1  F008         	goto	l5161
  1660   00104C                     u4250:
  1661   00104C                     
  1662                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  1663   00104C  5017               	movf	vfpfcnvrt@fmt^0,w,c
  1664   00104E  6ED9               	movwf	fsr2l,c
  1665   001050  6ADA               	clrf	fsr2h,c
  1666   001052  2ADF               	incf	indf2,f,c
  1667   001054                     
  1668                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  1669   001054  0E00               	movlw	0
  1670   001056  6E2E               	movwf	(_width+1)^0,c
  1671   001058  0E00               	movlw	0
  1672   00105A  6E2D               	movwf	_width^0,c
  1673   00105C  C02D  F041         	movff	_width,_flags
  1674   001060                     
  1675                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  1676   001060  682F               	setf	_prec^0,c
  1677   001062  6830               	setf	(_prec+1)^0,c
  1678   001064                     
  1679                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  1680   001064  5017               	movf	vfpfcnvrt@fmt^0,w,c
  1681   001066  6ED9               	movwf	fsr2l,c
  1682   001068  6ADA               	clrf	fsr2h,c
  1683   00106A  50DF               	movf	indf2,w,c
  1684   00106C  6E1B               	movwf	vfpfcnvrt@cp^0,c
  1685   00106E                     
  1686                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i') {
  1687   00106E  C01B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1688   001072                     	if	1	;There is more than 1 active tblptr byte
  1689   001072  0E10               	movlw	high __smallconst
  1690   001074  6EF7               	movwf	tblptrh,c
  1691   001076                     	endif
  1692   001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1693   001076  6AF8               	clrf	tblptru,c
  1694   001078                     	endif
  1695   001078                     	if	0	;tblptru may be non-zero
  1696   001078                     	endif
  1697   001078  0008               	tblrd		*
  1698   00107A  50F5               	movf	tablat,w,c
  1699   00107C  0A64               	xorlw	100
  1700   00107E  B4D8               	btfsc	status,2,c
  1701   001080  EF44  F008         	goto	u4261
  1702   001084  EF46  F008         	goto	u4260
  1703   001088                     u4261:
  1704   001088  EF55  F008         	goto	l5131
  1705   00108C                     u4260:
  1706   00108C  C01B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1707   001090                     	if	1	;There is more than 1 active tblptr byte
  1708   001090  0E10               	movlw	high __smallconst
  1709   001092  6EF7               	movwf	tblptrh,c
  1710   001094                     	endif
  1711   001094                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1712   001094  6AF8               	clrf	tblptru,c
  1713   001096                     	endif
  1714   001096                     	if	0	;tblptru may be non-zero
  1715   001096                     	endif
  1716   001096  0008               	tblrd		*
  1717   001098  50F5               	movf	tablat,w,c
  1718   00109A  0A69               	xorlw	105
  1719   00109C  A4D8               	btfss	status,2,c
  1720   00109E  EF53  F008         	goto	u4271
  1721   0010A2  EF55  F008         	goto	u4270
  1722   0010A6                     u4271:
  1723   0010A6  EFDB  F008         	goto	l5157
  1724   0010AA                     u4270:
  1725   0010AA                     l5131:
  1726                           
  1727                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1404:    convarg.sint = (vfpf_sint_t)(i
      +                          nt)(*(int *)__va_arg(*(int **)ap, (int)0));
  1728   0010AA  5018               	movf	vfpfcnvrt@ap^0,w,c
  1729   0010AC  6ED9               	movwf	fsr2l,c
  1730   0010AE  6ADA               	clrf	fsr2h,c
  1731   0010B0  0E02               	movlw	2
  1732   0010B2  26DF               	addwf	indf2,f,c
  1733   0010B4  5CDF               	subwf	indf2,w,c
  1734   0010B6  6ED9               	movwf	fsr2l,c
  1735   0010B8  6ADA               	clrf	fsr2h,c
  1736   0010BA  CFDE F01C          	movff	postinc2,vfpfcnvrt@convarg
  1737   0010BE  CFDE F01D          	movff	postinc2,vfpfcnvrt@convarg+1
  1738   0010C2                     
  1739                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  1740   0010C2  5017               	movf	vfpfcnvrt@fmt^0,w,c
  1741   0010C4  6ED9               	movwf	fsr2l,c
  1742   0010C6  6ADA               	clrf	fsr2h,c
  1743   0010C8  281B               	incf	vfpfcnvrt@cp^0,w,c
  1744   0010CA  6EDF               	movwf	indf2,c
  1745   0010CC                     
  1746                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1408:    c = sizeof(dbuf);
  1747   0010CC  0E20               	movlw	32
  1748   0010CE  6E20               	movwf	vfpfcnvrt@c^0,c
  1749                           
  1750                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1409:    done = convarg.sint < 0;
  1751   0010D0  BE1D               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1752   0010D2  EF6D  F008         	goto	u4281
  1753   0010D6  EF70  F008         	goto	u4280
  1754   0010DA                     u4281:
  1755   0010DA  0E01               	movlw	1
  1756   0010DC  EF71  F008         	goto	u4290
  1757   0010E0                     u4280:
  1758   0010E0  0E00               	movlw	0
  1759   0010E2                     u4290:
  1760   0010E2  6E1A               	movwf	vfpfcnvrt@done^0,c
  1761   0010E4                     l5137:
  1762                           
  1763                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--c] = abs(convarg.sint 
      +                          % 10) + '0';
  1764   0010E4  0620               	decf	vfpfcnvrt@c^0,f,c
  1765   0010E6  5020               	movf	vfpfcnvrt@c^0,w,c
  1766   0010E8  0F80               	addlw	low _dbuf
  1767   0010EA  6ED9               	movwf	fsr2l,c
  1768   0010EC  6ADA               	clrf	fsr2h,c
  1769   0010EE  C01C  F00C         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1770   0010F2  C01D  F00D         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1771   0010F6  0E00               	movlw	0
  1772   0010F8  6E0F               	movwf	(___awmod@divisor+1)^0,c
  1773   0010FA  0E0A               	movlw	10
  1774   0010FC  6E0E               	movwf	___awmod@divisor^0,c
  1775   0010FE  ECE8  F00D         	call	___awmod	;wreg free
  1776   001102  C00C  F012         	movff	?___awmod,abs@a
  1777   001106  C00D  F013         	movff	?___awmod+1,abs@a+1
  1778   00110A  ECDC  F010         	call	_abs	;wreg free
  1779   00110E  5012               	movf	?_abs^0,w,c
  1780   001110  0F30               	addlw	48
  1781   001112  6EDF               	movwf	indf2,c
  1782   001114                     
  1783                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1412:     convarg.sint /= 10;
  1784   001114  C01C  F00C         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1785   001118  C01D  F00D         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1786   00111C  0E00               	movlw	0
  1787   00111E  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  1788   001120  0E0A               	movlw	10
  1789   001122  6E0E               	movwf	___awdiv@divisor^0,c
  1790   001124  EC28  F00D         	call	___awdiv	;wreg free
  1791   001128  C00C  F01C         	movff	?___awdiv,vfpfcnvrt@convarg
  1792   00112C  C00D  F01D         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1793   001130                     
  1794                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1416:    } while (convarg.sint != 0 && 
      +                          c != 0);
  1795   001130  501C               	movf	vfpfcnvrt@convarg^0,w,c
  1796   001132  101D               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1797   001134  B4D8               	btfsc	status,2,c
  1798   001136  EF9F  F008         	goto	u4301
  1799   00113A  EFA1  F008         	goto	u4300
  1800   00113E                     u4301:
  1801   00113E  EFA9  F008         	goto	l5145
  1802   001142                     u4300:
  1803   001142  5020               	movf	vfpfcnvrt@c^0,w,c
  1804   001144  A4D8               	btfss	status,2,c
  1805   001146  EFA7  F008         	goto	u4311
  1806   00114A  EFA9  F008         	goto	u4310
  1807   00114E                     u4311:
  1808   00114E  EF72  F008         	goto	l5137
  1809   001152                     u4310:
  1810   001152                     l5145:
  1811                           
  1812                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1417:    if (c != 0 && done) {
  1813   001152  5020               	movf	vfpfcnvrt@c^0,w,c
  1814   001154  B4D8               	btfsc	status,2,c
  1815   001156  EFAF  F008         	goto	u4321
  1816   00115A  EFB1  F008         	goto	u4320
  1817   00115E                     u4321:
  1818   00115E  EFD0  F008         	goto	l5155
  1819   001162                     u4320:
  1820   001162  501A               	movf	vfpfcnvrt@done^0,w,c
  1821   001164  B4D8               	btfsc	status,2,c
  1822   001166  EFB7  F008         	goto	u4331
  1823   00116A  EFB9  F008         	goto	u4330
  1824   00116E                     u4331:
  1825   00116E  EFD0  F008         	goto	l5155
  1826   001172                     u4330:
  1827   001172                     
  1828                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--c] = '-';
  1829   001172  0620               	decf	vfpfcnvrt@c^0,f,c
  1830   001174  5020               	movf	vfpfcnvrt@c^0,w,c
  1831   001176  0F80               	addlw	low _dbuf
  1832   001178  6ED9               	movwf	fsr2l,c
  1833   00117A  6ADA               	clrf	fsr2h,c
  1834   00117C  0E2D               	movlw	45
  1835   00117E  6EDF               	movwf	indf2,c
  1836   001180  EFD0  F008         	goto	l5155
  1837   001184                     l5151:
  1838                           
  1839                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1424:     fputc(dbuf[c++], fp);
  1840   001184  5020               	movf	vfpfcnvrt@c^0,w,c
  1841   001186  0F80               	addlw	low _dbuf
  1842   001188  6ED9               	movwf	fsr2l,c
  1843   00118A  6ADA               	clrf	fsr2h,c
  1844   00118C  50DF               	movf	indf2,w,c
  1845   00118E  6E19               	movwf	??_vfpfcnvrt^0,c
  1846   001190  5019               	movf	??_vfpfcnvrt^0,w,c
  1847   001192  6E0C               	movwf	fputc@c^0,c
  1848   001194  6A0D               	clrf	(fputc@c+1)^0,c
  1849   001196  C016  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  1850   00119A  EC40  F00E         	call	_fputc	;wreg free
  1851   00119E  2A20               	incf	vfpfcnvrt@c^0,f,c
  1852   0011A0                     l5155:
  1853                           
  1854                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1423:    while (c != sizeof(dbuf)) {
  1855   0011A0  0E20               	movlw	32
  1856   0011A2  1820               	xorwf	vfpfcnvrt@c^0,w,c
  1857   0011A4  A4D8               	btfss	status,2,c
  1858   0011A6  EFD7  F008         	goto	u4341
  1859   0011AA  EFD9  F008         	goto	u4340
  1860   0011AE                     u4341:
  1861   0011AE  EFC2  F008         	goto	l5151
  1862   0011B2                     u4340:
  1863   0011B2  EFF3  F008         	goto	l1701
  1864   0011B6                     l5157:
  1865                           
  1866                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  1867   0011B6  5017               	movf	vfpfcnvrt@fmt^0,w,c
  1868   0011B8  6ED9               	movwf	fsr2l,c
  1869   0011BA  6ADA               	clrf	fsr2h,c
  1870   0011BC  2ADF               	incf	indf2,f,c
  1871   0011BE  EFF3  F008         	goto	l1701
  1872   0011C2                     l5161:
  1873                           
  1874                           ;G:\C_Extention\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp);
  1875   0011C2  5017               	movf	vfpfcnvrt@fmt^0,w,c
  1876   0011C4  6ED9               	movwf	fsr2l,c
  1877   0011C6  6ADA               	clrf	fsr2h,c
  1878   0011C8  CFDF FFF6          	movff	indf2,tblptrl
  1879   0011CC                     	if	1	;There is more than 1 active tblptr byte
  1880   0011CC  0E10               	movlw	high __smallconst
  1881   0011CE  6EF7               	movwf	tblptrh,c
  1882   0011D0                     	endif
  1883   0011D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1884   0011D0  6AF8               	clrf	tblptru,c
  1885   0011D2                     	endif
  1886   0011D2                     	if	0	;tblptru may be non-zero
  1887   0011D2                     	endif
  1888   0011D2  0008               	tblrd		*
  1889   0011D4  50F5               	movf	tablat,w,c
  1890   0011D6  6E0C               	movwf	fputc@c^0,c
  1891   0011D8  6A0D               	clrf	(fputc@c+1)^0,c
  1892   0011DA  C016  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  1893   0011DE  EC40  F00E         	call	_fputc	;wreg free
  1894   0011E2  EFDB  F008         	goto	l5157
  1895   0011E6                     l1701:
  1896   0011E6  0012               	return		;funcret
  1897   0011E8                     __end_of_vfpfcnvrt:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _fputc *****************
  1901 ;; Defined at:
  1902 ;;		line 8 in file "G:\C_Extention\pic\sources\c99\common\nf_fputc.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  c               2   11[COMRAM] int 
  1905 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1906 ;;		 -> sprintf@f(12), 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  2   11[COMRAM] int 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1918 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;Total ram usage:        8 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 5
  1925 ;; This function calls:
  1926 ;;		_putch
  1927 ;; This function is called by:
  1928 ;;		_vfpfcnvrt
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text8
  1933   001C80                     __ptext8:
  1934                           	callstack 0
  1935   001C80                     _fputc:
  1936                           	callstack 21
  1937   001C80  500E               	movf	fputc@fp^0,w,c
  1938   001C82  B4D8               	btfsc	status,2,c
  1939   001C84  EF46  F00E         	goto	u4201
  1940   001C88  EF48  F00E         	goto	u4200
  1941   001C8C                     u4201:
  1942   001C8C  EF50  F00E         	goto	l5103
  1943   001C90                     u4200:
  1944   001C90  500E               	movf	fputc@fp^0,w,c
  1945   001C92  A4D8               	btfss	status,2,c
  1946   001C94  EF4E  F00E         	goto	u4211
  1947   001C98  EF50  F00E         	goto	u4210
  1948   001C9C                     u4211:
  1949   001C9C  EF55  F00E         	goto	l5105
  1950   001CA0                     u4210:
  1951   001CA0                     l5103:
  1952   001CA0  500C               	movf	fputc@c^0,w,c
  1953   001CA2  EC80  F011         	call	_putch
  1954   001CA6  EF94  F00E         	goto	l1726
  1955   001CAA                     l5105:
  1956   001CAA  500E               	movf	fputc@fp^0,w,c
  1957   001CAC  6ED9               	movwf	fsr2l,c
  1958   001CAE  6ADA               	clrf	fsr2h,c
  1959   001CB0  0E0A               	movlw	10
  1960   001CB2  26D9               	addwf	fsr2l,f,c
  1961   001CB4  50DE               	movf	postinc2,w,c
  1962   001CB6  10DE               	iorwf	postinc2,w,c
  1963   001CB8  B4D8               	btfsc	status,2,c
  1964   001CBA  EF61  F00E         	goto	u4221
  1965   001CBE  EF63  F00E         	goto	u4220
  1966   001CC2                     u4221:
  1967   001CC2  EF7C  F00E         	goto	l5109
  1968   001CC6                     u4220:
  1969   001CC6  500E               	movf	fputc@fp^0,w,c
  1970   001CC8  6ED9               	movwf	fsr2l,c
  1971   001CCA  6ADA               	clrf	fsr2h,c
  1972   001CCC  0E0A               	movlw	10
  1973   001CCE  26D9               	addwf	fsr2l,f,c
  1974   001CD0  500E               	movf	fputc@fp^0,w,c
  1975   001CD2  6EE1               	movwf	fsr1l,c
  1976   001CD4  6AE2               	clrf	fsr1h,c
  1977   001CD6  0E03               	movlw	3
  1978   001CD8  26E1               	addwf	fsr1l,f,c
  1979   001CDA  50DE               	movf	postinc2,w,c
  1980   001CDC  5CE6               	subwf	postinc1,w,c
  1981   001CDE  50E6               	movf	postinc1,w,c
  1982   001CE0  0A80               	xorlw	128
  1983   001CE2  6E13               	movwf	(??_fputc+4)^0,c
  1984   001CE4  50DE               	movf	postinc2,w,c
  1985   001CE6  0A80               	xorlw	128
  1986   001CE8  5813               	subwfb	(??_fputc+4)^0,w,c
  1987   001CEA  B0D8               	btfsc	status,0,c
  1988   001CEC  EF7A  F00E         	goto	u4231
  1989   001CF0  EF7C  F00E         	goto	u4230
  1990   001CF4                     u4231:
  1991   001CF4  EF94  F00E         	goto	l1726
  1992   001CF8                     u4230:
  1993   001CF8                     l5109:
  1994   001CF8  500E               	movf	fputc@fp^0,w,c
  1995   001CFA  6ED9               	movwf	fsr2l,c
  1996   001CFC  6ADA               	clrf	fsr2h,c
  1997   001CFE  0E03               	movlw	3
  1998   001D00  26D9               	addwf	fsr2l,f,c
  1999   001D02  50DF               	movf	indf2,w,c
  2000   001D04  6E0F               	movwf	??_fputc^0,c
  2001   001D06  500E               	movf	fputc@fp^0,w,c
  2002   001D08  6ED9               	movwf	fsr2l,c
  2003   001D0A  6ADA               	clrf	fsr2h,c
  2004   001D0C  50DF               	movf	indf2,w,c
  2005   001D0E  240F               	addwf	??_fputc^0,w,c
  2006   001D10  6ED9               	movwf	fsr2l,c
  2007   001D12  6ADA               	clrf	fsr2h,c
  2008   001D14  C00C  FFDF         	movff	fputc@c,indf2
  2009   001D18  500E               	movf	fputc@fp^0,w,c
  2010   001D1A  6ED9               	movwf	fsr2l,c
  2011   001D1C  6ADA               	clrf	fsr2h,c
  2012   001D1E  0E03               	movlw	3
  2013   001D20  26D9               	addwf	fsr2l,f,c
  2014   001D22  2ADE               	incf	postinc2,f,c
  2015   001D24  0E00               	movlw	0
  2016   001D26  22DD               	addwfc	postdec2,f,c
  2017   001D28                     l1726:
  2018   001D28  0012               	return		;funcret
  2019   001D2A                     __end_of_fputc:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _putch *****************
  2023 ;; Defined at:
  2024 ;;		line 7 in file "G:\C_Extention\pic\sources\c99\common\putch.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  c               1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  c               1    0[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 4
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_fputc
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text9
  2053   002300                     __ptext9:
  2054                           	callstack 0
  2055   002300                     _putch:
  2056                           	callstack 21
  2057   002300  0012               	return		;funcret
  2058   002302                     __end_of_putch:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _abs *****************
  2062 ;; Defined at:
  2063 ;;		line 1 in file "G:\C_Extention\pic\sources\c99\common\abs.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  a               2   17[COMRAM] int 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2   17[COMRAM] int 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;Total ram usage:        4 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 4
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_vfpfcnvrt
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text10
  2092   0021B8                     __ptext10:
  2093                           	callstack 0
  2094   0021B8                     _abs:
  2095                           	callstack 22
  2096   0021B8  BE13               	btfsc	(abs@a+1)^0,7,c
  2097   0021BA  EFE1  F010         	goto	u4241
  2098   0021BE  EFE3  F010         	goto	u4240
  2099   0021C2                     u4241:
  2100   0021C2  EFE9  F010         	goto	l1711
  2101   0021C6                     u4240:
  2102   0021C6  C012  F012         	movff	abs@a,?_abs
  2103   0021CA  C013  F013         	movff	abs@a+1,?_abs+1
  2104   0021CE  EFF5  F010         	goto	l1714
  2105   0021D2                     l1711:
  2106   0021D2  C012  F014         	movff	abs@a,??_abs
  2107   0021D6  C013  F015         	movff	abs@a+1,??_abs+1
  2108   0021DA  1E14               	comf	??_abs^0,f,c
  2109   0021DC  1E15               	comf	(??_abs+1)^0,f,c
  2110   0021DE  4A14               	infsnz	??_abs^0,f,c
  2111   0021E0  2A15               	incf	(??_abs+1)^0,f,c
  2112   0021E2  C014  F012         	movff	??_abs,?_abs
  2113   0021E6  C015  F013         	movff	??_abs+1,?_abs+1
  2114   0021EA                     l1714:
  2115   0021EA  0012               	return		;funcret
  2116   0021EC                     __end_of_abs:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function ___awmod *****************
  2120 ;; Defined at:
  2121 ;;		line 7 in file "G:\C_Extention\pic\sources\c99\common\awmod.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  dividend        2   11[COMRAM] int 
  2124 ;;  divisor         2   13[COMRAM] int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  sign            1   16[COMRAM] unsigned char 
  2127 ;;  counter         1   15[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2   11[COMRAM] int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        6 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 4
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_vfpfcnvrt
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text11
  2152   001BD0                     __ptext11:
  2153                           	callstack 0
  2154   001BD0                     ___awmod:
  2155                           	callstack 22
  2156   001BD0  0E00               	movlw	0
  2157   001BD2  6E11               	movwf	___awmod@sign^0,c
  2158   001BD4  BE0D               	btfsc	(___awmod@dividend+1)^0,7,c
  2159   001BD6  EFF1  F00D         	goto	u4140
  2160   001BDA  EFEF  F00D         	goto	u4141
  2161   001BDE                     u4141:
  2162   001BDE  EFF7  F00D         	goto	l5071
  2163   001BE2                     u4140:
  2164   001BE2  6C0C               	negf	___awmod@dividend^0,c
  2165   001BE4  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  2166   001BE6  B0D8               	btfsc	status,0,c
  2167   001BE8  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  2168   001BEA  0E01               	movlw	1
  2169   001BEC  6E11               	movwf	___awmod@sign^0,c
  2170   001BEE                     l5071:
  2171   001BEE  BE0F               	btfsc	(___awmod@divisor+1)^0,7,c
  2172   001BF0  EFFE  F00D         	goto	u4150
  2173   001BF4  EFFC  F00D         	goto	u4151
  2174   001BF8                     u4151:
  2175   001BF8  EF02  F00E         	goto	l5075
  2176   001BFC                     u4150:
  2177   001BFC  6C0E               	negf	___awmod@divisor^0,c
  2178   001BFE  1E0F               	comf	(___awmod@divisor+1)^0,f,c
  2179   001C00  B0D8               	btfsc	status,0,c
  2180   001C02  2A0F               	incf	(___awmod@divisor+1)^0,f,c
  2181   001C04                     l5075:
  2182   001C04  500E               	movf	___awmod@divisor^0,w,c
  2183   001C06  100F               	iorwf	(___awmod@divisor+1)^0,w,c
  2184   001C08  B4D8               	btfsc	status,2,c
  2185   001C0A  EF09  F00E         	goto	u4161
  2186   001C0E  EF0B  F00E         	goto	u4160
  2187   001C12                     u4161:
  2188   001C12  EF2F  F00E         	goto	l5091
  2189   001C16                     u4160:
  2190   001C16  0E01               	movlw	1
  2191   001C18  6E10               	movwf	___awmod@counter^0,c
  2192   001C1A  EF13  F00E         	goto	l5081
  2193   001C1E                     l5079:
  2194   001C1E  90D8               	bcf	status,0,c
  2195   001C20  360E               	rlcf	___awmod@divisor^0,f,c
  2196   001C22  360F               	rlcf	(___awmod@divisor+1)^0,f,c
  2197   001C24  2A10               	incf	___awmod@counter^0,f,c
  2198   001C26                     l5081:
  2199   001C26  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
  2200   001C28  EF18  F00E         	goto	u4171
  2201   001C2C  EF1A  F00E         	goto	u4170
  2202   001C30                     u4171:
  2203   001C30  EF0F  F00E         	goto	l5079
  2204   001C34                     u4170:
  2205   001C34                     l5083:
  2206   001C34  500E               	movf	___awmod@divisor^0,w,c
  2207   001C36  5C0C               	subwf	___awmod@dividend^0,w,c
  2208   001C38  500F               	movf	(___awmod@divisor+1)^0,w,c
  2209   001C3A  580D               	subwfb	(___awmod@dividend+1)^0,w,c
  2210   001C3C  A0D8               	btfss	status,0,c
  2211   001C3E  EF23  F00E         	goto	u4181
  2212   001C42  EF25  F00E         	goto	u4180
  2213   001C46                     u4181:
  2214   001C46  EF29  F00E         	goto	l5087
  2215   001C4A                     u4180:
  2216   001C4A  500E               	movf	___awmod@divisor^0,w,c
  2217   001C4C  5E0C               	subwf	___awmod@dividend^0,f,c
  2218   001C4E  500F               	movf	(___awmod@divisor+1)^0,w,c
  2219   001C50  5A0D               	subwfb	(___awmod@dividend+1)^0,f,c
  2220   001C52                     l5087:
  2221   001C52  90D8               	bcf	status,0,c
  2222   001C54  320F               	rrcf	(___awmod@divisor+1)^0,f,c
  2223   001C56  320E               	rrcf	___awmod@divisor^0,f,c
  2224   001C58  2E10               	decfsz	___awmod@counter^0,f,c
  2225   001C5A  EF1A  F00E         	goto	l5083
  2226   001C5E                     l5091:
  2227   001C5E  5011               	movf	___awmod@sign^0,w,c
  2228   001C60  B4D8               	btfsc	status,2,c
  2229   001C62  EF35  F00E         	goto	u4191
  2230   001C66  EF37  F00E         	goto	u4190
  2231   001C6A                     u4191:
  2232   001C6A  EF3B  F00E         	goto	l5095
  2233   001C6E                     u4190:
  2234   001C6E  6C0C               	negf	___awmod@dividend^0,c
  2235   001C70  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  2236   001C72  B0D8               	btfsc	status,0,c
  2237   001C74  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  2238   001C76                     l5095:
  2239   001C76  C00C  F00C         	movff	___awmod@dividend,?___awmod
  2240   001C7A  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  2241   001C7E  0012               	return		;funcret
  2242   001C80                     __end_of___awmod:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function ___awdiv *****************
  2246 ;; Defined at:
  2247 ;;		line 7 in file "G:\C_Extention\pic\sources\c99\common\awdiv.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  dividend        2   11[COMRAM] int 
  2250 ;;  divisor         2   13[COMRAM] int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  quotient        2   17[COMRAM] int 
  2253 ;;  sign            1   16[COMRAM] unsigned char 
  2254 ;;  counter         1   15[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  2   11[COMRAM] int 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;Total ram usage:        8 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 4
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_vfpfcnvrt
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text12
  2279   001A50                     __ptext12:
  2280                           	callstack 0
  2281   001A50                     ___awdiv:
  2282                           	callstack 22
  2283   001A50  0E00               	movlw	0
  2284   001A52  6E11               	movwf	___awdiv@sign^0,c
  2285   001A54  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  2286   001A56  EF31  F00D         	goto	u4080
  2287   001A5A  EF2F  F00D         	goto	u4081
  2288   001A5E                     u4081:
  2289   001A5E  EF37  F00D         	goto	l5027
  2290   001A62                     u4080:
  2291   001A62  6C0E               	negf	___awdiv@divisor^0,c
  2292   001A64  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  2293   001A66  B0D8               	btfsc	status,0,c
  2294   001A68  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  2295   001A6A  0E01               	movlw	1
  2296   001A6C  6E11               	movwf	___awdiv@sign^0,c
  2297   001A6E                     l5027:
  2298   001A6E  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  2299   001A70  EF3E  F00D         	goto	u4090
  2300   001A74  EF3C  F00D         	goto	u4091
  2301   001A78                     u4091:
  2302   001A78  EF44  F00D         	goto	l5033
  2303   001A7C                     u4090:
  2304   001A7C  6C0C               	negf	___awdiv@dividend^0,c
  2305   001A7E  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  2306   001A80  B0D8               	btfsc	status,0,c
  2307   001A82  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  2308   001A84  0E01               	movlw	1
  2309   001A86  1A11               	xorwf	___awdiv@sign^0,f,c
  2310   001A88                     l5033:
  2311   001A88  0E00               	movlw	0
  2312   001A8A  6E13               	movwf	(___awdiv@quotient+1)^0,c
  2313   001A8C  0E00               	movlw	0
  2314   001A8E  6E12               	movwf	___awdiv@quotient^0,c
  2315   001A90  500E               	movf	___awdiv@divisor^0,w,c
  2316   001A92  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  2317   001A94  B4D8               	btfsc	status,2,c
  2318   001A96  EF4F  F00D         	goto	u4101
  2319   001A9A  EF51  F00D         	goto	u4100
  2320   001A9E                     u4101:
  2321   001A9E  EF79  F00D         	goto	l5055
  2322   001AA2                     u4100:
  2323   001AA2  0E01               	movlw	1
  2324   001AA4  6E10               	movwf	___awdiv@counter^0,c
  2325   001AA6  EF59  F00D         	goto	l5041
  2326   001AAA                     l5039:
  2327   001AAA  90D8               	bcf	status,0,c
  2328   001AAC  360E               	rlcf	___awdiv@divisor^0,f,c
  2329   001AAE  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  2330   001AB0  2A10               	incf	___awdiv@counter^0,f,c
  2331   001AB2                     l5041:
  2332   001AB2  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  2333   001AB4  EF5E  F00D         	goto	u4111
  2334   001AB8  EF60  F00D         	goto	u4110
  2335   001ABC                     u4111:
  2336   001ABC  EF55  F00D         	goto	l5039
  2337   001AC0                     u4110:
  2338   001AC0                     l5043:
  2339   001AC0  90D8               	bcf	status,0,c
  2340   001AC2  3612               	rlcf	___awdiv@quotient^0,f,c
  2341   001AC4  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  2342   001AC6  500E               	movf	___awdiv@divisor^0,w,c
  2343   001AC8  5C0C               	subwf	___awdiv@dividend^0,w,c
  2344   001ACA  500F               	movf	(___awdiv@divisor+1)^0,w,c
  2345   001ACC  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  2346   001ACE  A0D8               	btfss	status,0,c
  2347   001AD0  EF6C  F00D         	goto	u4121
  2348   001AD4  EF6E  F00D         	goto	u4120
  2349   001AD8                     u4121:
  2350   001AD8  EF73  F00D         	goto	l5051
  2351   001ADC                     u4120:
  2352   001ADC  500E               	movf	___awdiv@divisor^0,w,c
  2353   001ADE  5E0C               	subwf	___awdiv@dividend^0,f,c
  2354   001AE0  500F               	movf	(___awdiv@divisor+1)^0,w,c
  2355   001AE2  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  2356   001AE4  8012               	bsf	___awdiv@quotient^0,0,c
  2357   001AE6                     l5051:
  2358   001AE6  90D8               	bcf	status,0,c
  2359   001AE8  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  2360   001AEA  320E               	rrcf	___awdiv@divisor^0,f,c
  2361   001AEC  2E10               	decfsz	___awdiv@counter^0,f,c
  2362   001AEE  EF60  F00D         	goto	l5043
  2363   001AF2                     l5055:
  2364   001AF2  5011               	movf	___awdiv@sign^0,w,c
  2365   001AF4  B4D8               	btfsc	status,2,c
  2366   001AF6  EF7F  F00D         	goto	u4131
  2367   001AFA  EF81  F00D         	goto	u4130
  2368   001AFE                     u4131:
  2369   001AFE  EF85  F00D         	goto	l5059
  2370   001B02                     u4130:
  2371   001B02  6C12               	negf	___awdiv@quotient^0,c
  2372   001B04  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  2373   001B06  B0D8               	btfsc	status,0,c
  2374   001B08  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  2375   001B0A                     l5059:
  2376   001B0A  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  2377   001B0E  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  2378   001B12  0012               	return		;funcret
  2379   001B14                     __end_of___awdiv:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _memset *****************
  2383 ;; Defined at:
  2384 ;;		line 3 in file "G:\C_Extention\pic\sources\c99\common\memset.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  dest            1   11[COMRAM] PTR void 
  2387 ;;		 -> result_2(12), result_1(12), 
  2388 ;;  c               2   12[COMRAM] int 
  2389 ;;  n               2   14[COMRAM] unsigned int 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  p               1   16[COMRAM] PTR unsigned char 
  2392 ;;		 -> result_2(12), result_1(12), 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      PTR void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2402 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;Total ram usage:        6 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 4
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_convert_uint16_to_string
  2413 ;;		_convert_uint8_to_string
  2414 ;;		_convert_uint32_to_string
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text13
  2419   002220                     __ptext13:
  2420                           	callstack 0
  2421   002220                     _memset:
  2422                           	callstack 25
  2423   002220  C00C  F011         	movff	memset@dest,memset@p
  2424   002224  EF1A  F011         	goto	l4031
  2425   002228                     l4027:
  2426   002228  5011               	movf	memset@p^0,w,c
  2427   00222A  6ED9               	movwf	fsr2l,c
  2428   00222C  6ADA               	clrf	fsr2h,c
  2429   00222E  C00D  FFDF         	movff	memset@c,indf2
  2430   002232  2A11               	incf	memset@p^0,f,c
  2431   002234                     l4031:
  2432   002234  060F               	decf	memset@n^0,f,c
  2433   002236  A0D8               	btfss	status,0,c
  2434   002238  0610               	decf	(memset@n+1)^0,f,c
  2435   00223A  280F               	incf	memset@n^0,w,c
  2436   00223C  E106               	bnz	u2771
  2437   00223E  2810               	incf	(memset@n+1)^0,w,c
  2438   002240  A4D8               	btfss	status,2,c
  2439   002242  EF25  F011         	goto	u2771
  2440   002246  EF27  F011         	goto	u2770
  2441   00224A                     u2771:
  2442   00224A  EF14  F011         	goto	l4027
  2443   00224E                     u2770:
  2444   00224E  0012               	return		;funcret
  2445   002250                     __end_of_memset:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function _application_initializ *****************
  2449 ;; Defined at:
  2450 ;;		line 61 in file "application.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 8
  2471 ;; This function calls:
  2472 ;;		_ADC_Init
  2473 ;;		_lcd_4bit_init
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text14
  2480   0022BA                     __ptext14:
  2481                           	callstack 0
  2482   0022BA                     _application_initializ:
  2483                           	callstack 22
  2484   0022BA                     
  2485                           ;application.c: 63:     ret = ADC_Init(&adc1);
  2486   0022BA  0EC2               	movlw	low _adc1
  2487   0022BC  6E0F               	movwf	ADC_Init@adc_config^0,c
  2488   0022BE  ECDC  F00B         	call	_ADC_Init	;wreg free
  2489   0022C2  6E71               	movwf	_ret^0,c
  2490   0022C4                     
  2491                           ;application.c: 64:     ret = lcd_4bit_init(&lcd_1);
  2492   0022C4  0E6B               	movlw	low _lcd_1
  2493   0022C6  6E1E               	movwf	lcd_4bit_init@lcd^0,c
  2494   0022C8  EC62  F00B         	call	_lcd_4bit_init	;wreg free
  2495   0022CC  6E71               	movwf	_ret^0,c
  2496   0022CE  0012               	return		;funcret
  2497   0022D0                     __end_of_application_initializ:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _lcd_4bit_init *****************
  2501 ;; Defined at:
  2502 ;;		line 17 in file "ECU_layer/lcd/lcd.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  lcd             1   29[COMRAM] PTR const struct .
  2505 ;;		 -> lcd_1(6), 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  i               2   31[COMRAM] int 
  2508 ;;  ret             1   33[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      unsigned char 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        5 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 7
  2525 ;; This function calls:
  2526 ;;		_gpio_pin_Initialization
  2527 ;;		_lcd_4bit_send_command
  2528 ;; This function is called by:
  2529 ;;		_application_initializ
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text15
  2534   0016C4                     __ptext15:
  2535                           	callstack 0
  2536   0016C4                     _lcd_4bit_init:
  2537                           	callstack 22
  2538   0016C4                     
  2539                           ;ECU_layer/lcd/lcd.c: 21:     if (((void*)0) == lcd)
  2540   0016C4  501E               	movf	lcd_4bit_init@lcd^0,w,c
  2541   0016C6  A4D8               	btfss	status,2,c
  2542   0016C8  EF68  F00B         	goto	u2691
  2543   0016CC  EF6A  F00B         	goto	u2690
  2544   0016D0                     u2691:
  2545   0016D0  EF6E  F00B         	goto	l3909
  2546   0016D4                     u2690:
  2547   0016D4                     
  2548                           ;ECU_layer/lcd/lcd.c: 22:     {;ECU_layer/lcd/lcd.c: 23:         ret = (STD_ReturnType)0
      +                          x00;
  2549   0016D4  0E00               	movlw	0
  2550   0016D6  6E22               	movwf	lcd_4bit_init@ret^0,c
  2551                           
  2552                           ;ECU_layer/lcd/lcd.c: 24:     }
  2553   0016D8  EFDA  F00B         	goto	l3945
  2554   0016DC                     l3909:
  2555                           
  2556                           ;ECU_layer/lcd/lcd.c: 26:     {;ECU_layer/lcd/lcd.c: 27:         ret = gpio_pin_Initiali
      +                          zation(&(lcd->lcd_rs));
  2557   0016DC  C01E  F014         	movff	lcd_4bit_init@lcd,gpio_pin_Initialization@_pin_config
  2558   0016E0  EC51  F00F         	call	_gpio_pin_Initialization	;wreg free
  2559   0016E4  6E22               	movwf	lcd_4bit_init@ret^0,c
  2560                           
  2561                           ;ECU_layer/lcd/lcd.c: 28:         ret = gpio_pin_Initialization(&(lcd->lcd_en));
  2562   0016E6  281E               	incf	lcd_4bit_init@lcd^0,w,c
  2563   0016E8  6E14               	movwf	gpio_pin_Initialization@_pin_config^0,c
  2564   0016EA  EC51  F00F         	call	_gpio_pin_Initialization	;wreg free
  2565   0016EE  6E22               	movwf	lcd_4bit_init@ret^0,c
  2566   0016F0                     
  2567                           ;ECU_layer/lcd/lcd.c: 29:         for(int i=0 ; i<4 ; i++)
  2568   0016F0  0E00               	movlw	0
  2569   0016F2  6E21               	movwf	(lcd_4bit_init@i+1)^0,c
  2570   0016F4  0E00               	movlw	0
  2571   0016F6  6E20               	movwf	lcd_4bit_init@i^0,c
  2572   0016F8                     l3917:
  2573   0016F8  501E               	movf	lcd_4bit_init@lcd^0,w,c
  2574   0016FA  2420               	addwf	lcd_4bit_init@i^0,w,c
  2575   0016FC  0F02               	addlw	2
  2576   0016FE  6E14               	movwf	gpio_pin_Initialization@_pin_config^0,c
  2577   001700  EC51  F00F         	call	_gpio_pin_Initialization	;wreg free
  2578   001704                     
  2579                           ;ECU_layer/lcd/lcd.c: 32:         }
  2580   001704  4A20               	infsnz	lcd_4bit_init@i^0,f,c
  2581   001706  2A21               	incf	(lcd_4bit_init@i+1)^0,f,c
  2582   001708  BE21               	btfsc	(lcd_4bit_init@i+1)^0,7,c
  2583   00170A  EF90  F00B         	goto	u2701
  2584   00170E  5021               	movf	(lcd_4bit_init@i+1)^0,w,c
  2585   001710  E109               	bnz	u2700
  2586   001712  0E04               	movlw	4
  2587   001714  5C20               	subwf	lcd_4bit_init@i^0,w,c
  2588   001716  A0D8               	btfss	status,0,c
  2589   001718  EF90  F00B         	goto	u2701
  2590   00171C  EF92  F00B         	goto	u2700
  2591   001720                     u2701:
  2592   001720  EF7C  F00B         	goto	l3917
  2593   001724                     u2700:
  2594   001724                     
  2595                           ;ECU_layer/lcd/lcd.c: 33:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2596   001724  0E34               	movlw	52
  2597   001726  6E1F               	movwf	??_lcd_4bit_init^0,c
  2598   001728  0EF2               	movlw	242
  2599   00172A                     u4417:
  2600   00172A  2EE8               	decfsz	wreg,f,c
  2601   00172C  D7FE               	bra	u4417
  2602   00172E  2E1F               	decfsz	??_lcd_4bit_init^0,f,c
  2603   001730  D7FC               	bra	u4417
  2604   001732  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2605   001736  0E38               	movlw	56
  2606   001738  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2607   00173A  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2608   00173E                     
  2609                           ;ECU_layer/lcd/lcd.c: 35:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  2610   00173E  0E0D               	movlw	13
  2611   001740  6E1F               	movwf	??_lcd_4bit_init^0,c
  2612   001742  0EFC               	movlw	252
  2613   001744                     u4427:
  2614   001744  2EE8               	decfsz	wreg,f,c
  2615   001746  D7FE               	bra	u4427
  2616   001748  2E1F               	decfsz	??_lcd_4bit_init^0,f,c
  2617   00174A  D7FC               	bra	u4427
  2618   00174C  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2619   001750  0E38               	movlw	56
  2620   001752  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2621   001754  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2622   001758                     
  2623                           ;ECU_layer/lcd/lcd.c: 37:         _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  2624   001758  0E64               	movlw	100
  2625   00175A                     u4437:
  2626   00175A  2EE8               	decfsz	wreg,f,c
  2627   00175C  D7FE               	bra	u4437
  2628   00175E  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2629   001762  0E38               	movlw	56
  2630   001764  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2631   001766  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2632   00176A  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2633   00176E  0E01               	movlw	1
  2634   001770  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2635   001772  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2636   001776  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2637   00177A  0E02               	movlw	2
  2638   00177C  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2639   00177E  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2640   001782  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2641   001786  0E06               	movlw	6
  2642   001788  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2643   00178A  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2644   00178E  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2645   001792  0E0C               	movlw	12
  2646   001794  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2647   001796  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2648   00179A  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2649   00179E  0E28               	movlw	40
  2650   0017A0  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2651   0017A2  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2652   0017A6                     
  2653                           ;ECU_layer/lcd/lcd.c: 45:         ret = lcd_4bit_send_command(lcd , 0x80);
  2654   0017A6  C01E  F01B         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  2655   0017AA  0E80               	movlw	128
  2656   0017AC  6E1C               	movwf	lcd_4bit_send_command@command^0,c
  2657   0017AE  ECAE  F00F         	call	_lcd_4bit_send_command	;wreg free
  2658   0017B2  6E22               	movwf	lcd_4bit_init@ret^0,c
  2659   0017B4                     l3945:
  2660                           
  2661                           ;ECU_layer/lcd/lcd.c: 48:     return ret;
  2662   0017B4  5022               	movf	lcd_4bit_init@ret^0,w,c
  2663   0017B6  0012               	return		;funcret
  2664   0017B8                     __end_of_lcd_4bit_init:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _lcd_4bit_send_command *****************
  2668 ;; Defined at:
  2669 ;;		line 57 in file "ECU_layer/lcd/lcd.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  lcd             1   26[COMRAM] PTR const struct .
  2672 ;;		 -> lcd_1(6), 
  2673 ;;  command         1   27[COMRAM] unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  ret             1   28[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;Total ram usage:        3 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 6
  2692 ;; This function calls:
  2693 ;;		_gpio_pin_write_logic
  2694 ;;		_lcd_send_4bit_enable_signal
  2695 ;;		_lcd_send_4bits
  2696 ;; This function is called by:
  2697 ;;		_lcd_4bit_init
  2698 ;;		_lcd_4bit_set_cursor
  2699 ;;		_lcd_4bit_send_custom_char
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text16
  2704   001F5C                     __ptext16:
  2705                           	callstack 0
  2706   001F5C                     _lcd_4bit_send_command:
  2707                           	callstack 22
  2708   001F5C                     
  2709                           ;ECU_layer/lcd/lcd.c: 61:     if (((void*)0) == lcd)
  2710   001F5C  501B               	movf	lcd_4bit_send_command@lcd^0,w,c
  2711   001F5E  A4D8               	btfss	status,2,c
  2712   001F60  EFB4  F00F         	goto	u2641
  2713   001F64  EFB6  F00F         	goto	u2640
  2714   001F68                     u2641:
  2715   001F68  EFBA  F00F         	goto	l3821
  2716   001F6C                     u2640:
  2717   001F6C                     
  2718                           ;ECU_layer/lcd/lcd.c: 62:     {;ECU_layer/lcd/lcd.c: 63:         ret = (STD_ReturnType)0
      +                          x00;
  2719   001F6C  0E00               	movlw	0
  2720   001F6E  6E1D               	movwf	lcd_4bit_send_command@ret^0,c
  2721                           
  2722                           ;ECU_layer/lcd/lcd.c: 64:     }
  2723   001F70  EFDA  F00F         	goto	l3823
  2724   001F74                     l3821:
  2725                           
  2726                           ;ECU_layer/lcd/lcd.c: 66:     {;ECU_layer/lcd/lcd.c: 67:         ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs),GPIO_LOW);
  2727   001F74  C01B  F00C         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2728   001F78  0E00               	movlw	0
  2729   001F7A  6E0D               	movwf	gpio_pin_write_logic@logic^0,c
  2730   001F7C  ECDA  F00A         	call	_gpio_pin_write_logic	;wreg free
  2731   001F80  6E1D               	movwf	lcd_4bit_send_command@ret^0,c
  2732                           
  2733                           ;ECU_layer/lcd/lcd.c: 68:         ret = lcd_send_4bits(lcd, command >> 4);
  2734   001F82  C01B  F014         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2735   001F86  381C               	swapf	lcd_4bit_send_command@command^0,w,c
  2736   001F88  0B0F               	andlw	15
  2737   001F8A  6E15               	movwf	lcd_send_4bits@data_command^0,c
  2738   001F8C  ECE8  F00E         	call	_lcd_send_4bits	;wreg free
  2739   001F90  6E1D               	movwf	lcd_4bit_send_command@ret^0,c
  2740                           
  2741                           ;ECU_layer/lcd/lcd.c: 69:         ret = lcd_send_4bit_enable_signal(lcd);
  2742   001F92  C01B  F014         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable_signal@lcd
  2743   001F96  EC27  F010         	call	_lcd_send_4bit_enable_signal	;wreg free
  2744   001F9A  6E1D               	movwf	lcd_4bit_send_command@ret^0,c
  2745                           
  2746                           ;ECU_layer/lcd/lcd.c: 70:         ret = lcd_send_4bits(lcd, command);
  2747   001F9C  C01B  F014         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2748   001FA0  C01C  F015         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  2749   001FA4  ECE8  F00E         	call	_lcd_send_4bits	;wreg free
  2750   001FA8  6E1D               	movwf	lcd_4bit_send_command@ret^0,c
  2751                           
  2752                           ;ECU_layer/lcd/lcd.c: 71:         ret = lcd_send_4bit_enable_signal(lcd);
  2753   001FAA  C01B  F014         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable_signal@lcd
  2754   001FAE  EC27  F010         	call	_lcd_send_4bit_enable_signal	;wreg free
  2755   001FB2  6E1D               	movwf	lcd_4bit_send_command@ret^0,c
  2756   001FB4                     l3823:
  2757                           
  2758                           ;ECU_layer/lcd/lcd.c: 73:     return ret;
  2759   001FB4  501D               	movf	lcd_4bit_send_command@ret^0,w,c
  2760   001FB6  0012               	return		;funcret
  2761   001FB8                     __end_of_lcd_4bit_send_command:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _lcd_send_4bits *****************
  2765 ;; Defined at:
  2766 ;;		line 225 in file "ECU_layer/lcd/lcd.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  lcd             1   19[COMRAM] PTR const struct .
  2769 ;;		 -> lcd_1(6), 
  2770 ;;  data_command    1   20[COMRAM] unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  i               2   24[COMRAM] int 
  2773 ;;  ret             1   23[COMRAM] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;Total ram usage:        7 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 5
  2790 ;; This function calls:
  2791 ;;		_gpio_pin_write_logic
  2792 ;; This function is called by:
  2793 ;;		_lcd_4bit_send_command
  2794 ;;		_lcd_4bit_send_data
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text17
  2799   001DD0                     __ptext17:
  2800                           	callstack 0
  2801   001DD0                     _lcd_send_4bits:
  2802                           	callstack 22
  2803   001DD0                     
  2804                           ;ECU_layer/lcd/lcd.c: 229:     if (((void*)0) == lcd)
  2805   001DD0  5014               	movf	lcd_send_4bits@lcd^0,w,c
  2806   001DD2  A4D8               	btfss	status,2,c
  2807   001DD4  EFEE  F00E         	goto	u2481
  2808   001DD8  EFF0  F00E         	goto	u2480
  2809   001DDC                     u2481:
  2810   001DDC  EFF4  F00E         	goto	l3725
  2811   001DE0                     u2480:
  2812   001DE0                     
  2813                           ;ECU_layer/lcd/lcd.c: 230:     {;ECU_layer/lcd/lcd.c: 231:         ret = (STD_ReturnType
      +                          )0x00;
  2814   001DE0  0E00               	movlw	0
  2815   001DE2  6E18               	movwf	lcd_send_4bits@ret^0,c
  2816                           
  2817                           ;ECU_layer/lcd/lcd.c: 232:     }
  2818   001DE4  EF1E  F00F         	goto	l3737
  2819   001DE8                     l3725:
  2820                           
  2821                           ;ECU_layer/lcd/lcd.c: 234:     {;ECU_layer/lcd/lcd.c: 235:         for(int i = 0 ; i < 4
      +                           ; i++)
  2822   001DE8  0E00               	movlw	0
  2823   001DEA  6E1A               	movwf	(lcd_send_4bits@i+1)^0,c
  2824   001DEC  0E00               	movlw	0
  2825   001DEE  6E19               	movwf	lcd_send_4bits@i^0,c
  2826   001DF0                     l3731:
  2827                           
  2828                           ;ECU_layer/lcd/lcd.c: 236:         {;ECU_layer/lcd/lcd.c: 237:             ret = gpio_pi
      +                          n_write_logic(&(lcd->lcd_data[i]) , (data_command >> i) & 0x01);
  2829   001DF0  5014               	movf	lcd_send_4bits@lcd^0,w,c
  2830   001DF2  2419               	addwf	lcd_send_4bits@i^0,w,c
  2831   001DF4  0F02               	addlw	2
  2832   001DF6  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2833   001DF8  C019  F016         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  2834   001DFC  C015  F017         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  2835   001E00  2A16               	incf	??_lcd_send_4bits^0,f,c
  2836   001E02  EF05  F00F         	goto	u2494
  2837   001E06                     u2495:
  2838   001E06  90D8               	bcf	status,0,c
  2839   001E08  3217               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2840   001E0A                     u2494:
  2841   001E0A  2E16               	decfsz	??_lcd_send_4bits^0,f,c
  2842   001E0C  EF03  F00F         	goto	u2495
  2843   001E10  5017               	movf	(??_lcd_send_4bits+1)^0,w,c
  2844   001E12  0B01               	andlw	1
  2845   001E14  6E0D               	movwf	gpio_pin_write_logic@logic^0,c
  2846   001E16  ECDA  F00A         	call	_gpio_pin_write_logic	;wreg free
  2847   001E1A  6E18               	movwf	lcd_send_4bits@ret^0,c
  2848   001E1C                     
  2849                           ;ECU_layer/lcd/lcd.c: 238:         }
  2850   001E1C  4A19               	infsnz	lcd_send_4bits@i^0,f,c
  2851   001E1E  2A1A               	incf	(lcd_send_4bits@i+1)^0,f,c
  2852   001E20  BE1A               	btfsc	(lcd_send_4bits@i+1)^0,7,c
  2853   001E22  EF1C  F00F         	goto	u2501
  2854   001E26  501A               	movf	(lcd_send_4bits@i+1)^0,w,c
  2855   001E28  E109               	bnz	u2500
  2856   001E2A  0E04               	movlw	4
  2857   001E2C  5C19               	subwf	lcd_send_4bits@i^0,w,c
  2858   001E2E  A0D8               	btfss	status,0,c
  2859   001E30  EF1C  F00F         	goto	u2501
  2860   001E34  EF1E  F00F         	goto	u2500
  2861   001E38                     u2501:
  2862   001E38  EFF8  F00E         	goto	l3731
  2863   001E3C                     u2500:
  2864   001E3C                     l3737:
  2865                           
  2866                           ;ECU_layer/lcd/lcd.c: 240:     return ret;
  2867   001E3C  5018               	movf	lcd_send_4bits@ret^0,w,c
  2868   001E3E  0012               	return		;funcret
  2869   001E40                     __end_of_lcd_send_4bits:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _lcd_send_4bit_enable_signal *****************
  2873 ;; Defined at:
  2874 ;;		line 249 in file "ECU_layer/lcd/lcd.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  lcd             1   19[COMRAM] PTR const struct .
  2877 ;;		 -> lcd_1(6), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  ret             1   21[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      unsigned char 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        3 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 5
  2896 ;; This function calls:
  2897 ;;		_gpio_pin_write_logic
  2898 ;; This function is called by:
  2899 ;;		_lcd_4bit_send_command
  2900 ;;		_lcd_4bit_send_data
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text18
  2905   00204E                     __ptext18:
  2906                           	callstack 0
  2907   00204E                     _lcd_send_4bit_enable_signal:
  2908                           	callstack 22
  2909   00204E                     
  2910                           ;ECU_layer/lcd/lcd.c: 253:     if (((void*)0) == lcd)
  2911   00204E  5014               	movf	lcd_send_4bit_enable_signal@lcd^0,w,c
  2912   002050  A4D8               	btfss	status,2,c
  2913   002052  EF2D  F010         	goto	u2511
  2914   002056  EF2F  F010         	goto	u2510
  2915   00205A                     u2511:
  2916   00205A  EF33  F010         	goto	l3745
  2917   00205E                     u2510:
  2918   00205E                     
  2919                           ;ECU_layer/lcd/lcd.c: 254:     {;ECU_layer/lcd/lcd.c: 255:         ret = (STD_ReturnType
      +                          )0x00;
  2920   00205E  0E00               	movlw	0
  2921   002060  6E16               	movwf	lcd_send_4bit_enable_signal@ret^0,c
  2922                           
  2923                           ;ECU_layer/lcd/lcd.c: 256:     }
  2924   002062  EF47  F010         	goto	l3751
  2925   002066                     l3745:
  2926   002066  2814               	incf	lcd_send_4bit_enable_signal@lcd^0,w,c
  2927   002068  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2928   00206A  0E01               	movlw	1
  2929   00206C  6E0D               	movwf	gpio_pin_write_logic@logic^0,c
  2930   00206E  ECDA  F00A         	call	_gpio_pin_write_logic	;wreg free
  2931   002072                     
  2932                           ;ECU_layer/lcd/lcd.c: 260:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  2933   002072  0E03               	movlw	3
  2934   002074  6E15               	movwf	??_lcd_send_4bit_enable_signal^0,c
  2935   002076  0E98               	movlw	152
  2936   002078                     u4447:
  2937   002078  2EE8               	decfsz	wreg,f,c
  2938   00207A  D7FE               	bra	u4447
  2939   00207C  2E15               	decfsz	??_lcd_send_4bit_enable_signal^0,f,c
  2940   00207E  D7FC               	bra	u4447
  2941   002080                     
  2942                           ;ECU_layer/lcd/lcd.c: 261:         ret = gpio_pin_write_logic(&(lcd->lcd_en) , GPIO_LOW)
      +                          ;
  2943   002080  2814               	incf	lcd_send_4bit_enable_signal@lcd^0,w,c
  2944   002082  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2945   002084  0E00               	movlw	0
  2946   002086  6E0D               	movwf	gpio_pin_write_logic@logic^0,c
  2947   002088  ECDA  F00A         	call	_gpio_pin_write_logic	;wreg free
  2948   00208C  6E16               	movwf	lcd_send_4bit_enable_signal@ret^0,c
  2949   00208E                     l3751:
  2950                           
  2951                           ;ECU_layer/lcd/lcd.c: 263:     return ret;
  2952   00208E  5016               	movf	lcd_send_4bit_enable_signal@ret^0,w,c
  2953   002090  0012               	return		;funcret
  2954   002092                     __end_of_lcd_send_4bit_enable_signal:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _gpio_pin_Initialization *****************
  2958 ;; Defined at:
  2959 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  _pin_config     1   19[COMRAM] PTR const struct .
  2962 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), 
  2963 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  ret             1   21[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      unsigned char 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2975 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;Total ram usage:        3 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 5
  2982 ;; This function calls:
  2983 ;;		_gpio_pin_direction_init
  2984 ;;		_gpio_pin_write_logic
  2985 ;; This function is called by:
  2986 ;;		_lcd_4bit_init
  2987 ;;		_seg_initialization
  2988 ;;		_ecu_dc_motor_initializ
  2989 ;;		_keypad_initialize
  2990 ;;		_lcd_8bit_init
  2991 ;;		_ecu_led_initializ
  2992 ;;		_ecu_relay_initializ
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text19
  2997   001EA2                     __ptext19:
  2998                           	callstack 0
  2999   001EA2                     _gpio_pin_Initialization:
  3000                           	callstack 23
  3001   001EA2                     
  3002                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
  3003   001EA2  5014               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  3004   001EA4  B4D8               	btfsc	status,2,c
  3005   001EA6  EF57  F00F         	goto	u2621
  3006   001EAA  EF59  F00F         	goto	u2620
  3007   001EAE                     u2621:
  3008   001EAE  EF69  F00F         	goto	l3809
  3009   001EB2                     u2620:
  3010   001EB2  5014               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  3011   001EB4  6ED9               	movwf	fsr2l,c
  3012   001EB6  6ADA               	clrf	fsr2h,c
  3013   001EB8  30DF               	rrcf	223,w,c
  3014   001EBA  32E8               	rrcf	wreg,f,c
  3015   001EBC  32E8               	rrcf	wreg,f,c
  3016   001EBE  0B07               	andlw	7
  3017   001EC0  6E15               	movwf	??_gpio_pin_Initialization^0,c
  3018   001EC2  0E07               	movlw	7
  3019   001EC4  6415               	cpfsgt	??_gpio_pin_Initialization^0,c
  3020   001EC6  EF67  F00F         	goto	u2631
  3021   001ECA  EF69  F00F         	goto	u2630
  3022   001ECE                     u2631:
  3023   001ECE  EF6D  F00F         	goto	l3811
  3024   001ED2                     u2630:
  3025   001ED2                     l3809:
  3026                           
  3027                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
  3028   001ED2  0E00               	movlw	0
  3029   001ED4  6E16               	movwf	gpio_pin_Initialization@ret^0,c
  3030                           
  3031                           ;MCAL_layer/GPIO/gpio.c: 154:     }
  3032   001ED6  EF7E  F00F         	goto	l3813
  3033   001EDA                     l3811:
  3034                           
  3035                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
  3036   001EDA  C014  F00C         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
  3037   001EDE  EC51  F00A         	call	_gpio_pin_direction_init	;wreg free
  3038   001EE2  6E16               	movwf	gpio_pin_Initialization@ret^0,c
  3039                           
  3040                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
  3041   001EE4  C014  F00C         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
  3042   001EE8  5014               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  3043   001EEA  6ED9               	movwf	fsr2l,c
  3044   001EEC  6ADA               	clrf	fsr2h,c
  3045   001EEE  0E00               	movlw	0
  3046   001EF0  BEDF               	btfsc	indf2,7,c
  3047   001EF2  0E01               	movlw	1
  3048   001EF4  6E0D               	movwf	gpio_pin_write_logic@logic^0,c
  3049   001EF6  ECDA  F00A         	call	_gpio_pin_write_logic	;wreg free
  3050   001EFA  6E16               	movwf	gpio_pin_Initialization@ret^0,c
  3051   001EFC                     l3813:
  3052                           
  3053                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
  3054   001EFC  5016               	movf	gpio_pin_Initialization@ret^0,w,c
  3055   001EFE  0012               	return		;funcret
  3056   001F00                     __end_of_gpio_pin_Initialization:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _gpio_pin_write_logic *****************
  3060 ;; Defined at:
  3061 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  _pin_config     1   11[COMRAM] PTR const struct .
  3064 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), ecu_relay_turn_off@relay_init(1), ecu_relay_turn_on@relay_init(1), 
  3065 ;;		 -> ecu_relay_initializ@relay_init(1), ecu_led_turn_off@_pin_config(1), ecu_led_turn_on@_pin_config(1), ecu_led_init
      +ializ@_pin_config(1), 
  3066 ;;		 -> ecu_dc_motor_stop@dc_motor_pin_2(1), ecu_dc_motor_stop@dc_motor_pin_1(1), ecu_dc_motor_move_left@dc_motor_pin_2(
      +1), ecu_dc_motor_move_left@dc_motor_pin_1(1), 
  3067 ;;		 -> ecu_dc_motor_move_right@dc_motor_pin_2(1), ecu_dc_motor_move_right@dc_motor_pin_1(1), ecu_dc_motor_initializ@dc_
      +motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  3068 ;;  logic           1   12[COMRAM] enum E2981
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  ret             1   18[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      unsigned char 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;Total ram usage:        8 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 4
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_lcd_4bit_send_command
  3091 ;;		_lcd_4bit_send_data
  3092 ;;		_lcd_send_4bits
  3093 ;;		_lcd_send_4bit_enable_signal
  3094 ;;		_gpio_pin_Initialization
  3095 ;;		_seg_write_number
  3096 ;;		_ecu_dc_motor_move_right
  3097 ;;		_ecu_dc_motor_move_left
  3098 ;;		_ecu_dc_motor_stop
  3099 ;;		_keypad_get_value
  3100 ;;		_lcd_8bit_send_command
  3101 ;;		_lcd_8bit_send_data
  3102 ;;		_lcd_send_8bit_enable_signal
  3103 ;;		_ecu_led_turn_on
  3104 ;;		_ecu_led_turn_off
  3105 ;;		_ecu_relay_turn_on
  3106 ;;		_ecu_relay_turn_off
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text20
  3111   0015B4                     __ptext20:
  3112                           	callstack 0
  3113   0015B4                     _gpio_pin_write_logic:
  3114                           	callstack 22
  3115   0015B4                     
  3116                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
  3117   0015B4  0E01               	movlw	1
  3118   0015B6  6E13               	movwf	gpio_pin_write_logic@ret^0,c
  3119                           
  3120                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  3121   0015B8  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3122   0015BA  B4D8               	btfsc	status,2,c
  3123   0015BC  EFE2  F00A         	goto	u2221
  3124   0015C0  EFE4  F00A         	goto	u2220
  3125   0015C4                     u2221:
  3126   0015C4  EFF4  F00A         	goto	l3587
  3127   0015C8                     u2220:
  3128   0015C8  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3129   0015CA  6ED9               	movwf	fsr2l,c
  3130   0015CC  6ADA               	clrf	fsr2h,c
  3131   0015CE  30DF               	rrcf	223,w,c
  3132   0015D0  32E8               	rrcf	wreg,f,c
  3133   0015D2  32E8               	rrcf	wreg,f,c
  3134   0015D4  0B07               	andlw	7
  3135   0015D6  6E0E               	movwf	??_gpio_pin_write_logic^0,c
  3136   0015D8  0E07               	movlw	7
  3137   0015DA  640E               	cpfsgt	??_gpio_pin_write_logic^0,c
  3138   0015DC  EFF2  F00A         	goto	u2231
  3139   0015E0  EFF4  F00A         	goto	u2230
  3140   0015E4                     u2231:
  3141   0015E4  EF4B  F00B         	goto	l3595
  3142   0015E8                     u2230:
  3143   0015E8                     l3587:
  3144                           
  3145                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
  3146   0015E8  0E00               	movlw	0
  3147   0015EA  6E13               	movwf	gpio_pin_write_logic@ret^0,c
  3148                           
  3149                           ;MCAL_layer/GPIO/gpio.c: 82:     }
  3150   0015EC  EF60  F00B         	goto	l3597
  3151   0015F0                     l3589:
  3152                           
  3153                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  3154   0015F0  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3155   0015F2  6ED9               	movwf	fsr2l,c
  3156   0015F4  6ADA               	clrf	fsr2h,c
  3157   0015F6  30DF               	rrcf	223,w,c
  3158   0015F8  32E8               	rrcf	wreg,f,c
  3159   0015FA  32E8               	rrcf	wreg,f,c
  3160   0015FC  0B07               	andlw	7
  3161   0015FE  6E0E               	movwf	??_gpio_pin_write_logic^0,c
  3162   001600  0E01               	movlw	1
  3163   001602  6E0F               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3164   001604  2A0E               	incf	??_gpio_pin_write_logic^0,f,c
  3165   001606  EF07  F00B         	goto	u2244
  3166   00160A                     u2245:
  3167   00160A  90D8               	bcf	status,0,c
  3168   00160C  360F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3169   00160E                     u2244:
  3170   00160E  2E0E               	decfsz	??_gpio_pin_write_logic^0,f,c
  3171   001610  EF05  F00B         	goto	u2245
  3172   001614  500F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3173   001616  0AFF               	xorlw	255
  3174   001618  6E10               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3175   00161A  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3176   00161C  6ED9               	movwf	fsr2l,c
  3177   00161E  6ADA               	clrf	fsr2h,c
  3178   001620  50DF               	movf	223,w,c
  3179   001622  0B07               	andlw	7
  3180   001624  0D02               	mullw	2
  3181   001626  50F3               	movf	243,w,c
  3182   001628  0F57               	addlw	low _lat_registers
  3183   00162A  6ED9               	movwf	fsr2l,c
  3184   00162C  6ADA               	clrf	fsr2h,c
  3185   00162E  CFDE F011          	movff	postinc2,??_gpio_pin_write_logic+3
  3186   001632  CFDD F012          	movff	postdec2,??_gpio_pin_write_logic+4
  3187   001636  C011  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3188   00163A  C012  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3189   00163E  5010               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3190   001640  16DF               	andwf	indf2,f,c
  3191                           
  3192                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
  3193   001642  EF60  F00B         	goto	l3597
  3194   001646                     l3591:
  3195                           
  3196                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  3197   001646  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3198   001648  6ED9               	movwf	fsr2l,c
  3199   00164A  6ADA               	clrf	fsr2h,c
  3200   00164C  30DF               	rrcf	223,w,c
  3201   00164E  32E8               	rrcf	wreg,f,c
  3202   001650  32E8               	rrcf	wreg,f,c
  3203   001652  0B07               	andlw	7
  3204   001654  6E0E               	movwf	??_gpio_pin_write_logic^0,c
  3205   001656  0E01               	movlw	1
  3206   001658  6E0F               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3207   00165A  2A0E               	incf	??_gpio_pin_write_logic^0,f,c
  3208   00165C  EF32  F00B         	goto	u2254
  3209   001660                     u2255:
  3210   001660  90D8               	bcf	status,0,c
  3211   001662  360F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3212   001664                     u2254:
  3213   001664  2E0E               	decfsz	??_gpio_pin_write_logic^0,f,c
  3214   001666  EF30  F00B         	goto	u2255
  3215   00166A  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3216   00166C  6ED9               	movwf	fsr2l,c
  3217   00166E  6ADA               	clrf	fsr2h,c
  3218   001670  50DF               	movf	223,w,c
  3219   001672  0B07               	andlw	7
  3220   001674  0D02               	mullw	2
  3221   001676  50F3               	movf	243,w,c
  3222   001678  0F57               	addlw	low _lat_registers
  3223   00167A  6ED9               	movwf	fsr2l,c
  3224   00167C  6ADA               	clrf	fsr2h,c
  3225   00167E  CFDE F010          	movff	postinc2,??_gpio_pin_write_logic+2
  3226   001682  CFDD F011          	movff	postdec2,??_gpio_pin_write_logic+3
  3227   001686  C010  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3228   00168A  C011  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3229   00168E  500F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3230   001690  12DF               	iorwf	indf2,f,c
  3231                           
  3232                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  3233   001692  EF60  F00B         	goto	l3597
  3234   001696                     l3595:
  3235   001696  500D               	movf	gpio_pin_write_logic@logic^0,w,c
  3236   001698  6E0E               	movwf	??_gpio_pin_write_logic^0,c
  3237   00169A  6A0F               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3238                           
  3239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3240                           ; Switch size 1, requested type "simple"
  3241                           ; Number of cases is 1, Range of values is 0 to 0
  3242                           ; switch strategies available:
  3243                           ; Name         Instructions Cycles
  3244                           ; simple_byte            4     3 (average)
  3245                           ;	Chosen strategy is simple_byte
  3246   00169C  500F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3247   00169E  0A00               	xorlw	0	; case 0
  3248   0016A0  B4D8               	btfsc	status,2,c
  3249   0016A2  EF55  F00B         	goto	l5311
  3250   0016A6  EFF4  F00A         	goto	l3587
  3251   0016AA                     l5311:
  3252                           
  3253                           ; Switch size 1, requested type "simple"
  3254                           ; Number of cases is 2, Range of values is 0 to 1
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte            7     4 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259   0016AA  500E               	movf	??_gpio_pin_write_logic^0,w,c
  3260   0016AC  0A00               	xorlw	0	; case 0
  3261   0016AE  B4D8               	btfsc	status,2,c
  3262   0016B0  EFF8  F00A         	goto	l3589
  3263   0016B4  0A01               	xorlw	1	; case 1
  3264   0016B6  B4D8               	btfsc	status,2,c
  3265   0016B8  EF23  F00B         	goto	l3591
  3266   0016BC  EFF4  F00A         	goto	l3587
  3267   0016C0                     l3597:
  3268                           
  3269                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  3270   0016C0  5013               	movf	gpio_pin_write_logic@ret^0,w,c
  3271   0016C2  0012               	return		;funcret
  3272   0016C4                     __end_of_gpio_pin_write_logic:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _gpio_pin_direction_init *****************
  3276 ;; Defined at:
  3277 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  _pin_config     1   11[COMRAM] PTR const struct .
  3280 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), 
  3281 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  ret             1   17[COMRAM] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      unsigned char 
  3286 ;; Registers used:
  3287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3293 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;Total ram usage:        7 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; Hardware stack levels required when called: 4
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_gpio_pin_Initialization
  3304 ;;		_ecu_button_init
  3305 ;;		_Interrupt_INTx_Pin_init
  3306 ;;		_Interrupt_RBx_Pin_init
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text21
  3311   0014A2                     __ptext21:
  3312                           	callstack 0
  3313   0014A2                     _gpio_pin_direction_init:
  3314                           	callstack 23
  3315   0014A2                     
  3316                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  3317   0014A2  0E01               	movlw	1
  3318   0014A4  6E12               	movwf	gpio_pin_direction_init@ret^0,c
  3319                           
  3320                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  3321   0014A6  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3322   0014A8  B4D8               	btfsc	status,2,c
  3323   0014AA  EF59  F00A         	goto	u2431
  3324   0014AE  EF5B  F00A         	goto	u2430
  3325   0014B2                     u2431:
  3326   0014B2  EF6B  F00A         	goto	l3707
  3327   0014B6                     u2430:
  3328   0014B6  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3329   0014B8  6ED9               	movwf	fsr2l,c
  3330   0014BA  6ADA               	clrf	fsr2h,c
  3331   0014BC  30DF               	rrcf	223,w,c
  3332   0014BE  32E8               	rrcf	wreg,f,c
  3333   0014C0  32E8               	rrcf	wreg,f,c
  3334   0014C2  0B07               	andlw	7
  3335   0014C4  6E0D               	movwf	??_gpio_pin_direction_init^0,c
  3336   0014C6  0E07               	movlw	7
  3337   0014C8  640D               	cpfsgt	??_gpio_pin_direction_init^0,c
  3338   0014CA  EF69  F00A         	goto	u2441
  3339   0014CE  EF6B  F00A         	goto	u2440
  3340   0014D2                     u2441:
  3341   0014D2  EFC2  F00A         	goto	l3715
  3342   0014D6                     u2440:
  3343   0014D6                     l3707:
  3344                           
  3345                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  3346   0014D6  0E00               	movlw	0
  3347   0014D8  6E12               	movwf	gpio_pin_direction_init@ret^0,c
  3348                           
  3349                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  3350   0014DA  EFD8  F00A         	goto	l3717
  3351   0014DE                     l3709:
  3352                           
  3353                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  3354   0014DE  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3355   0014E0  6ED9               	movwf	fsr2l,c
  3356   0014E2  6ADA               	clrf	fsr2h,c
  3357   0014E4  30DF               	rrcf	223,w,c
  3358   0014E6  32E8               	rrcf	wreg,f,c
  3359   0014E8  32E8               	rrcf	wreg,f,c
  3360   0014EA  0B07               	andlw	7
  3361   0014EC  6E0D               	movwf	??_gpio_pin_direction_init^0,c
  3362   0014EE  0E01               	movlw	1
  3363   0014F0  6E0E               	movwf	(??_gpio_pin_direction_init+1)^0,c
  3364   0014F2  2A0D               	incf	??_gpio_pin_direction_init^0,f,c
  3365   0014F4  EF7E  F00A         	goto	u2454
  3366   0014F8                     u2455:
  3367   0014F8  90D8               	bcf	status,0,c
  3368   0014FA  360E               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  3369   0014FC                     u2454:
  3370   0014FC  2E0D               	decfsz	??_gpio_pin_direction_init^0,f,c
  3371   0014FE  EF7C  F00A         	goto	u2455
  3372   001502  500E               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3373   001504  0AFF               	xorlw	255
  3374   001506  6E0F               	movwf	(??_gpio_pin_direction_init+2)^0,c
  3375   001508  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3376   00150A  6ED9               	movwf	fsr2l,c
  3377   00150C  6ADA               	clrf	fsr2h,c
  3378   00150E  50DF               	movf	223,w,c
  3379   001510  0B07               	andlw	7
  3380   001512  0D02               	mullw	2
  3381   001514  50F3               	movf	243,w,c
  3382   001516  0F61               	addlw	low _tris_registers
  3383   001518  6ED9               	movwf	fsr2l,c
  3384   00151A  6ADA               	clrf	fsr2h,c
  3385   00151C  CFDE F010          	movff	postinc2,??_gpio_pin_direction_init+3
  3386   001520  CFDD F011          	movff	postdec2,??_gpio_pin_direction_init+4
  3387   001524  C010  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  3388   001528  C011  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  3389   00152C  500F               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  3390   00152E  16DF               	andwf	indf2,f,c
  3391                           
  3392                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  3393   001530  EFD8  F00A         	goto	l3717
  3394   001534                     l3711:
  3395                           
  3396                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  3397   001534  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3398   001536  6ED9               	movwf	fsr2l,c
  3399   001538  6ADA               	clrf	fsr2h,c
  3400   00153A  30DF               	rrcf	223,w,c
  3401   00153C  32E8               	rrcf	wreg,f,c
  3402   00153E  32E8               	rrcf	wreg,f,c
  3403   001540  0B07               	andlw	7
  3404   001542  6E0D               	movwf	??_gpio_pin_direction_init^0,c
  3405   001544  0E01               	movlw	1
  3406   001546  6E0E               	movwf	(??_gpio_pin_direction_init+1)^0,c
  3407   001548  2A0D               	incf	??_gpio_pin_direction_init^0,f,c
  3408   00154A  EFA9  F00A         	goto	u2464
  3409   00154E                     u2465:
  3410   00154E  90D8               	bcf	status,0,c
  3411   001550  360E               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  3412   001552                     u2464:
  3413   001552  2E0D               	decfsz	??_gpio_pin_direction_init^0,f,c
  3414   001554  EFA7  F00A         	goto	u2465
  3415   001558  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3416   00155A  6ED9               	movwf	fsr2l,c
  3417   00155C  6ADA               	clrf	fsr2h,c
  3418   00155E  50DF               	movf	223,w,c
  3419   001560  0B07               	andlw	7
  3420   001562  0D02               	mullw	2
  3421   001564  50F3               	movf	243,w,c
  3422   001566  0F61               	addlw	low _tris_registers
  3423   001568  6ED9               	movwf	fsr2l,c
  3424   00156A  6ADA               	clrf	fsr2h,c
  3425   00156C  CFDE F00F          	movff	postinc2,??_gpio_pin_direction_init+2
  3426   001570  CFDD F010          	movff	postdec2,??_gpio_pin_direction_init+3
  3427   001574  C00F  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  3428   001578  C010  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  3429   00157C  500E               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3430   00157E  12DF               	iorwf	indf2,f,c
  3431                           
  3432                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  3433   001580  EFD8  F00A         	goto	l3717
  3434   001584                     l3715:
  3435   001584  500C               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  3436   001586  6ED9               	movwf	fsr2l,c
  3437   001588  6ADA               	clrf	fsr2h,c
  3438   00158A  BCDF               	btfsc	indf2,6,c
  3439   00158C  EFCA  F00A         	goto	u2471
  3440   001590  EFCD  F00A         	goto	u2470
  3441   001594                     u2471:
  3442   001594  0E01               	movlw	1
  3443   001596  EFCE  F00A         	goto	u2476
  3444   00159A                     u2470:
  3445   00159A  0E00               	movlw	0
  3446   00159C                     u2476:
  3447                           
  3448                           ; Switch size 1, requested type "simple"
  3449                           ; Number of cases is 2, Range of values is 0 to 1
  3450                           ; switch strategies available:
  3451                           ; Name         Instructions Cycles
  3452                           ; simple_byte            7     4 (average)
  3453                           ;	Chosen strategy is simple_byte
  3454   00159C  0A00               	xorlw	0	; case 0
  3455   00159E  B4D8               	btfsc	status,2,c
  3456   0015A0  EF6F  F00A         	goto	l3709
  3457   0015A4  0A01               	xorlw	1	; case 1
  3458   0015A6  B4D8               	btfsc	status,2,c
  3459   0015A8  EF9A  F00A         	goto	l3711
  3460   0015AC  EF6B  F00A         	goto	l3707
  3461   0015B0                     l3717:
  3462                           
  3463                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  3464   0015B0  5012               	movf	gpio_pin_direction_init@ret^0,w,c
  3465   0015B2  0012               	return		;funcret
  3466   0015B4                     __end_of_gpio_pin_direction_init:
  3467                           	callstack 0
  3468                           
  3469 ;; *************** function _ADC_Init *****************
  3470 ;; Defined at:
  3471 ;;		line 21 in file "MCAL_layer/ADC/adc.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  adc_config      1   14[COMRAM] PTR const struct .
  3474 ;;		 -> adc1(9), 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  ret             1   17[COMRAM] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      unsigned char 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3486 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;Total ram usage:        4 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 5
  3493 ;; This function calls:
  3494 ;;		_ADC_Input_Channel_Port_Configuration
  3495 ;;		_ADC_Result_Format_Configuration
  3496 ;;		_ADC_Voltage_Reference_Configuration
  3497 ;; This function is called by:
  3498 ;;		_application_initializ
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text22
  3503   0017B8                     __ptext22:
  3504                           	callstack 0
  3505   0017B8                     _ADC_Init:
  3506                           	callstack 24
  3507   0017B8                     
  3508                           ;MCAL_layer/ADC/adc.c: 21: STD_ReturnType ADC_Init(const adc_config_t *adc_config);MCAL_
      +                          layer/ADC/adc.c: 22: {;MCAL_layer/ADC/adc.c: 23:     STD_ReturnType ret = (STD_ReturnTyp
      +                          e)0x01;
  3509   0017B8  0E01               	movlw	1
  3510   0017BA  6E12               	movwf	ADC_Init@ret^0,c
  3511                           
  3512                           ;MCAL_layer/ADC/adc.c: 24:     if(((void*)0) == adc_config)
  3513   0017BC  500F               	movf	ADC_Init@adc_config^0,w,c
  3514   0017BE  A4D8               	btfss	status,2,c
  3515   0017C0  EFE4  F00B         	goto	u2781
  3516   0017C4  EFE6  F00B         	goto	u2780
  3517   0017C8                     u2781:
  3518   0017C8  EFEA  F00B         	goto	l400
  3519   0017CC                     u2780:
  3520   0017CC                     
  3521                           ;MCAL_layer/ADC/adc.c: 25:     {;MCAL_layer/ADC/adc.c: 26:         ret = (STD_ReturnType
      +                          )0x00;
  3522   0017CC  0E00               	movlw	0
  3523   0017CE  6E12               	movwf	ADC_Init@ret^0,c
  3524                           
  3525                           ;MCAL_layer/ADC/adc.c: 27:     }
  3526   0017D0  EF52  F00C         	goto	l4073
  3527   0017D4                     l400:
  3528                           
  3529                           ;MCAL_layer/ADC/adc.c: 29:     {;MCAL_layer/ADC/adc.c: 31:         (ADCON0bits.ADON = 0)
      +                          ;
  3530   0017D4  90C2               	bcf	194,0,c	;volatile
  3531   0017D6                     
  3532                           ;MCAL_layer/ADC/adc.c: 34:         ADCON2bits.ACQT = adc_config->adc_aquizition_time;
  3533   0017D6  500F               	movf	ADC_Init@adc_config^0,w,c
  3534   0017D8  6ED9               	movwf	fsr2l,c
  3535   0017DA  6ADA               	clrf	fsr2h,c
  3536   0017DC  0E04               	movlw	4
  3537   0017DE  26D9               	addwf	fsr2l,f,c
  3538   0017E0  50DF               	movf	indf2,w,c
  3539   0017E2  6E10               	movwf	??_ADC_Init^0,c
  3540   0017E4  4610               	rlncf	??_ADC_Init^0,f,c
  3541   0017E6  4610               	rlncf	??_ADC_Init^0,f,c
  3542   0017E8  4610               	rlncf	??_ADC_Init^0,f,c
  3543   0017EA  50C0               	movf	192,w,c	;volatile
  3544   0017EC  1810               	xorwf	??_ADC_Init^0,w,c
  3545   0017EE  0BC7               	andlw	-57
  3546   0017F0  1810               	xorwf	??_ADC_Init^0,w,c
  3547   0017F2  6EC0               	movwf	192,c	;volatile
  3548                           
  3549                           ;MCAL_layer/ADC/adc.c: 37:         ADCON2bits.ADCS = adc_config->adc_conversion_clock;
  3550   0017F4  500F               	movf	ADC_Init@adc_config^0,w,c
  3551   0017F6  6ED9               	movwf	fsr2l,c
  3552   0017F8  6ADA               	clrf	fsr2h,c
  3553   0017FA  0E03               	movlw	3
  3554   0017FC  26D9               	addwf	fsr2l,f,c
  3555   0017FE  50DF               	movf	indf2,w,c
  3556   001800  6E10               	movwf	??_ADC_Init^0,c
  3557   001802  50C0               	movf	192,w,c	;volatile
  3558   001804  1810               	xorwf	??_ADC_Init^0,w,c
  3559   001806  0BF8               	andlw	-8
  3560   001808  1810               	xorwf	??_ADC_Init^0,w,c
  3561   00180A  6EC0               	movwf	192,c	;volatile
  3562                           
  3563                           ;MCAL_layer/ADC/adc.c: 40:         ADCON0bits.CHS = adc_config->adc_channel_select;
  3564   00180C  500F               	movf	ADC_Init@adc_config^0,w,c
  3565   00180E  6ED9               	movwf	fsr2l,c
  3566   001810  6ADA               	clrf	fsr2h,c
  3567   001812  0E06               	movlw	6
  3568   001814  26D9               	addwf	fsr2l,f,c
  3569   001816  50DF               	movf	indf2,w,c
  3570   001818  6E10               	movwf	??_ADC_Init^0,c
  3571   00181A  4610               	rlncf	??_ADC_Init^0,f,c
  3572   00181C  4610               	rlncf	??_ADC_Init^0,f,c
  3573   00181E  50C2               	movf	194,w,c	;volatile
  3574   001820  1810               	xorwf	??_ADC_Init^0,w,c
  3575   001822  0BC3               	andlw	-61
  3576   001824  1810               	xorwf	??_ADC_Init^0,w,c
  3577   001826  6EC2               	movwf	194,c	;volatile
  3578   001828                     
  3579                           ;MCAL_layer/ADC/adc.c: 41:         ADC_Input_Channel_Port_Configuration(adc_config->adc_
      +                          channel_select);
  3580   001828  500F               	movf	ADC_Init@adc_config^0,w,c
  3581   00182A  6ED9               	movwf	fsr2l,c
  3582   00182C  6ADA               	clrf	fsr2h,c
  3583   00182E  0E06               	movlw	6
  3584   001830  26D9               	addwf	fsr2l,f,c
  3585   001832  50DF               	movf	indf2,w,c
  3586   001834  EC54  F00C         	call	_ADC_Input_Channel_Port_Configuration
  3587   001838                     
  3588                           ;MCAL_layer/ADC/adc.c: 44:         (INTCONbits.PEIE = 1);
  3589   001838  8CF2               	bsf	242,6,c	;volatile
  3590   00183A                     
  3591                           ;MCAL_layer/ADC/adc.c: 45:         (INTCONbits.GIE = 1);
  3592   00183A  8EF2               	bsf	242,7,c	;volatile
  3593   00183C                     
  3594                           ;MCAL_layer/ADC/adc.c: 46:         (PIE1bits.ADIE = 1);
  3595   00183C  8C9D               	bsf	157,6,c	;volatile
  3596   00183E                     
  3597                           ;MCAL_layer/ADC/adc.c: 47:         (PIR1bits.ADIF = 0);
  3598   00183E  9C9E               	bcf	158,6,c	;volatile
  3599                           
  3600                           ;MCAL_layer/ADC/adc.c: 48:         switch(adc_config->priority)
  3601   001840  EF28  F00C         	goto	l4063
  3602   001844                     l403:
  3603                           
  3604                           ;MCAL_layer/ADC/adc.c: 51:                 (IPR1bits.ADIP = 1);
  3605   001844  8C9F               	bsf	159,6,c	;volatile
  3606                           
  3607                           ;MCAL_layer/ADC/adc.c: 52:                 break;
  3608   001846  EF42  F00C         	goto	l4065
  3609   00184A                     l405:
  3610                           
  3611                           ;MCAL_layer/ADC/adc.c: 54:                 (IPR1bits.ADIP = 0);
  3612   00184A  9C9F               	bcf	159,6,c	;volatile
  3613                           
  3614                           ;MCAL_layer/ADC/adc.c: 55:                 break;
  3615   00184C  EF42  F00C         	goto	l4065
  3616   001850                     l4063:
  3617   001850  500F               	movf	ADC_Init@adc_config^0,w,c
  3618   001852  6ED9               	movwf	fsr2l,c
  3619   001854  6ADA               	clrf	fsr2h,c
  3620   001856  0E02               	movlw	2
  3621   001858  26D9               	addwf	fsr2l,f,c
  3622   00185A  50DF               	movf	indf2,w,c
  3623   00185C  6E10               	movwf	??_ADC_Init^0,c
  3624   00185E  6A11               	clrf	(??_ADC_Init+1)^0,c
  3625                           
  3626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 1, Range of values is 0 to 0
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte            4     3 (average)
  3632                           ;	Chosen strategy is simple_byte
  3633   001860  5011               	movf	(??_ADC_Init+1)^0,w,c
  3634   001862  0A00               	xorlw	0	; case 0
  3635   001864  B4D8               	btfsc	status,2,c
  3636   001866  EF37  F00C         	goto	l5313
  3637   00186A  EF42  F00C         	goto	l4065
  3638   00186E                     l5313:
  3639                           
  3640                           ; Switch size 1, requested type "simple"
  3641                           ; Number of cases is 2, Range of values is 0 to 1
  3642                           ; switch strategies available:
  3643                           ; Name         Instructions Cycles
  3644                           ; simple_byte            7     4 (average)
  3645                           ;	Chosen strategy is simple_byte
  3646   00186E  5010               	movf	??_ADC_Init^0,w,c
  3647   001870  0A00               	xorlw	0	; case 0
  3648   001872  B4D8               	btfsc	status,2,c
  3649   001874  EF25  F00C         	goto	l405
  3650   001878  0A01               	xorlw	1	; case 1
  3651   00187A  B4D8               	btfsc	status,2,c
  3652   00187C  EF22  F00C         	goto	l403
  3653   001880  EF42  F00C         	goto	l4065
  3654   001884                     l4065:
  3655                           
  3656                           ;MCAL_layer/ADC/adc.c: 57:         ADC_InterruptHandler = adc_config->ADC_INTERRUPT_HAND
      +                          LER;
  3657   001884  500F               	movf	ADC_Init@adc_config^0,w,c
  3658   001886  6ED9               	movwf	fsr2l,c
  3659   001888  6ADA               	clrf	fsr2h,c
  3660   00188A  CFDE F03F          	movff	postinc2,_ADC_InterruptHandler
  3661   00188E  CFDD F040          	movff	postdec2,_ADC_InterruptHandler+1
  3662   001892                     
  3663                           ;MCAL_layer/ADC/adc.c: 59:         ADC_Result_Format_Configuration(adc_config);
  3664   001892  C00F  F00C         	movff	ADC_Init@adc_config,ADC_Result_Format_Configuration@adc_config
  3665   001896  ECA4  F010         	call	_ADC_Result_Format_Configuration	;wreg free
  3666   00189A                     
  3667                           ;MCAL_layer/ADC/adc.c: 62:         ADC_Voltage_Reference_Configuration(adc_config);
  3668   00189A  C00F  F00C         	movff	ADC_Init@adc_config,ADC_Voltage_Reference_Configuration@adc_config
  3669   00189E  EC69  F010         	call	_ADC_Voltage_Reference_Configuration	;wreg free
  3670   0018A2                     
  3671                           ;MCAL_layer/ADC/adc.c: 64:         (ADCON0bits.ADON = 1);
  3672   0018A2  80C2               	bsf	194,0,c	;volatile
  3673   0018A4                     l4073:
  3674                           
  3675                           ;MCAL_layer/ADC/adc.c: 67:     return ret;
  3676   0018A4  5012               	movf	ADC_Init@ret^0,w,c
  3677   0018A6  0012               	return		;funcret
  3678   0018A8                     __end_of_ADC_Init:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _ADC_Voltage_Reference_Configuration *****************
  3682 ;; Defined at:
  3683 ;;		line 287 in file "MCAL_layer/ADC/adc.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  adc_config      1   11[COMRAM] PTR const struct .
  3686 ;;		 -> adc1(9), 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;Total ram usage:        1 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; Hardware stack levels required when called: 4
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_ADC_Init
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text23
  3713   0020D2                     __ptext23:
  3714                           	callstack 0
  3715   0020D2                     _ADC_Voltage_Reference_Configuration:
  3716                           	callstack 24
  3717   0020D2                     
  3718                           ;MCAL_layer/ADC/adc.c: 287: static __attribute__((inline)) void ADC_Voltage_Reference_Co
      +                          nfiguration(const adc_config_t *adc_config);MCAL_layer/ADC/adc.c: 288: {;MCAL_layer/ADC/
      +                          adc.c: 289:     switch(adc_config->voltage_reference)
  3719   0020D2  EF77  F010         	goto	l3873
  3720   0020D6                     l480:
  3721   0020D6  8AC1               	bsf	193,5,c	;volatile
  3722   0020D8  88C1               	bsf	193,4,c	;volatile
  3723   0020DA  EF87  F010         	goto	l489
  3724   0020DE                     l484:
  3725   0020DE  9AC1               	bcf	193,5,c	;volatile
  3726   0020E0  98C1               	bcf	193,4,c	;volatile
  3727   0020E2  EF87  F010         	goto	l489
  3728   0020E6                     l487:
  3729   0020E6  9AC1               	bcf	193,5,c	;volatile
  3730   0020E8  98C1               	bcf	193,4,c	;volatile
  3731   0020EA  EF87  F010         	goto	l489
  3732   0020EE                     l3873:
  3733   0020EE  500C               	movf	ADC_Voltage_Reference_Configuration@adc_config^0,w,c
  3734   0020F0  6ED9               	movwf	fsr2l,c
  3735   0020F2  6ADA               	clrf	fsr2h,c
  3736   0020F4  0E07               	movlw	7
  3737   0020F6  26D9               	addwf	fsr2l,f,c
  3738   0020F8  50DF               	movf	indf2,w,c
  3739                           
  3740                           ; Switch size 1, requested type "simple"
  3741                           ; Number of cases is 2, Range of values is 0 to 1
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte            7     4 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746   0020FA  0A00               	xorlw	0	; case 0
  3747   0020FC  B4D8               	btfsc	status,2,c
  3748   0020FE  EF6F  F010         	goto	l484
  3749   002102  0A01               	xorlw	1	; case 1
  3750   002104  B4D8               	btfsc	status,2,c
  3751   002106  EF6B  F010         	goto	l480
  3752   00210A  EF73  F010         	goto	l487
  3753   00210E                     l489:
  3754   00210E  0012               	return		;funcret
  3755   002110                     __end_of_ADC_Voltage_Reference_Configuration:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _ADC_Result_Format_Configuration *****************
  3759 ;; Defined at:
  3760 ;;		line 303 in file "MCAL_layer/ADC/adc.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  adc_config      1   11[COMRAM] PTR const struct .
  3763 ;;		 -> adc1(9), 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3775 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;Total ram usage:        1 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; Hardware stack levels required when called: 4
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_ADC_Init
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text24
  3790   002148                     __ptext24:
  3791                           	callstack 0
  3792   002148                     _ADC_Result_Format_Configuration:
  3793                           	callstack 24
  3794   002148                     
  3795                           ;MCAL_layer/ADC/adc.c: 303: static __attribute__((inline)) void ADC_Result_Format_Config
      +                          uration(const adc_config_t *adc_config);MCAL_layer/ADC/adc.c: 304: {;MCAL_layer/ADC/adc.
      +                          c: 305:     switch(adc_config->result_format)
  3796   002148  EFAF  F010         	goto	l3867
  3797   00214C                     l493:
  3798                           
  3799                           ;MCAL_layer/ADC/adc.c: 308:             (ADCON2bits.ADFM = 1);
  3800   00214C  8EC0               	bsf	192,7,c	;volatile
  3801                           
  3802                           ;MCAL_layer/ADC/adc.c: 309:             break;
  3803   00214E  EFBF  F010         	goto	l497
  3804   002152                     l495:
  3805                           
  3806                           ;MCAL_layer/ADC/adc.c: 311:             (ADCON2bits.ADFM = 0);
  3807   002152  9EC0               	bcf	192,7,c	;volatile
  3808                           
  3809                           ;MCAL_layer/ADC/adc.c: 312:             break;
  3810   002154  EFBF  F010         	goto	l497
  3811   002158                     l496:
  3812                           
  3813                           ;MCAL_layer/ADC/adc.c: 314:             (ADCON2bits.ADFM = 1);
  3814   002158  8EC0               	bsf	192,7,c	;volatile
  3815                           
  3816                           ;MCAL_layer/ADC/adc.c: 315:             break;
  3817   00215A  EFBF  F010         	goto	l497
  3818   00215E                     l3867:
  3819   00215E  500C               	movf	ADC_Result_Format_Configuration@adc_config^0,w,c
  3820   002160  6ED9               	movwf	fsr2l,c
  3821   002162  6ADA               	clrf	fsr2h,c
  3822   002164  0E08               	movlw	8
  3823   002166  26D9               	addwf	fsr2l,f,c
  3824   002168  50DF               	movf	indf2,w,c
  3825                           
  3826                           ; Switch size 1, requested type "simple"
  3827                           ; Number of cases is 2, Range of values is 0 to 1
  3828                           ; switch strategies available:
  3829                           ; Name         Instructions Cycles
  3830                           ; simple_byte            7     4 (average)
  3831                           ;	Chosen strategy is simple_byte
  3832   00216A  0A00               	xorlw	0	; case 0
  3833   00216C  B4D8               	btfsc	status,2,c
  3834   00216E  EFA9  F010         	goto	l495
  3835   002172  0A01               	xorlw	1	; case 1
  3836   002174  B4D8               	btfsc	status,2,c
  3837   002176  EFA6  F010         	goto	l493
  3838   00217A  EFAC  F010         	goto	l496
  3839   00217E                     l497:
  3840   00217E  0012               	return		;funcret
  3841   002180                     __end_of_ADC_Result_Format_Configuration:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _ADC_Full_Conversion_Interrupt *****************
  3845 ;; Defined at:
  3846 ;;		line 221 in file "MCAL_layer/ADC/adc.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  adc_config      1   18[COMRAM] PTR const struct .
  3849 ;;		 -> adc1(9), 
  3850 ;;  adc_channel_    1   19[COMRAM] enum E3045
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  ret             1   20[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        3 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 6
  3869 ;; This function calls:
  3870 ;;		_ADC_Select_Channel
  3871 ;;		_ADC_Start_Conversion
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text25
  3878   0021EC                     __ptext25:
  3879                           	callstack 0
  3880   0021EC                     _ADC_Full_Conversion_Interrupt:
  3881                           	callstack 24
  3882   0021EC                     
  3883                           ;MCAL_layer/ADC/adc.c: 225:     if(((void*)0) == adc_config)
  3884   0021EC  5013               	movf	ADC_Full_Conversion_Interrupt@adc_config^0,w,c
  3885   0021EE  A4D8               	btfss	status,2,c
  3886   0021F0  EFFC  F010         	goto	u2951
  3887   0021F4  EFFE  F010         	goto	u2950
  3888   0021F8                     u2951:
  3889   0021F8  EF02  F011         	goto	l4201
  3890   0021FC                     u2950:
  3891   0021FC                     
  3892                           ;MCAL_layer/ADC/adc.c: 226:     {;MCAL_layer/ADC/adc.c: 227:         ret = (STD_ReturnTy
      +                          pe)0x00;
  3893   0021FC  0E00               	movlw	0
  3894   0021FE  6E15               	movwf	ADC_Full_Conversion_Interrupt@ret^0,c
  3895                           
  3896                           ;MCAL_layer/ADC/adc.c: 228:     }
  3897   002200  EF0E  F011         	goto	l4203
  3898   002204                     l4201:
  3899                           
  3900                           ;MCAL_layer/ADC/adc.c: 230:     {;MCAL_layer/ADC/adc.c: 231:         ret = ADC_Select_Ch
      +                          annel(adc_config , adc_channel_select);
  3901   002204  C013  F00F         	movff	ADC_Full_Conversion_Interrupt@adc_config,ADC_Select_Channel@adc_config
  3902   002208  C014  F010         	movff	ADC_Full_Conversion_Interrupt@adc_channel_select,ADC_Select_Channel@adc_channel_s
      +                          elect
  3903   00220C  ECC0  F010         	call	_ADC_Select_Channel	;wreg free
  3904   002210  6E15               	movwf	ADC_Full_Conversion_Interrupt@ret^0,c
  3905                           
  3906                           ;MCAL_layer/ADC/adc.c: 232:         ret = ADC_Start_Conversion(adc_config);
  3907   002212  C013  F00C         	movff	ADC_Full_Conversion_Interrupt@adc_config,ADC_Start_Conversion@adc_config
  3908   002216  EC3F  F011         	call	_ADC_Start_Conversion	;wreg free
  3909   00221A  6E15               	movwf	ADC_Full_Conversion_Interrupt@ret^0,c
  3910   00221C                     l4203:
  3911                           
  3912                           ;MCAL_layer/ADC/adc.c: 235:     return ret;
  3913   00221C  5015               	movf	ADC_Full_Conversion_Interrupt@ret^0,w,c
  3914   00221E  0012               	return		;funcret
  3915   002220                     __end_of_ADC_Full_Conversion_Interrupt:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _ADC_Start_Conversion *****************
  3919 ;; Defined at:
  3920 ;;		line 118 in file "MCAL_layer/ADC/adc.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  adc_config      1   11[COMRAM] PTR const struct .
  3923 ;;		 -> adc1(9), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  ret             1   12[COMRAM] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      unsigned char 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3935 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;Total ram usage:        2 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 4
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_ADC_Full_Conversion_Interrupt
  3946 ;;		_ADC_Full_Conversion_Pending
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text26
  3951   00227E                     __ptext26:
  3952                           	callstack 0
  3953   00227E                     _ADC_Start_Conversion:
  3954                           	callstack 25
  3955   00227E                     
  3956                           ;MCAL_layer/ADC/adc.c: 118: STD_ReturnType ADC_Start_Conversion(const adc_config_t *adc_
      +                          config);MCAL_layer/ADC/adc.c: 119: {;MCAL_layer/ADC/adc.c: 120:     STD_ReturnType ret =
      +                           (STD_ReturnType)0x01;
  3957   00227E  0E01               	movlw	1
  3958   002280  6E0D               	movwf	ADC_Start_Conversion@ret^0,c
  3959                           
  3960                           ;MCAL_layer/ADC/adc.c: 121:     if(((void*)0) == adc_config)
  3961   002282  500C               	movf	ADC_Start_Conversion@adc_config^0,w,c
  3962   002284  A4D8               	btfss	status,2,c
  3963   002286  EF47  F011         	goto	u2801
  3964   00228A  EF49  F011         	goto	u2800
  3965   00228E                     u2801:
  3966   00228E  EF4D  F011         	goto	l419
  3967   002292                     u2800:
  3968   002292                     
  3969                           ;MCAL_layer/ADC/adc.c: 122:     {;MCAL_layer/ADC/adc.c: 123:         ret = (STD_ReturnTy
      +                          pe)0x00;
  3970   002292  0E00               	movlw	0
  3971   002294  6E0D               	movwf	ADC_Start_Conversion@ret^0,c
  3972                           
  3973                           ;MCAL_layer/ADC/adc.c: 124:     }
  3974   002296  EF4E  F011         	goto	l4097
  3975   00229A                     l419:
  3976                           
  3977                           ;MCAL_layer/ADC/adc.c: 126:     {;MCAL_layer/ADC/adc.c: 127:         (ADCON0bits.GO_nDON
      +                          E = 1);
  3978   00229A  82C2               	bsf	194,1,c	;volatile
  3979   00229C                     l4097:
  3980                           
  3981                           ;MCAL_layer/ADC/adc.c: 129:     return ret;
  3982   00229C  500D               	movf	ADC_Start_Conversion@ret^0,w,c
  3983   00229E  0012               	return		;funcret
  3984   0022A0                     __end_of_ADC_Start_Conversion:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _ADC_Select_Channel *****************
  3988 ;; Defined at:
  3989 ;;		line 97 in file "MCAL_layer/ADC/adc.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  adc_config      1   14[COMRAM] PTR const struct .
  3992 ;;		 -> adc1(9), 
  3993 ;;  adc_channel_    1   15[COMRAM] enum E3045
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  ret             1   17[COMRAM] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        4 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 5
  4012 ;; This function calls:
  4013 ;;		_ADC_Input_Channel_Port_Configuration
  4014 ;; This function is called by:
  4015 ;;		_ADC_Full_Conversion_Interrupt
  4016 ;;		_ADC_Full_Conversion_Pending
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text27
  4021   002180                     __ptext27:
  4022                           	callstack 0
  4023   002180                     _ADC_Select_Channel:
  4024                           	callstack 24
  4025   002180                     
  4026                           ;MCAL_layer/ADC/adc.c: 97: STD_ReturnType ADC_Select_Channel(const adc_config_t *adc_con
      +                          fig , adc_channel_select_t adc_channel_select);MCAL_layer/ADC/adc.c: 98: {;MCAL_layer/AD
      +                          C/adc.c: 99:     STD_ReturnType ret = (STD_ReturnType)0x01;
  4027   002180  0E01               	movlw	1
  4028   002182  6E12               	movwf	ADC_Select_Channel@ret^0,c
  4029                           
  4030                           ;MCAL_layer/ADC/adc.c: 100:     if(((void*)0) == adc_config)
  4031   002184  500F               	movf	ADC_Select_Channel@adc_config^0,w,c
  4032   002186  A4D8               	btfss	status,2,c
  4033   002188  EFC8  F010         	goto	u2791
  4034   00218C  EFCA  F010         	goto	u2790
  4035   002190                     u2791:
  4036   002190  EFCE  F010         	goto	l4085
  4037   002194                     u2790:
  4038   002194                     
  4039                           ;MCAL_layer/ADC/adc.c: 101:     {;MCAL_layer/ADC/adc.c: 102:         ret = (STD_ReturnTy
      +                          pe)0x00;
  4040   002194  0E00               	movlw	0
  4041   002196  6E12               	movwf	ADC_Select_Channel@ret^0,c
  4042                           
  4043                           ;MCAL_layer/ADC/adc.c: 103:     }
  4044   002198  EFDA  F010         	goto	l4089
  4045   00219C                     l4085:
  4046                           
  4047                           ;MCAL_layer/ADC/adc.c: 105:     {;MCAL_layer/ADC/adc.c: 107:         ADCON0bits.CHS = ad
      +                          c_channel_select;
  4048   00219C  C010  F011         	movff	ADC_Select_Channel@adc_channel_select,??_ADC_Select_Channel
  4049   0021A0  4611               	rlncf	??_ADC_Select_Channel^0,f,c
  4050   0021A2  4611               	rlncf	??_ADC_Select_Channel^0,f,c
  4051   0021A4  50C2               	movf	194,w,c	;volatile
  4052   0021A6  1811               	xorwf	??_ADC_Select_Channel^0,w,c
  4053   0021A8  0BC3               	andlw	-61
  4054   0021AA  1811               	xorwf	??_ADC_Select_Channel^0,w,c
  4055   0021AC  6EC2               	movwf	194,c	;volatile
  4056   0021AE                     
  4057                           ;MCAL_layer/ADC/adc.c: 108:         ADC_Input_Channel_Port_Configuration(adc_channel_sel
      +                          ect);
  4058   0021AE  5010               	movf	ADC_Select_Channel@adc_channel_select^0,w,c
  4059   0021B0  EC54  F00C         	call	_ADC_Input_Channel_Port_Configuration
  4060   0021B4                     l4089:
  4061                           
  4062                           ;MCAL_layer/ADC/adc.c: 110:     return ret;
  4063   0021B4  5012               	movf	ADC_Select_Channel@ret^0,w,c
  4064   0021B6  0012               	return		;funcret
  4065   0021B8                     __end_of_ADC_Select_Channel:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _ADC_Input_Channel_Port_Configuration *****************
  4069 ;; Defined at:
  4070 ;;		line 240 in file "MCAL_layer/ADC/adc.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  adc_channel_    1    wreg     enum E3045
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  adc_channel_    1   13[COMRAM] enum E3045
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:        3 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 4
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_ADC_Init
  4095 ;;		_ADC_Select_Channel
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text28
  4100   0018A8                     __ptext28:
  4101                           	callstack 0
  4102   0018A8                     _ADC_Input_Channel_Port_Configuration:
  4103                           	callstack 24
  4104                           
  4105                           ;incstack = 0
  4106                           ;ADC_Input_Channel_Port_Configuration@adc_channel_select stored from wreg
  4107   0018A8  6E0E               	movwf	ADC_Input_Channel_Port_Configuration@adc_channel_select^0,c
  4108   0018AA                     
  4109                           ;MCAL_layer/ADC/adc.c: 240: static __attribute__((inline)) void ADC_Input_Channel_Port_C
      +                          onfiguration(adc_channel_select_t adc_channel_select);MCAL_layer/ADC/adc.c: 241: {;MCAL_
      +                          layer/ADC/adc.c: 242:     switch(adc_channel_select)
  4110   0018AA  EF7E  F00C         	goto	l3857
  4111   0018AE                     l3829:
  4112                           
  4113                           ;MCAL_layer/ADC/adc.c: 245:             (TRISA |= ((uint8)1 << 0x0));
  4114   0018AE  8092               	bsf	146,0,c	;volatile
  4115                           
  4116                           ;MCAL_layer/ADC/adc.c: 246:             break;
  4117   0018B0  EFBF  F00C         	goto	l475
  4118   0018B4                     l3831:
  4119                           
  4120                           ;MCAL_layer/ADC/adc.c: 248:             (TRISA |= ((uint8)1 << 0x1));
  4121   0018B4  8292               	bsf	146,1,c	;volatile
  4122                           
  4123                           ;MCAL_layer/ADC/adc.c: 249:             break;
  4124   0018B6  EFBF  F00C         	goto	l475
  4125   0018BA                     l3833:
  4126                           
  4127                           ;MCAL_layer/ADC/adc.c: 251:             (TRISA |= ((uint8)1 << 0x2));
  4128   0018BA  8492               	bsf	146,2,c	;volatile
  4129                           
  4130                           ;MCAL_layer/ADC/adc.c: 252:             break;
  4131   0018BC  EFBF  F00C         	goto	l475
  4132   0018C0                     l3835:
  4133                           
  4134                           ;MCAL_layer/ADC/adc.c: 254:             (TRISA |= ((uint8)1 << 0x3));
  4135   0018C0  8692               	bsf	146,3,c	;volatile
  4136                           
  4137                           ;MCAL_layer/ADC/adc.c: 255:             break;
  4138   0018C2  EFBF  F00C         	goto	l475
  4139   0018C6                     l3837:
  4140                           
  4141                           ;MCAL_layer/ADC/adc.c: 257:             (TRISA |= ((uint8)1 << 0x5));
  4142   0018C6  8A92               	bsf	146,5,c	;volatile
  4143                           
  4144                           ;MCAL_layer/ADC/adc.c: 258:             break;
  4145   0018C8  EFBF  F00C         	goto	l475
  4146   0018CC                     l3839:
  4147                           
  4148                           ;MCAL_layer/ADC/adc.c: 260:             (TRISE |= ((uint8)1 << 0x0));
  4149   0018CC  8096               	bsf	150,0,c	;volatile
  4150                           
  4151                           ;MCAL_layer/ADC/adc.c: 261:             break;
  4152   0018CE  EFBF  F00C         	goto	l475
  4153   0018D2                     l3841:
  4154                           
  4155                           ;MCAL_layer/ADC/adc.c: 263:             (TRISE |= ((uint8)1 << 0x1));
  4156   0018D2  8296               	bsf	150,1,c	;volatile
  4157                           
  4158                           ;MCAL_layer/ADC/adc.c: 264:             break;
  4159   0018D4  EFBF  F00C         	goto	l475
  4160   0018D8                     l3843:
  4161                           
  4162                           ;MCAL_layer/ADC/adc.c: 266:             (TRISE |= ((uint8)1 << 0x2));
  4163   0018D8  8496               	bsf	150,2,c	;volatile
  4164                           
  4165                           ;MCAL_layer/ADC/adc.c: 267:             break;
  4166   0018DA  EFBF  F00C         	goto	l475
  4167   0018DE                     l3845:
  4168                           
  4169                           ;MCAL_layer/ADC/adc.c: 269:             (TRISB |= ((uint8)1 << 0x2));
  4170   0018DE  8493               	bsf	147,2,c	;volatile
  4171                           
  4172                           ;MCAL_layer/ADC/adc.c: 270:             break;
  4173   0018E0  EFBF  F00C         	goto	l475
  4174   0018E4                     l3847:
  4175                           
  4176                           ;MCAL_layer/ADC/adc.c: 272:             (TRISB |= ((uint8)1 << 0x3));
  4177   0018E4  8693               	bsf	147,3,c	;volatile
  4178                           
  4179                           ;MCAL_layer/ADC/adc.c: 273:             break;
  4180   0018E6  EFBF  F00C         	goto	l475
  4181   0018EA                     l3849:
  4182                           
  4183                           ;MCAL_layer/ADC/adc.c: 275:             (TRISB |= ((uint8)1 << 0x1));
  4184   0018EA  8293               	bsf	147,1,c	;volatile
  4185                           
  4186                           ;MCAL_layer/ADC/adc.c: 276:             break;
  4187   0018EC  EFBF  F00C         	goto	l475
  4188   0018F0                     l3851:
  4189                           
  4190                           ;MCAL_layer/ADC/adc.c: 278:             (TRISB |= ((uint8)1 << 0x4));
  4191   0018F0  8893               	bsf	147,4,c	;volatile
  4192                           
  4193                           ;MCAL_layer/ADC/adc.c: 279:             break;
  4194   0018F2  EFBF  F00C         	goto	l475
  4195   0018F6                     l3853:
  4196                           
  4197                           ;MCAL_layer/ADC/adc.c: 281:             (TRISB |= ((uint8)1 << 0x0));
  4198   0018F6  8093               	bsf	147,0,c	;volatile
  4199                           
  4200                           ;MCAL_layer/ADC/adc.c: 282:             break;
  4201   0018F8  EFBF  F00C         	goto	l475
  4202   0018FC                     l3857:
  4203   0018FC  500E               	movf	ADC_Input_Channel_Port_Configuration@adc_channel_select^0,w,c
  4204   0018FE  6E0C               	movwf	??_ADC_Input_Channel_Port_Configuration^0,c
  4205   001900  6A0D               	clrf	(??_ADC_Input_Channel_Port_Configuration+1)^0,c
  4206                           
  4207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4208                           ; Switch size 1, requested type "simple"
  4209                           ; Number of cases is 1, Range of values is 0 to 0
  4210                           ; switch strategies available:
  4211                           ; Name         Instructions Cycles
  4212                           ; simple_byte            4     3 (average)
  4213                           ;	Chosen strategy is simple_byte
  4214   001902  500D               	movf	(??_ADC_Input_Channel_Port_Configuration+1)^0,w,c
  4215   001904  0A00               	xorlw	0	; case 0
  4216   001906  B4D8               	btfsc	status,2,c
  4217   001908  EF88  F00C         	goto	l5315
  4218   00190C  EFBF  F00C         	goto	l475
  4219   001910                     l5315:
  4220                           
  4221                           ; Switch size 1, requested type "simple"
  4222                           ; Number of cases is 13, Range of values is 0 to 12
  4223                           ; switch strategies available:
  4224                           ; Name         Instructions Cycles
  4225                           ; simple_byte           40    21 (average)
  4226                           ;	Chosen strategy is simple_byte
  4227   001910  500C               	movf	??_ADC_Input_Channel_Port_Configuration^0,w,c
  4228   001912  0A00               	xorlw	0	; case 0
  4229   001914  B4D8               	btfsc	status,2,c
  4230   001916  EF57  F00C         	goto	l3829
  4231   00191A  0A01               	xorlw	1	; case 1
  4232   00191C  B4D8               	btfsc	status,2,c
  4233   00191E  EF5A  F00C         	goto	l3831
  4234   001922  0A03               	xorlw	3	; case 2
  4235   001924  B4D8               	btfsc	status,2,c
  4236   001926  EF5D  F00C         	goto	l3833
  4237   00192A  0A01               	xorlw	1	; case 3
  4238   00192C  B4D8               	btfsc	status,2,c
  4239   00192E  EF60  F00C         	goto	l3835
  4240   001932  0A07               	xorlw	7	; case 4
  4241   001934  B4D8               	btfsc	status,2,c
  4242   001936  EF63  F00C         	goto	l3837
  4243   00193A  0A01               	xorlw	1	; case 5
  4244   00193C  B4D8               	btfsc	status,2,c
  4245   00193E  EF66  F00C         	goto	l3839
  4246   001942  0A03               	xorlw	3	; case 6
  4247   001944  B4D8               	btfsc	status,2,c
  4248   001946  EF69  F00C         	goto	l3841
  4249   00194A  0A01               	xorlw	1	; case 7
  4250   00194C  B4D8               	btfsc	status,2,c
  4251   00194E  EF6C  F00C         	goto	l3843
  4252   001952  0A0F               	xorlw	15	; case 8
  4253   001954  B4D8               	btfsc	status,2,c
  4254   001956  EF6F  F00C         	goto	l3845
  4255   00195A  0A01               	xorlw	1	; case 9
  4256   00195C  B4D8               	btfsc	status,2,c
  4257   00195E  EF72  F00C         	goto	l3847
  4258   001962  0A03               	xorlw	3	; case 10
  4259   001964  B4D8               	btfsc	status,2,c
  4260   001966  EF75  F00C         	goto	l3849
  4261   00196A  0A01               	xorlw	1	; case 11
  4262   00196C  B4D8               	btfsc	status,2,c
  4263   00196E  EF78  F00C         	goto	l3851
  4264   001972  0A07               	xorlw	7	; case 12
  4265   001974  B4D8               	btfsc	status,2,c
  4266   001976  EF7B  F00C         	goto	l3853
  4267   00197A  EFBF  F00C         	goto	l475
  4268   00197E                     l475:
  4269   00197E  0012               	return		;funcret
  4270   001980                     __end_of_ADC_Input_Channel_Port_Configuration:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _Interrupt_Manager *****************
  4274 ;; Defined at:
  4275 ;;		line 52 in file "MCAL_layer/Interrupt/interrupt_manager.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;Total ram usage:        4 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 3
  4296 ;; This function calls:
  4297 ;;		_ADC_ISR
  4298 ;;		_INT0_ISR
  4299 ;;		_INT1_ISR
  4300 ;;		_INT2_ISR
  4301 ;;		_RB4_ISR
  4302 ;;		_RB5_ISR
  4303 ;;		_RB6_ISR
  4304 ;;		_RB7_ISR
  4305 ;; This function is called by:
  4306 ;;		Interrupt level 2
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	intcode
  4311   000008                     __pintcode:
  4312                           	callstack 0
  4313   000008                     _Interrupt_Manager:
  4314                           	callstack 21
  4315                           
  4316                           ;incstack = 0
  4317   000008  8272               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4318   00000A  EDF4  F008         	call	int_func,f	;refresh shadow registers
  4319                           
  4320                           	psect	intcode_body
  4321   0011E8                     __pintcode_body:
  4322                           	callstack 21
  4323   0011E8                     int_func:
  4324                           	callstack 21
  4325   0011E8  0006               	pop		; remove dummy address from shadow register refresh
  4326   0011EA  CFFA F008          	movff	pclath,??_Interrupt_Manager
  4327   0011EE  CFFB F009          	movff	pclatu,??_Interrupt_Manager+1
  4328   0011F2  CFD9 F00A          	movff	fsr2l,??_Interrupt_Manager+2
  4329   0011F6  CFDA F00B          	movff	fsr2h,??_Interrupt_Manager+3
  4330   0011FA                     
  4331                           ;MCAL_layer/Interrupt/interrupt_manager.c: 55:     if((1 == PIE1bits.ADIE ) && (1 == PIR
      +                          1bits.ADIF))
  4332   0011FA  AC9D               	btfss	157,6,c	;volatile
  4333   0011FC  EF02  F009         	goto	i2u382_41
  4334   001200  EF04  F009         	goto	i2u382_40
  4335   001204                     i2u382_41:
  4336   001204  EF0D  F009         	goto	i2l4915
  4337   001208                     i2u382_40:
  4338   001208  AC9E               	btfss	158,6,c	;volatile
  4339   00120A  EF09  F009         	goto	i2u383_41
  4340   00120E  EF0B  F009         	goto	i2u383_40
  4341   001212                     i2u383_41:
  4342   001212  EF0D  F009         	goto	i2l4915
  4343   001216                     i2u383_40:
  4344   001216                     
  4345                           ;MCAL_layer/Interrupt/interrupt_manager.c: 56:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 57:         ADC_ISR();
  4346   001216  EC28  F011         	call	_ADC_ISR	;wreg free
  4347   00121A                     i2l4915:
  4348                           
  4349                           ;MCAL_layer/Interrupt/interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  4350   00121A  A6F2               	btfss	242,3,c	;volatile
  4351   00121C  EF12  F009         	goto	i2u384_41
  4352   001220  EF14  F009         	goto	i2u384_40
  4353   001224                     i2u384_41:
  4354   001224  EF2D  F009         	goto	i2l4927
  4355   001228                     i2u384_40:
  4356   001228  A0F2               	btfss	242,0,c	;volatile
  4357   00122A  EF19  F009         	goto	i2u385_41
  4358   00122E  EF1B  F009         	goto	i2u385_40
  4359   001232                     i2u385_41:
  4360   001232  EF2D  F009         	goto	i2l4927
  4361   001236                     i2u385_40:
  4362   001236                     
  4363                           ;MCAL_layer/Interrupt/interrupt_manager.c: 62:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 63:         if(PORTBbits.RB5 == GPIO_HIGH)
  4364   001236  AA81               	btfss	129,5,c	;volatile
  4365   001238  EF20  F009         	goto	i2u386_41
  4366   00123C  EF22  F009         	goto	i2u386_40
  4367   001240                     i2u386_41:
  4368   001240  EF24  F009         	goto	i2l4923
  4369   001244                     i2u386_40:
  4370   001244                     
  4371                           ;MCAL_layer/Interrupt/interrupt_manager.c: 64:         RB5_ISR();
  4372   001244  EC76  F011         	call	_RB5_ISR	;wreg free
  4373   001248                     i2l4923:
  4374                           
  4375                           ;MCAL_layer/Interrupt/interrupt_manager.c: 65:         if(PORTBbits.RB5 == GPIO_LOW)
  4376   001248  BA81               	btfsc	129,5,c	;volatile
  4377   00124A  EF29  F009         	goto	i2u387_41
  4378   00124E  EF2B  F009         	goto	i2u387_40
  4379   001252                     i2u387_41:
  4380   001252  EF2D  F009         	goto	i2l4927
  4381   001256                     i2u387_40:
  4382   001256                     
  4383                           ;MCAL_layer/Interrupt/interrupt_manager.c: 66:         RB5_ISR();
  4384   001256  EC76  F011         	call	_RB5_ISR	;wreg free
  4385   00125A                     i2l4927:
  4386                           
  4387                           ;MCAL_layer/Interrupt/interrupt_manager.c: 69:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  4388   00125A  A6F2               	btfss	242,3,c	;volatile
  4389   00125C  EF32  F009         	goto	i2u388_41
  4390   001260  EF34  F009         	goto	i2u388_40
  4391   001264                     i2u388_41:
  4392   001264  EF4D  F009         	goto	i2l4939
  4393   001268                     i2u388_40:
  4394   001268  A0F2               	btfss	242,0,c	;volatile
  4395   00126A  EF39  F009         	goto	i2u389_41
  4396   00126E  EF3B  F009         	goto	i2u389_40
  4397   001272                     i2u389_41:
  4398   001272  EF4D  F009         	goto	i2l4939
  4399   001276                     i2u389_40:
  4400   001276                     
  4401                           ;MCAL_layer/Interrupt/interrupt_manager.c: 70:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 71:         if(PORTBbits.RB4 == GPIO_HIGH)
  4402   001276  A881               	btfss	129,4,c	;volatile
  4403   001278  EF40  F009         	goto	i2u390_41
  4404   00127C  EF42  F009         	goto	i2u390_40
  4405   001280                     i2u390_41:
  4406   001280  EF44  F009         	goto	i2l4935
  4407   001284                     i2u390_40:
  4408   001284                     
  4409                           ;MCAL_layer/Interrupt/interrupt_manager.c: 72:         RB4_ISR();
  4410   001284  EC78  F011         	call	_RB4_ISR	;wreg free
  4411   001288                     i2l4935:
  4412                           
  4413                           ;MCAL_layer/Interrupt/interrupt_manager.c: 73:         if(PORTBbits.RB4 == GPIO_LOW)
  4414   001288  B881               	btfsc	129,4,c	;volatile
  4415   00128A  EF49  F009         	goto	i2u391_41
  4416   00128E  EF4B  F009         	goto	i2u391_40
  4417   001292                     i2u391_41:
  4418   001292  EF4D  F009         	goto	i2l4939
  4419   001296                     i2u391_40:
  4420   001296                     
  4421                           ;MCAL_layer/Interrupt/interrupt_manager.c: 74:         RB4_ISR();
  4422   001296  EC78  F011         	call	_RB4_ISR	;wreg free
  4423   00129A                     i2l4939:
  4424                           
  4425                           ;MCAL_layer/Interrupt/interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  4426   00129A  A6F2               	btfss	242,3,c	;volatile
  4427   00129C  EF52  F009         	goto	i2u392_41
  4428   0012A0  EF54  F009         	goto	i2u392_40
  4429   0012A4                     i2u392_41:
  4430   0012A4  EF6D  F009         	goto	i2l4951
  4431   0012A8                     i2u392_40:
  4432   0012A8  A0F2               	btfss	242,0,c	;volatile
  4433   0012AA  EF59  F009         	goto	i2u393_41
  4434   0012AE  EF5B  F009         	goto	i2u393_40
  4435   0012B2                     i2u393_41:
  4436   0012B2  EF6D  F009         	goto	i2l4951
  4437   0012B6                     i2u393_40:
  4438   0012B6                     
  4439                           ;MCAL_layer/Interrupt/interrupt_manager.c: 79:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 80:         if(PORTBbits.RB6 == GPIO_HIGH)
  4440   0012B6  AC81               	btfss	129,6,c	;volatile
  4441   0012B8  EF60  F009         	goto	i2u394_41
  4442   0012BC  EF62  F009         	goto	i2u394_40
  4443   0012C0                     i2u394_41:
  4444   0012C0  EF64  F009         	goto	i2l4947
  4445   0012C4                     i2u394_40:
  4446   0012C4                     
  4447                           ;MCAL_layer/Interrupt/interrupt_manager.c: 81:         RB6_ISR();
  4448   0012C4  EC74  F011         	call	_RB6_ISR	;wreg free
  4449   0012C8                     i2l4947:
  4450                           
  4451                           ;MCAL_layer/Interrupt/interrupt_manager.c: 82:         if(PORTBbits.RB6== GPIO_LOW)
  4452   0012C8  BC81               	btfsc	129,6,c	;volatile
  4453   0012CA  EF69  F009         	goto	i2u395_41
  4454   0012CE  EF6B  F009         	goto	i2u395_40
  4455   0012D2                     i2u395_41:
  4456   0012D2  EF6D  F009         	goto	i2l4951
  4457   0012D6                     i2u395_40:
  4458   0012D6                     
  4459                           ;MCAL_layer/Interrupt/interrupt_manager.c: 83:         RB6_ISR();
  4460   0012D6  EC74  F011         	call	_RB6_ISR	;wreg free
  4461   0012DA                     i2l4951:
  4462                           
  4463                           ;MCAL_layer/Interrupt/interrupt_manager.c: 86:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  4464   0012DA  A6F2               	btfss	242,3,c	;volatile
  4465   0012DC  EF72  F009         	goto	i2u396_41
  4466   0012E0  EF74  F009         	goto	i2u396_40
  4467   0012E4                     i2u396_41:
  4468   0012E4  EF8D  F009         	goto	i2l4963
  4469   0012E8                     i2u396_40:
  4470   0012E8  A0F2               	btfss	242,0,c	;volatile
  4471   0012EA  EF79  F009         	goto	i2u397_41
  4472   0012EE  EF7B  F009         	goto	i2u397_40
  4473   0012F2                     i2u397_41:
  4474   0012F2  EF8D  F009         	goto	i2l4963
  4475   0012F6                     i2u397_40:
  4476   0012F6                     
  4477                           ;MCAL_layer/Interrupt/interrupt_manager.c: 87:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 88:         if(PORTBbits.RB7 == GPIO_HIGH)
  4478   0012F6  AE81               	btfss	129,7,c	;volatile
  4479   0012F8  EF80  F009         	goto	i2u398_41
  4480   0012FC  EF82  F009         	goto	i2u398_40
  4481   001300                     i2u398_41:
  4482   001300  EF84  F009         	goto	i2l4959
  4483   001304                     i2u398_40:
  4484   001304                     
  4485                           ;MCAL_layer/Interrupt/interrupt_manager.c: 89:         RB7_ISR();
  4486   001304  EC72  F011         	call	_RB7_ISR	;wreg free
  4487   001308                     i2l4959:
  4488                           
  4489                           ;MCAL_layer/Interrupt/interrupt_manager.c: 90:         if(PORTBbits.RB7 == GPIO_LOW)
  4490   001308  BE81               	btfsc	129,7,c	;volatile
  4491   00130A  EF89  F009         	goto	i2u399_41
  4492   00130E  EF8B  F009         	goto	i2u399_40
  4493   001312                     i2u399_41:
  4494   001312  EF8D  F009         	goto	i2l4963
  4495   001316                     i2u399_40:
  4496   001316                     
  4497                           ;MCAL_layer/Interrupt/interrupt_manager.c: 91:         RB7_ISR();
  4498   001316  EC72  F011         	call	_RB7_ISR	;wreg free
  4499   00131A                     i2l4963:
  4500                           
  4501                           ;MCAL_layer/Interrupt/interrupt_manager.c: 94:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF ))
  4502   00131A  A8F2               	btfss	242,4,c	;volatile
  4503   00131C  EF92  F009         	goto	i2u400_41
  4504   001320  EF94  F009         	goto	i2u400_40
  4505   001324                     i2u400_41:
  4506   001324  EF9D  F009         	goto	i2l4969
  4507   001328                     i2u400_40:
  4508   001328  A2F2               	btfss	242,1,c	;volatile
  4509   00132A  EF99  F009         	goto	i2u401_41
  4510   00132E  EF9B  F009         	goto	i2u401_40
  4511   001332                     i2u401_41:
  4512   001332  EF9D  F009         	goto	i2l4969
  4513   001336                     i2u401_40:
  4514   001336                     
  4515                           ;MCAL_layer/Interrupt/interrupt_manager.c: 95:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 96:         INT0_ISR();
  4516   001336  EC7E  F011         	call	_INT0_ISR	;wreg free
  4517   00133A                     i2l4969:
  4518                           
  4519                           ;MCAL_layer/Interrupt/interrupt_manager.c: 99:     if((1 == INTCON3bits.INT1IE) && (1 ==
      +                           INTCON3bits.INT1IF ))
  4520   00133A  A6F0               	btfss	240,3,c	;volatile
  4521   00133C  EFA2  F009         	goto	i2u402_41
  4522   001340  EFA4  F009         	goto	i2u402_40
  4523   001344                     i2u402_41:
  4524   001344  EFAD  F009         	goto	i2l4975
  4525   001348                     i2u402_40:
  4526   001348  A0F0               	btfss	240,0,c	;volatile
  4527   00134A  EFA9  F009         	goto	i2u403_41
  4528   00134E  EFAB  F009         	goto	i2u403_40
  4529   001352                     i2u403_41:
  4530   001352  EFAD  F009         	goto	i2l4975
  4531   001356                     i2u403_40:
  4532   001356                     
  4533                           ;MCAL_layer/Interrupt/interrupt_manager.c: 100:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 101:         INT1_ISR();
  4534   001356  EC7C  F011         	call	_INT1_ISR	;wreg free
  4535   00135A                     i2l4975:
  4536                           
  4537                           ;MCAL_layer/Interrupt/interrupt_manager.c: 104:     if((1 == INTCON3bits.INT2IE) && (1 =
      +                          = INTCON3bits.INT2IF ))
  4538   00135A  A8F0               	btfss	240,4,c	;volatile
  4539   00135C  EFB2  F009         	goto	i2u404_41
  4540   001360  EFB4  F009         	goto	i2u404_40
  4541   001364                     i2u404_41:
  4542   001364  EFBD  F009         	goto	i2l924
  4543   001368                     i2u404_40:
  4544   001368  A2F0               	btfss	240,1,c	;volatile
  4545   00136A  EFB9  F009         	goto	i2u405_41
  4546   00136E  EFBB  F009         	goto	i2u405_40
  4547   001372                     i2u405_41:
  4548   001372  EFBD  F009         	goto	i2l924
  4549   001376                     i2u405_40:
  4550   001376                     
  4551                           ;MCAL_layer/Interrupt/interrupt_manager.c: 105:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 106:         INT2_ISR();
  4552   001376  EC7A  F011         	call	_INT2_ISR	;wreg free
  4553   00137A                     i2l924:
  4554   00137A  C00B  FFDA         	movff	??_Interrupt_Manager+3,fsr2h
  4555   00137E  C00A  FFD9         	movff	??_Interrupt_Manager+2,fsr2l
  4556   001382  C009  FFFB         	movff	??_Interrupt_Manager+1,pclatu
  4557   001386  C008  FFFA         	movff	??_Interrupt_Manager,pclath
  4558   00138A  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4559   00138C  0011               	retfie		f
  4560   00138E                     __end_of_Interrupt_Manager:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _RB7_ISR *****************
  4564 ;; Defined at:
  4565 ;;		line 764 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		None
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_Interrupt_Manager
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text30
  4593   0022E4                     __ptext30:
  4594                           	callstack 0
  4595   0022E4                     _RB7_ISR:
  4596                           	callstack 23
  4597   0022E4                     
  4598                           ;MCAL_layer/Interrupt/external_interrupt.c: 767:     (INTCONbits.RBIF = 0);
  4599   0022E4  90F2               	bcf	242,0,c	;volatile
  4600   0022E6  0012               	return		;funcret
  4601   0022E8                     __end_of_RB7_ISR:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _RB6_ISR *****************
  4605 ;; Defined at:
  4606 ;;		line 749 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		None
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_Interrupt_Manager
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text31
  4634   0022E8                     __ptext31:
  4635                           	callstack 0
  4636   0022E8                     _RB6_ISR:
  4637                           	callstack 23
  4638   0022E8                     
  4639                           ;MCAL_layer/Interrupt/external_interrupt.c: 752:     (INTCONbits.RBIF = 0);
  4640   0022E8  90F2               	bcf	242,0,c	;volatile
  4641   0022EA  0012               	return		;funcret
  4642   0022EC                     __end_of_RB6_ISR:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _RB5_ISR *****************
  4646 ;; Defined at:
  4647 ;;		line 734 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		None
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_Interrupt_Manager
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text32
  4675   0022EC                     __ptext32:
  4676                           	callstack 0
  4677   0022EC                     _RB5_ISR:
  4678                           	callstack 23
  4679   0022EC                     
  4680                           ;MCAL_layer/Interrupt/external_interrupt.c: 737:     (INTCONbits.RBIF = 0);
  4681   0022EC  90F2               	bcf	242,0,c	;volatile
  4682   0022EE  0012               	return		;funcret
  4683   0022F0                     __end_of_RB5_ISR:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _RB4_ISR *****************
  4687 ;; Defined at:
  4688 ;;		line 720 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		None
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_Interrupt_Manager
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text33
  4716   0022F0                     __ptext33:
  4717                           	callstack 0
  4718   0022F0                     _RB4_ISR:
  4719                           	callstack 23
  4720   0022F0                     
  4721                           ;MCAL_layer/Interrupt/external_interrupt.c: 723:     (INTCONbits.RBIF = 0);
  4722   0022F0  90F2               	bcf	242,0,c	;volatile
  4723   0022F2  0012               	return		;funcret
  4724   0022F4                     __end_of_RB4_ISR:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _INT2_ISR *****************
  4728 ;; Defined at:
  4729 ;;		line 706 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		None
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_Interrupt_Manager
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text34
  4757   0022F4                     __ptext34:
  4758                           	callstack 0
  4759   0022F4                     _INT2_ISR:
  4760                           	callstack 23
  4761   0022F4                     
  4762                           ;MCAL_layer/Interrupt/external_interrupt.c: 709:     (INTCON3bits.INT2IF = 0);
  4763   0022F4  92F0               	bcf	240,1,c	;volatile
  4764   0022F6  0012               	return		;funcret
  4765   0022F8                     __end_of_INT2_ISR:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _INT1_ISR *****************
  4769 ;; Defined at:
  4770 ;;		line 692 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		None
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_Interrupt_Manager
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text35
  4798   0022F8                     __ptext35:
  4799                           	callstack 0
  4800   0022F8                     _INT1_ISR:
  4801                           	callstack 23
  4802   0022F8                     
  4803                           ;MCAL_layer/Interrupt/external_interrupt.c: 695:     (INTCON3bits.INT1IF = 0);
  4804   0022F8  90F0               	bcf	240,0,c	;volatile
  4805   0022FA  0012               	return		;funcret
  4806   0022FC                     __end_of_INT1_ISR:
  4807                           	callstack 0
  4808                           
  4809 ;; *************** function _INT0_ISR *****************
  4810 ;; Defined at:
  4811 ;;		line 678 in file "MCAL_layer/Interrupt/external_interrupt.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		None
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_Interrupt_Manager
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text36
  4839   0022FC                     __ptext36:
  4840                           	callstack 0
  4841   0022FC                     _INT0_ISR:
  4842                           	callstack 23
  4843   0022FC                     
  4844                           ;MCAL_layer/Interrupt/external_interrupt.c: 681:     (INTCONbits.INT0IF = 0);
  4845   0022FC  92F2               	bcf	242,1,c	;volatile
  4846   0022FE  0012               	return		;funcret
  4847   002300                     __end_of_INT0_ISR:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _ADC_ISR *****************
  4851 ;; Defined at:
  4852 ;;		line 319 in file "MCAL_layer/ADC/adc.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 2
  4873 ;; This function calls:
  4874 ;;		NULL
  4875 ;;		_ADC_Interrupt_function
  4876 ;; This function is called by:
  4877 ;;		_Interrupt_Manager
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text37
  4882   002250                     __ptext37:
  4883                           	callstack 0
  4884   002250                     _ADC_ISR:
  4885                           	callstack 21
  4886   002250                     
  4887                           ;MCAL_layer/ADC/adc.c: 321:     (PIR1bits.ADIF = 0);
  4888   002250  9C9E               	bcf	158,6,c	;volatile
  4889   002252                     
  4890                           ;MCAL_layer/ADC/adc.c: 322:     if(ADC_InterruptHandler)
  4891   002252  503F               	movf	_ADC_InterruptHandler^0,w,c
  4892   002254  1040               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  4893   002256  B4D8               	btfsc	status,2,c
  4894   002258  EF30  F011         	goto	i2u296_41
  4895   00225C  EF32  F011         	goto	i2u296_40
  4896   002260                     i2u296_41:
  4897   002260  EF3E  F011         	goto	i2l501
  4898   002264                     i2u296_40:
  4899   002264                     
  4900                           ;MCAL_layer/ADC/adc.c: 323:     {;MCAL_layer/ADC/adc.c: 324:         ADC_InterruptHandle
      +                          r();
  4901   002264  D802               	call	i2u297_48
  4902   002266  EF3E  F011         	goto	i2u297_49
  4903   00226A                     i2u297_48:
  4904   00226A  0005               	push	
  4905   00226C  6EFA               	movwf	pclath,c
  4906   00226E  503F               	movf	_ADC_InterruptHandler^0,w,c
  4907   002270  6EFD               	movwf	tosl,c
  4908   002272  5040               	movf	(_ADC_InterruptHandler+1)^0,w,c
  4909   002274  6EFE               	movwf	tosh,c
  4910   002276  6AFF               	clrf	tosu,c
  4911   002278  50FA               	movf	pclath,w,c
  4912   00227A  0012               	return		;indir
  4913   00227C                     i2u297_49:
  4914   00227C                     i2l501:
  4915   00227C  0012               	return		;funcret
  4916   00227E                     __end_of_ADC_ISR:
  4917                           	callstack 0
  4918                           
  4919 ;; *************** function _ADC_Interrupt_function *****************
  4920 ;; Defined at:
  4921 ;;		line 68 in file "application.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;		None
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;Total ram usage:        0 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; Hardware stack levels required when called: 1
  4942 ;; This function calls:
  4943 ;;		_ADC_Get_Conversion_Result
  4944 ;; This function is called by:
  4945 ;;		_ADC_ISR
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text38
  4950   002004                     __ptext38:
  4951                           	callstack 0
  4952   002004                     _ADC_Interrupt_function:
  4953                           	callstack 21
  4954   002004                     
  4955                           ;application.c: 70:     if (0 == flag)
  4956   002004  5042               	movf	_flag^0,w,c
  4957   002006  A4D8               	btfss	status,2,c
  4958   002008  EF08  F010         	goto	i2u281_41
  4959   00200C  EF0A  F010         	goto	i2u281_40
  4960   002010                     i2u281_41:
  4961   002010  EF15  F010         	goto	i2l4107
  4962   002014                     i2u281_40:
  4963   002014                     
  4964                           ;application.c: 71:     {;application.c: 72:         ret = ADC_Get_Conversion_Result(&ad
      +                          c1, &res_1);
  4965   002014  0EC2               	movlw	low _adc1
  4966   002016  6E01               	movwf	ADC_Get_Conversion_Result@adc_config^0,c
  4967   002018  0E55               	movlw	low _res_1
  4968   00201A  6E02               	movwf	ADC_Get_Conversion_Result@conversion_result^0,c
  4969   00201C  ECC0  F00C         	call	_ADC_Get_Conversion_Result	;wreg free
  4970   002020  6E71               	movwf	_ret^0,c
  4971   002022                     
  4972                           ;application.c: 73:         flag=1;
  4973   002022  0E01               	movlw	1
  4974   002024  6E42               	movwf	_flag^0,c
  4975                           
  4976                           ;application.c: 74:     }
  4977   002026  EF26  F010         	goto	i2l976
  4978   00202A                     i2l4107:
  4979   00202A  0442               	decf	_flag^0,w,c
  4980   00202C  A4D8               	btfss	status,2,c
  4981   00202E  EF1B  F010         	goto	i2u282_41
  4982   002032  EF1D  F010         	goto	i2u282_40
  4983   002036                     i2u282_41:
  4984   002036  EF26  F010         	goto	i2l976
  4985   00203A                     i2u282_40:
  4986   00203A                     
  4987                           ;application.c: 76:     {;application.c: 77:         ret = ADC_Get_Conversion_Result(&ad
      +                          c1, &res_2);
  4988   00203A  0EC2               	movlw	low _adc1
  4989   00203C  6E01               	movwf	ADC_Get_Conversion_Result@adc_config^0,c
  4990   00203E  0E53               	movlw	low _res_2
  4991   002040  6E02               	movwf	ADC_Get_Conversion_Result@conversion_result^0,c
  4992   002042  ECC0  F00C         	call	_ADC_Get_Conversion_Result	;wreg free
  4993   002046  6E71               	movwf	_ret^0,c
  4994   002048                     
  4995                           ;application.c: 78:         flag=0;
  4996   002048  0E00               	movlw	0
  4997   00204A  6E42               	movwf	_flag^0,c
  4998   00204C                     i2l976:
  4999   00204C  0012               	return		;funcret
  5000   00204E                     __end_of_ADC_Interrupt_function:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function _ADC_Get_Conversion_Result *****************
  5004 ;; Defined at:
  5005 ;;		line 158 in file "MCAL_layer/ADC/adc.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  adc_config      1    0[COMRAM] PTR const struct .
  5008 ;;		 -> adc1(9), 
  5009 ;;  conversion_r    1    1[COMRAM] PTR unsigned short 
  5010 ;;		 -> res_2(2), res_1(2), 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  ret             1    6[COMRAM] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;Total ram usage:        7 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_ADC_Interrupt_function
  5032 ;;		_ADC_Full_Conversion_Pending
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text39
  5037   001980                     __ptext39:
  5038                           	callstack 0
  5039   001980                     _ADC_Get_Conversion_Result:
  5040                           	callstack 21
  5041   001980                     
  5042                           ;MCAL_layer/ADC/adc.c: 158: STD_ReturnType ADC_Get_Conversion_Result(const adc_config_t 
      +                          *adc_config , uint16 *conversion_result);MCAL_layer/ADC/adc.c: 159: {;MCAL_layer/ADC/adc
      +                          .c: 160:     STD_ReturnType ret = (STD_ReturnType)0x01;
  5043   001980  0E01               	movlw	1
  5044   001982  6E07               	movwf	ADC_Get_Conversion_Result@ret^0,c
  5045                           
  5046                           ;MCAL_layer/ADC/adc.c: 161:     if((((void*)0) == adc_config) || (((void*)0) == conversi
      +                          on_result))
  5047   001984  5001               	movf	ADC_Get_Conversion_Result@adc_config^0,w,c
  5048   001986  B4D8               	btfsc	status,2,c
  5049   001988  EFC8  F00C         	goto	i2u265_41
  5050   00198C  EFCA  F00C         	goto	i2u265_40
  5051   001990                     i2u265_41:
  5052   001990  EFD2  F00C         	goto	i2l3879
  5053   001994                     i2u265_40:
  5054   001994  5002               	movf	ADC_Get_Conversion_Result@conversion_result^0,w,c
  5055   001996  A4D8               	btfss	status,2,c
  5056   001998  EFD0  F00C         	goto	i2u266_41
  5057   00199C  EFD2  F00C         	goto	i2u266_40
  5058   0019A0                     i2u266_41:
  5059   0019A0  EF16  F00D         	goto	i2l3889
  5060   0019A4                     i2u266_40:
  5061   0019A4                     i2l3879:
  5062                           
  5063                           ;MCAL_layer/ADC/adc.c: 162:     {;MCAL_layer/ADC/adc.c: 163:         ret = (STD_ReturnTy
      +                          pe)0x00;
  5064   0019A4  0E00               	movlw	0
  5065   0019A6  6E07               	movwf	ADC_Get_Conversion_Result@ret^0,c
  5066                           
  5067                           ;MCAL_layer/ADC/adc.c: 164:     }
  5068   0019A8  EF26  F00D         	goto	i2l3891
  5069   0019AC                     i2l3881:
  5070                           
  5071                           ;MCAL_layer/ADC/adc.c: 170:             *conversion_result = (uint16)((ADRESH << 8) + AD
      +                          RESL );
  5072   0019AC  50C3               	movf	195,w,c	;volatile
  5073   0019AE  CFC4 F003          	movff	4036,??_ADC_Get_Conversion_Result	;volatile
  5074   0019B2  6A04               	clrf	(??_ADC_Get_Conversion_Result+1)^0,c
  5075   0019B4  C003  F004         	movff	??_ADC_Get_Conversion_Result,??_ADC_Get_Conversion_Result+1
  5076   0019B8  6A03               	clrf	??_ADC_Get_Conversion_Result^0,c
  5077   0019BA  2603               	addwf	??_ADC_Get_Conversion_Result^0,f,c
  5078   0019BC  0E00               	movlw	0
  5079   0019BE  2204               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,f,c
  5080   0019C0  5002               	movf	ADC_Get_Conversion_Result@conversion_result^0,w,c
  5081   0019C2  6ED9               	movwf	fsr2l,c
  5082   0019C4  6ADA               	clrf	fsr2h,c
  5083   0019C6  C003  FFDE         	movff	??_ADC_Get_Conversion_Result,postinc2
  5084   0019CA  C004  FFDD         	movff	??_ADC_Get_Conversion_Result+1,postdec2
  5085                           
  5086                           ;MCAL_layer/ADC/adc.c: 171:             break;
  5087   0019CE  EF26  F00D         	goto	i2l3891
  5088   0019D2                     i2l3883:
  5089                           
  5090                           ;MCAL_layer/ADC/adc.c: 173:             *conversion_result = (uint16)(((ADRESH << 8) + A
      +                          DRESL) >> 6);
  5091   0019D2  50C3               	movf	195,w,c	;volatile
  5092   0019D4  CFC4 F003          	movff	4036,??_ADC_Get_Conversion_Result	;volatile
  5093   0019D8  6A04               	clrf	(??_ADC_Get_Conversion_Result+1)^0,c
  5094   0019DA  C003  F004         	movff	??_ADC_Get_Conversion_Result,??_ADC_Get_Conversion_Result+1
  5095   0019DE  6A03               	clrf	??_ADC_Get_Conversion_Result^0,c
  5096   0019E0  2603               	addwf	??_ADC_Get_Conversion_Result^0,f,c
  5097   0019E2  0E00               	movlw	0
  5098   0019E4  2204               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,f,c
  5099   0019E6  0E06               	movlw	6
  5100   0019E8  6E05               	movwf	(??_ADC_Get_Conversion_Result+2)^0,c
  5101   0019EA                     i2u267_45:
  5102   0019EA  3404               	rlcf	(??_ADC_Get_Conversion_Result+1)^0,w,c
  5103   0019EC  3204               	rrcf	(??_ADC_Get_Conversion_Result+1)^0,f,c
  5104   0019EE  3203               	rrcf	??_ADC_Get_Conversion_Result^0,f,c
  5105   0019F0  2E05               	decfsz	(??_ADC_Get_Conversion_Result+2)^0,f,c
  5106   0019F2  EFF5  F00C         	goto	i2u267_45
  5107   0019F6  5002               	movf	ADC_Get_Conversion_Result@conversion_result^0,w,c
  5108   0019F8  6ED9               	movwf	fsr2l,c
  5109   0019FA  6ADA               	clrf	fsr2h,c
  5110   0019FC  C003  FFDE         	movff	??_ADC_Get_Conversion_Result,postinc2
  5111   001A00  C004  FFDD         	movff	??_ADC_Get_Conversion_Result+1,postdec2
  5112                           
  5113                           ;MCAL_layer/ADC/adc.c: 174:             break;
  5114   001A04  EF26  F00D         	goto	i2l3891
  5115   001A08                     i2l3885:
  5116                           
  5117                           ;MCAL_layer/ADC/adc.c: 176:             *conversion_result = (uint16)(ADRESL + (ADRESH <
      +                          < 8));
  5118   001A08  50C4               	movf	196,w,c	;volatile
  5119   001A0A  6E04               	movwf	(??_ADC_Get_Conversion_Result+1)^0,c
  5120   001A0C  6A03               	clrf	??_ADC_Get_Conversion_Result^0,c
  5121   001A0E  50C3               	movf	195,w,c	;volatile
  5122   001A10  2403               	addwf	??_ADC_Get_Conversion_Result^0,w,c
  5123   001A12  6E05               	movwf	(??_ADC_Get_Conversion_Result+2)^0,c
  5124   001A14  0E00               	movlw	0
  5125   001A16  2004               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,w,c
  5126   001A18  6E06               	movwf	(??_ADC_Get_Conversion_Result+3)^0,c
  5127   001A1A  5002               	movf	ADC_Get_Conversion_Result@conversion_result^0,w,c
  5128   001A1C  6ED9               	movwf	fsr2l,c
  5129   001A1E  6ADA               	clrf	fsr2h,c
  5130   001A20  C005  FFDE         	movff	??_ADC_Get_Conversion_Result+2,postinc2
  5131   001A24  C006  FFDD         	movff	??_ADC_Get_Conversion_Result+3,postdec2
  5132                           
  5133                           ;MCAL_layer/ADC/adc.c: 177:             break;
  5134   001A28  EF26  F00D         	goto	i2l3891
  5135   001A2C                     i2l3889:
  5136   001A2C  5001               	movf	ADC_Get_Conversion_Result@adc_config^0,w,c
  5137   001A2E  6ED9               	movwf	fsr2l,c
  5138   001A30  6ADA               	clrf	fsr2h,c
  5139   001A32  0E08               	movlw	8
  5140   001A34  26D9               	addwf	fsr2l,f,c
  5141   001A36  50DF               	movf	indf2,w,c
  5142                           
  5143                           ; Switch size 1, requested type "simple"
  5144                           ; Number of cases is 2, Range of values is 0 to 1
  5145                           ; switch strategies available:
  5146                           ; Name         Instructions Cycles
  5147                           ; simple_byte            7     4 (average)
  5148                           ;	Chosen strategy is simple_byte
  5149   001A38  0A00               	xorlw	0	; case 0
  5150   001A3A  B4D8               	btfsc	status,2,c
  5151   001A3C  EFE9  F00C         	goto	i2l3883
  5152   001A40  0A01               	xorlw	1	; case 1
  5153   001A42  B4D8               	btfsc	status,2,c
  5154   001A44  EFD6  F00C         	goto	i2l3881
  5155   001A48  EF04  F00D         	goto	i2l3885
  5156   001A4C                     i2l3891:
  5157                           
  5158                           ;MCAL_layer/ADC/adc.c: 181:     return ret;
  5159   001A4C  5007               	movf	ADC_Get_Conversion_Result@ret^0,w,c
  5160   001A4E  0012               	return		;funcret
  5161   001A50                     __end_of_ADC_Get_Conversion_Result:
  5162                           	callstack 0
  5163                           
  5164                           	psect	rparam
  5165   000000                     
  5166                           	psect	temp
  5167   000072                     btemp:
  5168                           	callstack 0
  5169   000072                     	ds	1
  5170   000000                     int$flags	set	btemp
  5171   000000                     wtemp8	set	btemp+1
  5172   000000                     ttemp5	set	btemp+1
  5173   000000                     ttemp6	set	btemp+4
  5174   000000                     ttemp7	set	btemp+8
  5175                           
  5176                           	psect	config
  5177                           
  5178                           ; Padding undefined space
  5179   300000                     	org	3145728
  5180   300000  FF                 	db	255
  5181                           
  5182                           ;Config register CONFIG1H @ 0x300001
  5183                           ;	Oscillator Selection bits
  5184                           ;	OSC = HS, HS oscillator
  5185                           ;	Fail-Safe Clock Monitor Enable bit
  5186                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5187                           ;	Internal/External Oscillator Switchover bit
  5188                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5189   300001                     	org	3145729
  5190   300001  02                 	db	2
  5191                           
  5192                           ;Config register CONFIG2L @ 0x300002
  5193                           ;	Power-up Timer Enable bit
  5194                           ;	PWRT = OFF, PWRT disabled
  5195                           ;	Brown-out Reset Enable bits
  5196                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5197                           ;	Brown Out Reset Voltage bits
  5198                           ;	BORV = 3, Minimum setting
  5199   300002                     	org	3145730
  5200   300002  1F                 	db	31
  5201                           
  5202                           ;Config register CONFIG2H @ 0x300003
  5203                           ;	Watchdog Timer Enable bit
  5204                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5205                           ;	Watchdog Timer Postscale Select bits
  5206                           ;	WDTPS = 32768, 1:32768
  5207   300003                     	org	3145731
  5208   300003  1E                 	db	30
  5209                           
  5210                           ; Padding undefined space
  5211   300004                     	org	3145732
  5212   300004  FF                 	db	255
  5213                           
  5214                           ;Config register CONFIG3H @ 0x300005
  5215                           ;	CCP2 MUX bit
  5216                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5217                           ;	PORTB A/D Enable bit
  5218                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5219                           ;	Low-Power Timer1 Oscillator Enable bit
  5220                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5221                           ;	MCLR Pin Enable bit
  5222                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5223   300005                     	org	3145733
  5224   300005  81                 	db	129
  5225                           
  5226                           ;Config register CONFIG4L @ 0x300006
  5227                           ;	Stack Full/Underflow Reset Enable bit
  5228                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5229                           ;	Single-Supply ICSP Enable bit
  5230                           ;	LVP = OFF, Single-Supply ICSP disabled
  5231                           ;	Extended Instruction Set Enable bit
  5232                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5233                           ;	Background Debugger Enable bit
  5234                           ;	DEBUG = 0x1, unprogrammed default
  5235   300006                     	org	3145734
  5236   300006  81                 	db	129
  5237                           
  5238                           ; Padding undefined space
  5239   300007                     	org	3145735
  5240   300007  FF                 	db	255
  5241                           
  5242                           ;Config register CONFIG5L @ 0x300008
  5243                           ;	Code Protection bit
  5244                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5245                           ;	Code Protection bit
  5246                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5247                           ;	Code Protection bit
  5248                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5249                           ;	Code Protection bit
  5250                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5251   300008                     	org	3145736
  5252   300008  0F                 	db	15
  5253                           
  5254                           ;Config register CONFIG5H @ 0x300009
  5255                           ;	Boot Block Code Protection bit
  5256                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5257                           ;	Data EEPROM Code Protection bit
  5258                           ;	CPD = OFF, Data EEPROM not code-protected
  5259   300009                     	org	3145737
  5260   300009  C0                 	db	192
  5261                           
  5262                           ;Config register CONFIG6L @ 0x30000A
  5263                           ;	Write Protection bit
  5264                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5265                           ;	Write Protection bit
  5266                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5267                           ;	Write Protection bit
  5268                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5269                           ;	Write Protection bit
  5270                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5271   30000A                     	org	3145738
  5272   30000A  0F                 	db	15
  5273                           
  5274                           ;Config register CONFIG6H @ 0x30000B
  5275                           ;	Configuration Register Write Protection bit
  5276                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5277                           ;	Boot Block Write Protection bit
  5278                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5279                           ;	Data EEPROM Write Protection bit
  5280                           ;	WRTD = OFF, Data EEPROM not write-protected
  5281   30000B                     	org	3145739
  5282   30000B  E0                 	db	224
  5283                           
  5284                           ;Config register CONFIG7L @ 0x30000C
  5285                           ;	Table Read Protection bit
  5286                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5287                           ;	Table Read Protection bit
  5288                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5289                           ;	Table Read Protection bit
  5290                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5291                           ;	Table Read Protection bit
  5292                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5293   30000C                     	org	3145740
  5294   30000C  0F                 	db	15
  5295                           
  5296                           ;Config register CONFIG7H @ 0x30000D
  5297                           ;	Boot Block Table Read Protection bit
  5298                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5299   30000D                     	org	3145741
  5300   30000D  40                 	db	64
  5301                           tosu	equ	0xFFF
  5302                           tosh	equ	0xFFE
  5303                           tosl	equ	0xFFD
  5304                           stkptr	equ	0xFFC
  5305                           pclatu	equ	0xFFB
  5306                           pclath	equ	0xFFA
  5307                           pcl	equ	0xFF9
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           indf0	equ	0xFEF
  5315                           postinc0	equ	0xFEE
  5316                           postdec0	equ	0xFED
  5317                           preinc0	equ	0xFEC
  5318                           plusw0	equ	0xFEB
  5319                           fsr0h	equ	0xFEA
  5320                           fsr0l	equ	0xFE9
  5321                           wreg	equ	0xFE8
  5322                           indf1	equ	0xFE7
  5323                           postinc1	equ	0xFE6
  5324                           postdec1	equ	0xFE5
  5325                           preinc1	equ	0xFE4
  5326                           plusw1	equ	0xFE3
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           bsr	equ	0xFE0
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           preinc2	equ	0xFDC
  5334                           plusw2	equ	0xFDB
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    16
    Data        45
    BSS         98
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     44     113
    BANK0           128     13      88
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc1$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    ADC_Full_Conversion_Interrupt@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Get_Conversion_Result@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Get_Conversion_Result@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    ADC_Get_Conversion_Result@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> res_1(COMRAM[2]), res_2(COMRAM[2]), 

    ADC_Init@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Init@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), NULL(), 

    ADC_Result_Format_Configuration@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Result_Format_Configuration@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    ADC_Select_Channel@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Start_Conversion@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Voltage_Reference_Configuration@adc_config	PTR const struct . size(1) Largest target is 9
		 -> adc1(BANK0[9]), 

    ADC_Voltage_Reference_Configuration@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    convert_uint16_to_string@str	PTR unsigned short  size(1) Largest target is 12
		 -> result_1(BANK0[12]), result_2(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@_interrupt_RBx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    INTx_Set_Interrupt_Handler@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_init@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 12
		 -> result_1(BANK0[12]), result_2(BANK0[12]), STR_4(CODE[7]), STR_5(CODE[7]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bit_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    memset@dest	PTR void  size(1) Largest target is 12
		 -> result_1(BANK0[12]), result_2(BANK0[12]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> result_1(BANK0[12]), result_2(BANK0[12]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1422$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S1464$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S2566$buffer	PTR unsigned char  size(2) Largest target is 0

    S2566$source	PTR const unsigned char  size(2) Largest target is 0

    S784$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt_function(), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> result_1(BANK0[12]), result_2(BANK0[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 12
		 -> result_1(BANK0[12]), result_2(BANK0[12]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_data->_lcd_send_4bits
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _application_initializ->_lcd_4bit_init
    _lcd_4bit_init->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_send_4bit_enable_signal->_gpio_pin_write_logic
    _gpio_pin_Initialization->_gpio_pin_write_logic
    _ADC_Init->_ADC_Input_Channel_Port_Configuration
    _ADC_Full_Conversion_Interrupt->_ADC_Select_Channel
    _ADC_Select_Channel->_ADC_Input_Channel_Port_Configuration

Critical Paths under _Interrupt_Manager in COMRAM

    _ADC_Interrupt_function->_ADC_Get_Conversion_Result

Critical Paths under _main in BANK0

    _convert_uint16_to_string->_sprintf

Critical Paths under _Interrupt_Manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66332
      _ADC_Full_Conversion_Interrupt
              _application_initializ
           _convert_uint16_to_string
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   35055
                                             33 COMRAM     6     1      5
                 _lcd_4bit_send_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   17703
                                             29 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_data                                   3     1      2   15303
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_send_4bit_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                             4     1      3    6018
                                             40 COMRAM     4     1      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4717
                                             36 COMRAM     4     0      4
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             32 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             21 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             11 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             17 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                             11 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0   24227
                           _ADC_Init
                      _lcd_4bit_init
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_init                                        5     4      1   23711
                                             29 COMRAM     5     4      1
            _gpio_pin_Initialization
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   16975
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_send_4bit_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       7     5      2    5224
                                             19 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit_enable_signal                          3     2      1    4831
                                             19 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    6270
                                             19 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4435
                                             11 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     483
                                             11 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     3      1     516
                                             14 COMRAM     4     3      1
_ADC_Input_Channel_Port_Configuratio
    _ADC_Result_Format_Configuration
_ADC_Voltage_Reference_Configuration
 ---------------------------------------------------------------------------------
 (3) _ADC_Voltage_Reference_Configuration                  1     0      1      98
                                             11 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _ADC_Result_Format_Configuration                      1     0      1      98
                                             11 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Full_Conversion_Interrupt                        3     1      2    1032
                                             18 COMRAM     3     1      2
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     1      1     198
                                             11 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   4     2      2     416
                                             14 COMRAM     4     2      2
_ADC_Input_Channel_Port_Configuratio
 ---------------------------------------------------------------------------------
 (3) _ADC_Input_Channel_Port_Configuration                 3     3      0      22
                                             11 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Interrupt_Manager                                    4     4      0     612
                                              7 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     612
                                NULL *
             _ADC_Interrupt_function *
 ---------------------------------------------------------------------------------
 (9) _ADC_Interrupt_function                               0     0      0     612
          _ADC_Get_Conversion_Result
 ---------------------------------------------------------------------------------
 (10) _ADC_Get_Conversion_Result                           7     5      2     612
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Full_Conversion_Interrupt
     _ADC_Select_Channel
       _ADC_Input_Channel_Port_Configuration
     _ADC_Start_Conversion
   _application_initializ
     _ADC_Init
       _ADC_Input_Channel_Port_Configuration
       _ADC_Result_Format_Configuration
       _ADC_Voltage_Reference_Configuration
     _lcd_4bit_init
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_send_4bit_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_data
       _gpio_pin_write_logic
       _lcd_send_4bit_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _Interrupt_Manager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_Interrupt_function *
       _ADC_Get_Conversion_Result
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      D      58       5       68.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2C      71       1       89.7%
BITBIGSFRhlhl       2B      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllhll       6      0       0      40        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C9      12        0.0%
DATA                 0      0      C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 16 21:39:59 2024

                          ADC_Get_Conversion_Result@ret 0007  
                                       ?_lcd_send_4bits 0014  
                                          ___awdiv@sign 0011  
                                   ??_Interrupt_Manager 0008  
                        __end_of_ADC_Interrupt_function 204E  
                                                   l210 1DCE  
                                                   l142 17B6  
                                                   l400 17D4  
                                                   l152 1F5A  
                                                   l403 1844  
                                                   l147 1FB6  
                                                   l421 229E  
                                                   l405 184A  
                                                   l406 18A6  
                                                   l416 21B6  
                                                   l193 1E3E  
                                                   l419 229A  
                                                   l179 1BCE  
                                                   l292 2002  
                                                   l614 1EFE  
                                                   l198 2090  
                                                   l480 20D6  
                                                   l457 221E  
                                                   l475 197E  
                                                   l484 20DE  
                                                   l493 214C  
                                                   l574 15B2  
                                                   l495 2152  
                                                   l487 20E6  
                                                   l496 2158  
                                                   l497 217E  
                                                   l489 210E  
                                                   l593 16C2  
                                                   l970 22CE  
                                                   _abs 21B8  
                                      lcd_4bit_init@lcd 001E  
                                      lcd_4bit_init@ret 0022  
                                       __end_of_ADC_ISR 227E  
                                                   _ret 0071  
                   __end_of_lcd_send_4bit_enable_signal 2092  
                           _lcd_send_4bit_enable_signal 204E  
                                          ___awmod@sign 0011  
                                                   tosl 0FFD  
                                                   wreg 0FE8  
                             ?_convert_uint16_to_string 0029  
                                       __end_of_RB4_ISR 22F4  
                                       __end_of_RB5_ISR 22F0  
                                       __end_of_RB6_ISR 22EC  
                                       __end_of_RB7_ISR 22E8  
                                                  l1210 1B12  
                                                  ?_abs 0012  
                                                  l1223 1C7E  
                                                  l1701 11E6  
                                                  l4031 2234  
                                                  l1711 21D2  
                                                  l4201 2204  
                                                  l4025 2220  
                                                  l1714 21EA  
                                                  l4203 221C  
                                                  l4051 1828  
                                                  l4027 2228  
                                                  l1707 20D0  
                                                  l4131 1B3E  
                                                  l4053 1838  
                                                  l4045 17B8  
                                                  l4213 22BA  
                                                  l4029 2232  
                                                  l5021 1A54  
                                                  l5101 1C90  
                                                  l4133 1B54  
                                                  l4141 1B9A  
                                                  l4125 1B14  
                                                  l1726 1D28  
                                                  l4071 18A2  
                                                  l4063 1850  
                                                  l4055 183A  
                                                  l4047 17CC  
                                                  l4215 22C4  
                                                  l5031 1A84  
                                                  l5023 1A62  
                                                  l5103 1CA0  
                                                  l1663 2146  
                                                  l4135 1B82  
                                                  l4143 1BCC  
                                                  l4127 1B24  
                                                  l1656 224E  
                                                  l4081 2180  
                                                  l4065 1884  
                                                  l4057 183C  
                                                  l4049 17D6  
                                                  l4073 18A4  
                                                  l5041 1AB2  
                                                  l5033 1A88  
                                                  l5025 1A6A  
                                                  l5113 21B8  
                                                  l1737 2300  
                                                  l5105 1CAA  
                                                  l5121 1054  
                                                  l4137 1B86  
                                                  l4129 1B36  
                                                  l4083 2194  
                                                  l4067 1892  
                                                  l4059 183E  
                                                  l5051 1AE6  
                                                  l5043 1AC0  
                                                  l5035 1A90  
                                                  l5027 1A6E  
                                                  l5019 1A50  
                                                  l5115 21C6  
                                                  l5107 1CC6  
                                                  l5131 10AA  
                                                  l5123 1060  
                                                  l4085 219C  
                                                  l4093 227E  
                                                  l4069 189A  
                                                  l5053 1AEC  
                                                  l5045 1AC6  
                                                  l5037 1AA2  
                                                  l5029 1A7C  
                                                  l5109 1CF8  
                                                  l5141 1130  
                                                  l5133 10C2  
                                                  l5125 1064  
                                                  l5117 1028  
                                                  l4087 21AE  
                                                  l4095 2292  
                                                  l3711 1534  
                                                  l3703 14A2  
                                                  l5311 16AA  
                                                  l5047 1ADC  
                                                  l5039 1AAA  
                                                  l5055 1AF2  
                                                  l5071 1BEE  
                                                  l5063 1BD0  
                                                  l5151 1184  
                                                  l5143 1142  
                                                  l5135 10CC  
                                                  l5127 106E  
                                                  l5119 104C  
                                                  l5231 13CE  
                                                  l4089 21B4  
                                                  l4097 229C  
                                                  l5313 186E  
                                                  l3705 14B6  
                                                  l3721 1DD0  
                                                  l5057 1B02  
                                                  l5049 1AE4  
                                                  l5081 1C26  
                                                  l5073 1BFC  
                                                  l5065 1BD4  
                                                  l5153 119E  
                                                  l5145 1152  
                                                  l5137 10E4  
                                                  l5129 108C  
                                                  l5161 11C2  
                                                  l5233 13DE  
                                                  l5241 1436  
                                                  l5225 138E  
                                                  l5315 1910  
                                                  l3715 1584  
                                                  l3707 14D6  
                                                  l3811 1EDA  
                                                  l3731 1DF0  
                                                  l3723 1DE0  
                                                  l5059 1B0A  
                                                  l5083 1C34  
                                                  l5091 1C5E  
                                                  l5075 1C04  
                                                  l5067 1BE2  
                                                  l5147 1162  
                                                  l5155 11A0  
                                                  l5139 1114  
                                                  l5171 20AA  
                                                  l5243 1446  
                                                  l5235 13EC  
                                                  l5227 1392  
                                                  l4197 21EC  
                                                  l3709 14DE  
                                                  l3717 15B0  
                                                  l3813 1EFC  
                                                  l3805 1EA2  
                                                  l3741 204E  
                                                  l3733 1E1C  
                                                  l3725 1DE8  
                                                  l3821 1F74  
                                                  l5093 1C6E  
                                                  l5085 1C4A  
                                                  l5077 1C16  
                                                  l5069 1BEA  
                                                  l5149 1172  
                                                  l5157 11B6  
                                                  l5173 20C8  
                                                  l5181 2122  
                                                  l5245 1454  
                                                  l5237 13FE  
                                                  l5229 13B0  
                                                  l3831 18B4  
                                                  l4199 21FC  
                                                  l3591 1646  
                                                  l3583 15B4  
                                                  l3807 1EB2  
                                                  l3751 208E  
                                                  l3743 205E  
                                                  l3735 1E20  
                                                  l3823 1FB4  
                                                  l3911 16F0  
                                                  l5095 1C76  
                                                  l5087 1C52  
                                                  l5079 1C1E  
                                                  l5167 2092  
                                                  l5183 212A  
                                                  l5191 1FCC  
                                                  l5247 1466  
                                                  l5239 141A  
                               ??_application_initializ 0023  
                                                  l3841 18D2  
                                                  l3833 18BA  
                                                  l3585 15C8  
                                                  l3809 1ED2  
                                                  l3745 2066  
                                                  l3737 1E3C  
                                                  l3817 1F5C  
                                                  l3921 1708  
                                                  l3905 16C4  
                                                  l5089 1C58  
                                                  l5169 209A  
                                                  l5185 213A  
                                                  l5177 2110  
                                                  l5193 1FD4  
                                                  l5249 1482  
                                                  l3851 18F0  
                                                  l3843 18D8  
                                                  l3835 18C0  
                                                  l3827 18AA  
                                                  l3595 1696  
                                                  l3587 15E8  
                                                  l3747 2072  
                                                  l3819 1F6C  
                                                  l3931 175E  
                                                  l3923 1724  
                                                  l3907 16D4  
                                                  l5099 1C80  
                                                  l5179 211A  
                                                  l5195 1FEC  
                                                  l3853 18F6  
                                                  l3845 18DE  
                                                  l3837 18C6  
                                                  l3829 18AE  
                                                  l3589 15F0  
                                                  l3597 16C0  
                                                  l3749 2080  
                                                  l3941 179A  
                                                  l3933 176A  
                                                  l3925 1732  
                                                  l3917 16F8  
                                                  l3909 16DC  
                                                  l5197 2000  
                                                  l5189 1FB8  
                                                  l3847 18E4  
                                                  l3839 18CC  
                                                  l3863 2148  
                                                  l3943 17A6  
                                                  l3935 1776  
                                                  l3927 173E  
                                                  l3919 1704  
                                                  l3951 1F10  
                                                  l3849 18EA  
                                                  l3857 18FC  
                                                  l3873 20EE  
                                                  l3937 1782  
                                                  l3929 1758  
                                                  l3945 17B4  
                                                  l3953 1F18  
                                                  l3961 1D2A  
                                                  l3867 215E  
                                                  l3939 178E  
                                                  l3955 1F58  
                                                  l3971 1D6C  
                                                  l3963 1D2C  
                                                  l3869 20D2  
                                                  l3949 1F00  
                                                  l3973 1D80  
                                                  l3981 1DCC  
                                                  l3965 1D3C  
                                                  l3975 1D94  
                                                  l3967 1D44  
                                                  l3959 1D2A  
                                                  l3969 1D58  
                                                  l3979 1DA6  
                                                  STR_1 1024  
                                                  STR_2 1024  
                                                  STR_4 1011  
                                                  STR_5 1018  
                                                  STR_6 101F  
                                                  STR_7 101F  
                                                  u2220 15C8  
                                                  u2221 15C4  
                                                  _LATA 0F89  
                                                  u2230 15E8  
                                                  _LATB 0F8A  
                                                  u2231 15E4  
                                                  _LATC 0F8B  
                                                  _LATD 0F8C  
                                                  _LATE 0F8D  
                                                  u2244 160E  
                                                  u2500 1E3C  
                                                  u4100 1AA2  
                                                  u2245 160A  
                                                  u2501 1E38  
                                                  u4101 1A9E  
                                                  u2430 14B6  
                                                  u2254 1664  
                                                  u2510 205E  
                                                  u4110 1AC0  
                                                  u2431 14B2  
                                                  u2255 1660  
                                                  u2511 205A  
                                                  u4111 1ABC  
                                                  u2440 14D6  
                                                  u4120 1ADC  
                                                  u4200 1C90  
                                                  u2441 14D2  
                                                  u4121 1AD8  
                                                  u4201 1C8C  
                                                  u4130 1B02  
                                                  u4210 1CA0  
                                                  u4131 1AFE  
                                                  u4211 1C9C  
                                                  u2620 1EB2  
                                                  u2700 1724  
                                                  u4140 1BE2  
                                                  u4220 1CC6  
                                                  u4300 1142  
                                                  u2621 1EAE  
                                                  u2701 1720  
                                                  u4141 1BDE  
                                                  u4221 1CC2  
                                                  u4301 113E  
                                                  u2470 159A  
                                                  u2454 14FC  
                                                  u2630 1ED2  
                                                  u4150 1BFC  
                                                  u4230 1CF8  
                                                  u4310 1152  
                                                  u2710 1F10  
                                                  u2471 1594  
                                                  u2455 14F8  
                                                  u2631 1ECE  
                                                  u4151 1BF8  
                                                  u4231 1CF4  
                                                  u4311 114E  
                                                  u2711 1F0C  
                                                  u2800 2292  
                                                  u2464 1552  
                                                  u2480 1DE0  
                                                  u2640 1F6C  
                                                  u4080 1A62  
                                                  u4160 1C16  
                                                  u4240 21C6  
                                                  u4320 1162  
                                                  u2720 1D3C  
                                                  u4400 1446  
                                                  u2801 228E  
                                                  u2465 154E  
                                                  u2481 1DDC  
                                                  u2641 1F68  
                                                  u4081 1A5E  
                                                  u4161 1C12  
                                                  u4241 21C2  
                                                  u4321 115E  
                                                  u2721 1D38  
                                                  u4401 1442  
                                                  u4090 1A7C  
                                                  u4170 1C34  
                                                  u4330 1172  
                                                  u4250 104C  
                                                  u4091 1A78  
                                                  u4171 1C30  
                                                  u4331 116E  
                                                  u4251 1048  
                                                  u2476 159C  
                                                  u4180 1C4A  
                                                  u4340 11B2  
                                                  u4260 108C  
                                                  u4181 1C46  
                                                  u4341 11AE  
                                                  u4261 1088  
                                                  u2494 1E0A  
                                                  u4190 1C6E  
                                                  u4270 10AA  
                                                  u4350 20C8  
                                                  u2495 1E06  
                                                  u4191 1C6A  
                                                  u4271 10A6  
                                                  u4351 20C4  
                                                  u4280 10E0  
                                                  u4360 1FCC  
                                                  u2840 1B24  
                                                  u4417 172A  
                                                  u4281 10DA  
                                                  u4361 1FC8  
                                                  u2841 1B20  
                                                  u2690 16D4  
                                                  u2770 224E  
                                                  u4290 10E2  
                                                  u2850 1B36  
                                                  u4427 1744  
                                                  u2691 16D0  
                                                  u2771 224A  
                                                  u2851 1B32  
                                                  u2780 17CC  
                                                  u2860 1B7A  
                                                  u2781 17C8  
                                                  u4437 175A  
                                                  u2790 2194  
                                                  u2950 21FC  
                                                  u2870 1B96  
                                                  u4390 13DE  
                                                  u2791 2190  
                                                  u2951 21F8  
                                                  u4447 2078  
                                                  u2871 1B92  
                                                  u4391 13DA  
                                                  u2880 1BBC  
                                                  u2890 1BCC  
                                                  u2891 1BC8  
                                                  u2867 1B70  
                                                  u2887 1BB2  
                                                  _adc1 00C2  
                             __end_of_Interrupt_Manager 138E  
                                                  abs@a 0012  
                                                  _dbuf 0080  
                                                  _flag 0042  
                                                  _main 138E  
                                                  _prec 002F  
                                                  fsr0h 0FEA  
                                                  fsr1h 0FE2  
                                                  indf0 0FEF  
                                                  fsr2h 0FDA  
                                                  fsr0l 0FE9  
                                                  indf2 0FDF  
                                                  fsr1l 0FE1  
                                                  fsr2l 0FD9  
                              ?_gpio_pin_direction_init 000C  
                                                  btemp 0072  
                                      __end_of_ADC_Init 18A8  
                                                  prodl 0FF3  
                                                  start 000E  
                                  _RB7_InterruptHandler 0031  
                                          ___param_bank 0000  
                            __end_of_ADC_Select_Channel 21B8  
                                 _lcd_4bit_send_command 1F5C  
                                                 ??_abs 0014  
                                  _gpio_pin_write_logic 15B4  
                                      __end_of_INT0_ISR 2300  
                                      __end_of_INT1_ISR 22FC  
                                      __end_of_INT2_ISR 22F8  
                                                 ?_main 0001  
                                       __end_of___awdiv 1B14  
                                                 _EEADR 0FA9  
                                       __end_of___awmod 1C80  
                                       ___awdiv@divisor 000E  
                                                 i2l501 227C  
                                                 i2l440 1A4E  
                                                 i2l924 137A  
                                                 i2l853 22FE  
                                                 i2l861 22F6  
                                                 i2l857 22FA  
                                                 i2l865 22F2  
                                                 i2l873 22EA  
                                       ___awdiv@counter 0010  
                                                 i2l869 22EE  
                                                 i2l877 22E6  
                                                 i2l976 204C  
                           ecu_dc_motor_initializ@F3064 0052  
                           ecu_dc_motor_initializ@F3066 0051  
                                          vfpfcnvrt@fmt 0017  
                                                 _PORTA 0F80  
                                                 _PORTB 0F81  
                                                 _PORTC 0F82  
                                                 _PORTD 0F83  
                                                 _PORTE 0F84  
                                                 _TRISA 0F92  
                                                 _TRISB 0F93  
                                                 _TRISC 0F94  
                                                 _TRISD 0F95  
                                                 _TRISE 0F96  
                          ADC_Select_Channel@adc_config 000F  
          __end_of_ADC_Input_Channel_Port_Configuration 1980  
                ??_ADC_Input_Channel_Port_Configuration 000C  
                 ?_ADC_Input_Channel_Port_Configuration 0001  
                  _ADC_Input_Channel_Port_Configuration 18A8  
                                                 _lcd_1 006B  
                                                 _flags 0041  
                                  _ADC_Start_Conversion 227E  
                                                 _fputc 1C80  
                                                 _res_1 0055  
                                                 _res_2 0053  
                                                 _width 002D  
                                                 _putch 2300  
                                                 pclath 0FFA  
                                                 pclatu 0FFB  
                                                 tablat 0FF5  
                                                 ttemp5 0073  
                                                 ttemp6 0076  
                                                 ttemp7 007A  
                                                 status 0FD8  
                                                 wtemp8 0073  
                                       __end_of_sprintf 2148  
                                       __initialization 1E40  
                                          __end_of_main 14A2  
                                 ?_gpio_pin_write_logic 000C  
                                   ecu_led_toggle@F3076 0047  
                                             ??_ADC_ISR 0008  
                                         _lat_registers 0057  
                                                ??_main 002D  
                               _gpio_pin_Initialization 1EA2  
                                         __activetblptr 0003  
                                             ??_RB4_ISR 0001  
                                             ??_RB5_ISR 0001  
                                             ??_RB6_ISR 0001  
                                             ??_RB7_ISR 0001  
                                 ?_ADC_Start_Conversion 000C  
                                                ?_fputc 000C  
                                                _ADRESH 0FC4  
                                                _EEADRH 0FAA  
                                                _ADRESL 0FC3  
                                                _EEDATA 0FA8  
                                                _EECON2 0FA7  
                                      ___awdiv@dividend 000C  
                                                ?_putch 0001  
                                                i2l2411 22F8  
                                                i2l4101 2004  
                                                i2l4111 2048  
                                                i2l4103 2014  
                                                i2l2407 22FC  
                                                i2l2415 22F4  
                                                i2l2423 22EC  
                                                i2l2431 22E4  
                                                i2l4105 2022  
                                                i2l4107 202A  
                                                i2l4211 2264  
                                                i2l2419 22F0  
                                                i2l2427 22E8  
                                                i2l4109 203A  
                                                i2l4207 2250  
                                                i2l4209 2252  
                                                i2l4911 1208  
                                                i2l3881 19AC  
                                                i2l4921 1244  
                                                i2l4913 1216  
                                                i2l3883 19D2  
                                                i2l3891 1A4C  
                                                i2l3875 1980  
                                                i2l4931 1276  
                                                i2l4923 1248  
                                                i2l4915 121A  
                                                i2l3885 1A08  
                                                i2l3877 1994  
                                                i2l4941 12A8  
                                                i2l4933 1284  
                                                i2l4925 1256  
                                                i2l4917 1228  
                                                i2l4909 11FA  
                                                i2l3879 19A4  
                                                i2l4943 12B6  
                                                i2l4951 12DA  
                                                i2l4935 1288  
                                                i2l4919 1236  
                                                i2l4927 125A  
                                                i2l3889 1A2C  
                                                i2l4961 1316  
                                                i2l4953 12E8  
                                                i2l4945 12C4  
                                                i2l4937 1296  
                                                i2l4929 1268  
                                                i2l4971 1348  
                                                i2l4955 12F6  
                                                i2l4963 131A  
                                                i2l4947 12C8  
                                                i2l4939 129A  
                                                i2l4973 1356  
                                                i2l4965 1328  
                                                i2l4957 1304  
                                                i2l4949 12D6  
                                                i2l4975 135A  
                                                i2l4967 1336  
                                                i2l4959 1308  
               ADC_Full_Conversion_Interrupt@adc_config 0013  
                                                i2l4977 1368  
                                                i2l4969 133A  
                                                i2l4979 1376  
                                         vfpfcnvrt@done 001A  
                      __end_of_lcd_4bit_send_string_pos 1BD0  
                                ?_lcd_4bit_send_command 001B  
                                          vfprintf@cfmt 0024  
                                             ??___awdiv 0010  
                                             ??___awmod 0010  
                                 __end_of_lcd_4bit_init 17B8  
                                                _memset 2220  
                                                clear_0 1E86  
                                                clear_1 1E92  
                                      ___awdiv@quotient 0012  
                                       ___awmod@divisor 000E  
                                                isa$std 0001  
                                       ___awmod@counter 0010  
                                                fputc@c 000C  
                                          __pdataCOMRAM 0057  
                                             ?_ADC_Init 000F  
                                          __mediumconst 0000  
                                                tblptrh 0FF7  
                                                tblptrl 0FF6  
                                                tblptru 0FF8  
                                                putch@c 0001  
                                      __end_of_vfprintf 20D2  
                                             ??_sprintf 0029  
                               ADC_Start_Conversion@ret 000D  
                   ADC_Get_Conversion_Result@adc_config 0001  
                                            __accesstop 0080  
                               __end_of__initialization 1E98  
                                             ?_INT0_ISR 0001  
                                             ?_INT1_ISR 0001  
                              lcd_4bit_set_cursor@colum 0020  
                                             ?_INT2_ISR 0001  
                                        lcd_4bit_init@i 0020  
                                         ___rparam_used 0001  
                                      ??_lcd_send_4bits 0016  
                                ??_gpio_pin_write_logic 000E  
                                        __pcstackCOMRAM 0001  
                                 lcd_4bit_send_data@lcd 001B  
                                 lcd_4bit_send_data@ret 001D  
                                          __pidataBANK0 22D0  
                                         __end_of_fputc 1D2A  
                             ??_gpio_pin_Initialization 0015  
                                         __end_of_putch 2302  
                              lcd_4bit_send_command@lcd 001B  
                              lcd_4bit_send_command@ret 001D  
                                            ??_ADC_Init 0010  
                                ??_ADC_Start_Conversion 000D  
                          ecu_dc_motor_move_right@F3071 0050  
                          ecu_dc_motor_move_right@F3073 004F  
                            ?_ADC_Get_Conversion_Result 0001  
                                               ??_fputc 000F  
                                               ??_putch 000C  
ADC_Input_Channel_Port_Configuration@adc_channel_select 000E  
                                            __pbssBANK0 0080  
                         __end_of_application_initializ 22D0  
                                 _INT0_InterruptHandler 003D  
                                            ??_INT0_ISR 0001  
                                            ??_INT1_ISR 0001  
                                            ??_INT2_ISR 0001  
                                            __pnvCOMRAM 0071  
                    gpio_pin_direction_init@_pin_config 000C  
                           convert_uint16_to_string@ret 002C  
                                               _ADC_ISR 2250  
                           convert_uint16_to_string@str 002B  
                                               ?_memset 000C  
                      ADC_Full_Conversion_Interrupt@ret 0015  
                                               _RB4_ISR 22F0  
                                               _RB5_ISR 22EC  
                                               _RB6_ISR 22E8  
                                               _RB7_ISR 22E4  
                             ?_lcd_4bit_send_string_pos 0022  
                                    _ADC_Select_Channel 2180  
                     __end_of_ADC_Get_Conversion_Result 1A50  
                       __end_of_gpio_pin_Initialization 1F00  
                                   ?_ADC_Select_Channel 000F  
                                        _tris_registers 0061  
                                  _ADC_InterruptHandler 003F  
                                               __Hparam 0000  
                                               __Lparam 0000  
                                               ___awdiv 1A50  
                                               ___awmod 1BD0  
                                  ??_ADC_Select_Channel 0011  
                                             ?_vfprintf 0021  
                                          __psmallconst 1000  
                                               __pcinit 1E40  
                                               __ramtop 1000  
                                               __ptext0 138E  
                                               __ptext1 1B14  
                                               __ptext2 1D2A  
                                               __ptext3 1F00  
                                               __ptext4 1FB8  
                                               __ptext5 2110  
                                               __ptext6 2092  
                                               __ptext7 1028  
                                               __ptext8 1C80  
                                               __ptext9 2300  
                              _convert_uint16_to_string 1FB8  
                                      ___awmod@dividend 000C  
                    gpio_pin_Initialization@_pin_config 0014  
                                               _sprintf 2110  
                                        __pintcode_body 11E8  
                                  end_of_initialization 1E98  
                                     lcd_send_4bits@lcd 0014  
                                     lcd_send_4bits@ret 0018  
                                               fputc@fp 000E  
                                               memset@c 000D  
                                               memset@n 000F  
                                               memset@p 0011  
                                               int_func 11E8  
         ADC_Voltage_Reference_Configuration@adc_config 000C  
                               ??_lcd_4bit_send_command 001D  
                            __end_of_lcd_4bit_send_data 1F5C  
                                     __end_of_vfpfcnvrt 11E8  
                              ??_ADC_Interrupt_function 0008  
                                               postdec1 0FE5  
                                               postdec2 0FDD  
                                               postinc0 0FEE  
                                               postinc1 0FE6  
                                               postinc2 0FDE  
                                      vfpfcnvrt@convarg 001C  
                  ADC_Select_Channel@adc_channel_select 0010  
                                            ??_vfprintf 0024  
                                 _INT1_InterruptHandler 003B  
                                             _PORTBbits 0F81  
                                    ADC_Init@adc_config 000F  
                                   _lcd_4bit_set_cursor 1D2A  
                                 ecu_led_turn_off@F3071 0048  
                                lcd_4bit_send_data@data 001C  
                           lcd_4bit_send_string_pos@lcd 0022  
                           lcd_4bit_send_string_pos@ret 0027  
                           lcd_4bit_send_string_pos@row 0023  
                           lcd_4bit_send_string_pos@str 0025  
                               _gpio_pin_direction_init 14A2  
                                           vfpfcnvrt@ap 0018  
                                           vfpfcnvrt@cp 001B  
                                           vfpfcnvrt@fp 0016  
                                         __pidataCOMRAM 22A0  
                              ecu_relay_initializ@F3061 0046  
                                        __end_of_memset 2250  
                                   start_initialization 1E40  
                           ecu_dc_motor_move_left@F3080 004D  
                           ecu_dc_motor_move_left@F3078 004E  
                          ?_lcd_send_4bit_enable_signal 0014  
                                  ?_lcd_4bit_set_cursor 001E  
                                  _RB4_InterruptHandler 0037  
                         convert_uint16_to_string@value 0029  
                                           __end_of_abs 21EC  
                           ??_ADC_Get_Conversion_Result 0003  
                                           vfprintf@fmt 0022  
                                       lcd_send_4bits@i 0019  
                                           __pdataBANK0 00B8  
                                              ?_ADC_ISR 0001  
                                              ??_memset 0011  
                                            memset@dest 000C  
                          lcd_4bit_send_command@command 001C  
             ADC_Result_Format_Configuration@adc_config 000C  
                                              ?_RB4_ISR 0001  
                                              ?_RB5_ISR 0001  
                                              ?_RB6_ISR 0001  
                                              ?_RB7_ISR 0001  
                                           __pbssCOMRAM 002D  
                                 ??_lcd_4bit_set_cursor 0021  
                                         __pcstackBANK0 00CB  
                         ??_lcd_send_4bit_enable_signal 0015  
                       ??_ADC_Full_Conversion_Interrupt 0015  
                                 _INT2_InterruptHandler 0039  
                                 _application_initializ 22BA  
                              ?_gpio_pin_Initialization 0014  
                             ??_gpio_pin_direction_init 000D  
                             _ADC_Get_Conversion_Result 1980  
                                             __pintcode 0008  
                            ??_convert_uint16_to_string 002C  
                       gpio_pin_write_logic@_pin_config 000C  
                                              ?___awdiv 000C  
                                              ?___awmod 000C  
                                         _lcd_4bit_init 16C4  
                             gpio_pin_write_logic@logic 000D  
                                           __smallconst 1000  
                                              _ADC_Init 17B8  
                                           ADC_Init@ret 0012  
                                _ADC_Interrupt_function 2004  
                                              ?_sprintf 0025  
                                              _INT0_ISR 22FC  
                                              _INT1_ISR 22F8  
                                              _INT2_ISR 22F4  
                            lcd_send_4bits@data_command 0015  
                                              _IPR1bits 0F9F  
                                              _PIE1bits 0F9D  
                                        _keypad_sampels 1001  
                                 ecu_relay_toggle@F3076 0043  
                         __end_of_lcd_4bit_send_command 1FB8  
                            gpio_pin_Initialization@ret 0016  
                                              i2u400_40 1328  
                                              i2u400_41 1324  
                                              i2u401_40 1336  
                                              i2u401_41 1332  
                                              i2u402_40 1348  
                                              i2u402_41 1344  
                                              i2u403_40 1356  
                                              i2u403_41 1352  
                                              i2u404_40 1368  
                                              i2u404_41 1364  
                                              i2u405_40 1376  
                                              i2u405_41 1372  
                                              i2u265_40 1994  
                                              i2u281_40 2014  
                                              i2u265_41 1990  
                                              i2u281_41 2010  
                                              _PIR1bits 0F9E  
                                              i2u266_40 19A4  
                                              i2u282_40 203A  
                                              i2u266_41 19A0  
                                              i2u282_41 2036  
                                              i2u267_45 19EA  
                                  _RB5_InterruptHandler 0035  
                                              i2u390_40 1284  
                                              i2u382_40 1208  
                                              i2u390_41 1280  
                                              i2u382_41 1204  
                                              i2u391_40 1296  
                                              i2u383_40 1216  
                                              i2u391_41 1292  
                                              i2u383_41 1212  
                                              i2u296_40 2264  
                                              i2u392_40 12A8  
                                              i2u384_40 1228  
                                              i2u296_41 2260  
                                              i2u392_41 12A4  
                                              i2u384_41 1224  
                                              i2u393_40 12B6  
                                              i2u385_40 1236  
                                              i2u393_41 12B2  
                                              i2u385_41 1232  
                                              i2u297_48 226A  
                                              i2u394_40 12C4  
                                              i2u386_40 1244  
                                              i2u297_49 227C  
                                              i2u394_41 12C0  
                                              i2u386_41 1240  
                                              i2u395_40 12D6  
                                              i2u387_40 1256  
                                              i2u395_41 12D2  
                                              i2u387_41 1252  
                                              i2u396_40 12E8  
                                              i2u388_40 1268  
                                              i2u396_41 12E4  
                                              i2u388_41 1264  
                                              i2u397_40 12F6  
                                              i2u389_40 1276  
                                              i2u397_41 12F2  
                                              i2u389_41 1272  
                                              i2u398_40 1304  
                                              i2u398_41 1300  
                                              i2u399_40 1316  
                                              i2u399_41 1312  
                                        ?_lcd_4bit_init 001E  
                         lcd_4bit_send_string_pos@colum 0024  
                                             _vfpfcnvrt 1028  
                        ADC_Start_Conversion@adc_config 000C  
                              _lcd_4bit_send_string_pos 1B14  
                                            _ADCON0bits 0FC2  
                                            _ADCON1bits 0FC1  
                                            _ADCON2bits 0FC0  
                                  ecu_led_turn_on@F3066 0049  
                                    _lcd_4bit_send_data 1F00  
                       __end_of_gpio_pin_direction_init 15B4  
                                            vfpfcnvrt@c 0020  
                               gpio_pin_write_logic@ret 0013  
                                   ?_lcd_4bit_send_data 001B  
                                           _INTCON2bits 0FF1  
                                           _INTCON3bits 0FF0  
                                             copy_data0 1E54  
                                             copy_data1 1E74  
           __end_of_ADC_Voltage_Reference_Configuration 2110  
                 ??_ADC_Voltage_Reference_Configuration 000D  
                  ?_ADC_Voltage_Reference_Configuration 000C  
                   _ADC_Voltage_Reference_Configuration 20D2  
                                __end_of_keypad_sampels 1011  
                                ?_application_initializ 0001  
                 __end_of_ADC_Full_Conversion_Interrupt 2220  
                         _ADC_Full_Conversion_Interrupt 21EC  
                                            _EECON1bits 0FA6  
                                              __Hrparam 0000  
                                            vfprintf@ap 0023  
                                              __Lrparam 0000  
                                            vfprintf@fp 0021  
                                  ??_lcd_4bit_send_data 001D  
                                lcd_4bit_set_cursor@lcd 001E  
                                lcd_4bit_set_cursor@ret 0021  
                                            ?_vfpfcnvrt 0016  
                                lcd_4bit_set_cursor@row 001F  
                                            sprintf@fmt 0026  
                                              __ptext10 21B8  
                                              __ptext11 1BD0  
                                              __ptext20 15B4  
                                              __ptext12 1A50  
                                              __ptext21 14A2  
                                              __ptext13 2220  
                                              __ptext30 22E4  
                                              __ptext22 17B8  
                                              __ptext14 22BA  
                                              __ptext31 22E8  
                                              __ptext23 20D2  
                                              __ptext15 16C4  
                                              __ptext32 22EC  
                                              __ptext24 2148  
                                              __ptext16 1F5C  
                                              __ptext33 22F0  
                                              __ptext25 21EC  
                                              __ptext17 1DD0  
                                              __ptext34 22F4  
                                              __ptext26 227E  
                                              __ptext18 204E  
                                              __ptext35 22F8  
                                              __ptext27 2180  
                                              __ptext19 1EA2  
                                              __ptext36 22FC  
                                              __ptext28 18A8  
                                              __ptext37 2250  
                                              __ptext38 2004  
                                              __ptext39 1980  
                                ecu_dc_motor_stop@F3085 004C  
                                ecu_dc_motor_stop@F3087 004B  
                      __end_of_convert_uint16_to_string 2004  
                                       ??_lcd_4bit_init 001F  
                               ecu_relay_turn_off@F3071 0044  
                                              _result_1 00AC  
                                              _result_2 00A0  
                                              isa$xinst 0000  
                                              int$flags 0072  
                                              _vfprintf 2092  
                                        _lcd_send_4bits 1DD0  
                                ecu_led_initializ@F3061 004A  
            ADC_Get_Conversion_Result@conversion_result 0002  
                                            _INTCONbits 0FF2  
                                  _RB6_InterruptHandler 0033  
                          __end_of_gpio_pin_write_logic 16C4  
               __end_of_ADC_Result_Format_Configuration 2180  
                     ??_ADC_Result_Format_Configuration 000D  
                      ?_ADC_Result_Format_Configuration 000C  
                       _ADC_Result_Format_Configuration 2148  
                                              intlevel2 0000  
                                             sprintf@ap 00CB  
                        lcd_send_4bit_enable_signal@lcd 0014  
                                ecu_relay_turn_on@F3066 0045  
                        lcd_send_4bit_enable_signal@ret 0016  
                          __end_of_ADC_Start_Conversion 22A0  
                                 ADC_Select_Channel@ret 0012  
                        ?_ADC_Full_Conversion_Interrupt 0013  
                                __end_of_lcd_send_4bits 1E40  
                                           ??_vfpfcnvrt 0019  
                           __end_of_lcd_4bit_set_cursor 1DD0  
                                              sprintf@f 00CC  
                                              sprintf@s 0025  
                               ?_ADC_Interrupt_function 0001  
                                        _port_registers 00B8  
                            gpio_pin_direction_init@ret 0012  
                                     _Interrupt_Manager 0008  
                            ??_lcd_4bit_send_string_pos 0027  
       ADC_Full_Conversion_Interrupt@adc_channel_select 0014  
                                    ?_Interrupt_Manager 0001  
