

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 08 13:38:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 17/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   001906                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _port_registers
    79   001906  80                 	db	128
    80   001907  0F                 	db	15
    81   001908  81                 	db	129
    82   001909  0F                 	db	15
    83   00190A  82                 	db	130
    84   00190B  0F                 	db	15
    85   00190C  83                 	db	131
    86   00190D  0F                 	db	15
    87   00190E  84                 	db	132
    88   00190F  0F                 	db	15
    89                           
    90                           ;initializer for _lat_registers
    91   001910  89                 	db	137
    92   001911  0F                 	db	15
    93   001912  8A                 	db	138
    94   001913  0F                 	db	15
    95   001914  8B                 	db	139
    96   001915  0F                 	db	15
    97   001916  8C                 	db	140
    98   001917  0F                 	db	15
    99   001918  8D                 	db	141
   100   001919  0F                 	db	15
   101                           
   102                           ;initializer for _tris_registers
   103   00191A  92                 	db	146
   104   00191B  0F                 	db	15
   105   00191C  93                 	db	147
   106   00191D  0F                 	db	15
   107   00191E  94                 	db	148
   108   00191F  0F                 	db	15
   109   001920  95                 	db	149
   110   001921  0F                 	db	15
   111   001922  96                 	db	150
   112   001923  0F                 	db	15
   113                           
   114                           ;initializer for _btn
   115   001924  52                 	db	82
   116   001925  00                 	db	0
   117   001926  01                 	db	1
   118                           
   119                           ;initializer for _led2
   120   001927  12                 	db	18
   121                           
   122                           ;initializer for _led1
   123   001928  02                 	db	2
   124                           
   125                           	psect	smallconst
   126   001000                     __psmallconst:
   127                           	callstack 0
   128   001000  00                 	db	0
   129   001001                     _keypad_sampels:
   130                           	callstack 0
   131   001001  37                 	db	55
   132   001002  38                 	db	56
   133   001003  39                 	db	57
   134   001004  2F                 	db	47
   135   001005  34                 	db	52
   136   001006  35                 	db	53
   137   001007  36                 	db	54
   138   001008  2A                 	db	42
   139   001009  31                 	db	49
   140   00100A  32                 	db	50
   141   00100B  33                 	db	51
   142   00100C  2D                 	db	45
   143   00100D  23                 	db	35
   144   00100E  30                 	db	48
   145   00100F  3D                 	db	61
   146   001010  2B                 	db	43
   147   001011                     __end_of_keypad_sampels:
   148                           	callstack 0
   149   000000                     _EECON2	set	4007
   150   000000                     _INTCON2bits	set	4081
   151   001011                     STR_1:
   152   001011  25                 	db	37
   153   001012  69                 	db	105	;'i'
   154   001013  00                 	db	0
   155   001014  00                 	db	0	; dummy byte at the end
   156   000000                     
   157                           	psect	nvCOMRAM
   158   000055                     __pnvCOMRAM:
   159                           	callstack 0
   160   000055                     _counter:
   161                           	callstack 0
   162   000055                     	ds	1
   163   000056                     _ret:
   164                           	callstack 0
   165   000056                     	ds	1
   166   000000                     _PORTBbits	set	3969
   167   000000                     _PORTE	set	3972
   168   000000                     _PORTD	set	3971
   169   000000                     _PORTC	set	3970
   170   000000                     _PORTB	set	3969
   171   000000                     _PORTA	set	3968
   172   000000                     _LATA	set	3977
   173   000000                     _TRISA	set	3986
   174   000000                     _EECON1bits	set	4006
   175   000000                     _EEDATA	set	4008
   176   000000                     _EEADR	set	4009
   177   000000                     _EEADRH	set	4010
   178   000000                     _INTCON3bits	set	4080
   179   000000                     _INTCONbits	set	4082
   180   000000                     _TRISE	set	3990
   181   000000                     _TRISD	set	3989
   182   000000                     _TRISC	set	3988
   183   000000                     _TRISB	set	3987
   184   000000                     _LATE	set	3981
   185   000000                     _LATD	set	3980
   186   000000                     _LATC	set	3979
   187   000000                     _LATB	set	3978
   188                           
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192   0018AA                     __pcinit:
   193                           	callstack 0
   194   0018AA                     start_initialization:
   195                           	callstack 0
   196   0018AA                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Initialize objects allocated to COMRAM (35 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201   0018AA  0E06               	movlw	low __pidataCOMRAM
   202   0018AC  6EF6               	movwf	tblptrl,c
   203   0018AE  0E19               	movlw	high __pidataCOMRAM
   204   0018B0  6EF7               	movwf	tblptrh,c
   205   0018B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206   0018B4  6EF8               	movwf	tblptru,c
   207   0018B6  EE00  F001         	lfsr	0,__pdataCOMRAM
   208   0018BA  EE10 F023          	lfsr	1,35
   209   0018BE                     copy_data0:
   210   0018BE  0009               	tblrd		*+
   211   0018C0  CFF5 FFEE          	movff	tablat,postinc0
   212   0018C4  50E5               	movf	postdec1,w,c
   213   0018C6  50E1               	movf	fsr1l,w,c
   214   0018C8  E1FA               	bnz	copy_data0
   215                           
   216                           ; Clear objects allocated to COMRAM (34 bytes)
   217   0018CA  EE00  F024         	lfsr	0,__pbssCOMRAM
   218   0018CE  0E22               	movlw	34
   219   0018D0                     clear_0:
   220   0018D0  6AEE               	clrf	postinc0,c
   221   0018D2  06E8               	decf	wreg,f,c
   222   0018D4  E1FD               	bnz	clear_0
   223   0018D6                     end_of_initialization:
   224                           	callstack 0
   225   0018D6                     __end_of__initialization:
   226                           	callstack 0
   227   0018D6  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   228   0018D8  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   229   0018DA  0100               	movlb	0
   230   0018DC  EFCF  F009         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   000024                     __pbssCOMRAM:
   234                           	callstack 0
   235   000024                     _RB7_InterruptHandler:
   236                           	callstack 0
   237   000024                     	ds	2
   238   000026                     _RB6_InterruptHandler:
   239                           	callstack 0
   240   000026                     	ds	2
   241   000028                     _RB5_InterruptHandler:
   242                           	callstack 0
   243   000028                     	ds	2
   244   00002A                     _RB4_InterruptHandler:
   245                           	callstack 0
   246   00002A                     	ds	2
   247   00002C                     _INT2_InterruptHandler:
   248                           	callstack 0
   249   00002C                     	ds	2
   250   00002E                     _INT1_InterruptHandler:
   251                           	callstack 0
   252   00002E                     	ds	2
   253   000030                     _INT0_InterruptHandler:
   254                           	callstack 0
   255   000030                     	ds	2
   256   000032                     _prev_btn_state:
   257                           	callstack 0
   258   000032                     	ds	1
   259   000033                     _high_value:
   260                           	callstack 0
   261   000033                     	ds	1
   262   000034                     ecu_relay_toggle@F3076:
   263                           	callstack 0
   264   000034                     	ds	1
   265   000035                     ecu_relay_turn_off@F3071:
   266                           	callstack 0
   267   000035                     	ds	1
   268   000036                     ecu_relay_turn_on@F3066:
   269                           	callstack 0
   270   000036                     	ds	1
   271   000037                     ecu_relay_initializ@F3061:
   272                           	callstack 0
   273   000037                     	ds	1
   274   000038                     ecu_led_toggle@F3076:
   275                           	callstack 0
   276   000038                     	ds	1
   277   000039                     ecu_led_turn_off@F3071:
   278                           	callstack 0
   279   000039                     	ds	1
   280   00003A                     ecu_led_turn_on@F3066:
   281                           	callstack 0
   282   00003A                     	ds	1
   283   00003B                     ecu_led_initializ@F3061:
   284                           	callstack 0
   285   00003B                     	ds	1
   286   00003C                     ecu_dc_motor_stop@F3087:
   287                           	callstack 0
   288   00003C                     	ds	1
   289   00003D                     ecu_dc_motor_stop@F3085:
   290                           	callstack 0
   291   00003D                     	ds	1
   292   00003E                     ecu_dc_motor_move_left@F3080:
   293                           	callstack 0
   294   00003E                     	ds	1
   295   00003F                     ecu_dc_motor_move_left@F3078:
   296                           	callstack 0
   297   00003F                     	ds	1
   298   000040                     ecu_dc_motor_move_right@F3073:
   299                           	callstack 0
   300   000040                     	ds	1
   301   000041                     ecu_dc_motor_move_right@F3071:
   302                           	callstack 0
   303   000041                     	ds	1
   304   000042                     ecu_dc_motor_initializ@F3066:
   305                           	callstack 0
   306   000042                     	ds	1
   307   000043                     ecu_dc_motor_initializ@F3064:
   308                           	callstack 0
   309   000043                     	ds	1
   310   000044                     _btn_state:
   311                           	callstack 0
   312   000044                     	ds	1
   313   000045                     _ret_data:
   314                           	callstack 0
   315   000045                     	ds	1
   316                           
   317                           	psect	dataCOMRAM
   318   000001                     __pdataCOMRAM:
   319                           	callstack 0
   320   000001                     _port_registers:
   321                           	callstack 0
   322   000001                     	ds	10
   323   00000B                     _lat_registers:
   324                           	callstack 0
   325   00000B                     	ds	10
   326   000015                     _tris_registers:
   327                           	callstack 0
   328   000015                     	ds	10
   329   00001F                     _btn:
   330                           	callstack 0
   331   00001F                     	ds	3
   332   000022                     _led2:
   333                           	callstack 0
   334   000022                     	ds	1
   335   000023                     _led1:
   336                           	callstack 0
   337   000023                     	ds	1
   338                           
   339                           	psect	cstackCOMRAM
   340   000046                     __pcstackCOMRAM:
   341                           	callstack 0
   342   000046                     gpio_pin_direction_init@_pin_config:
   343                           	callstack 0
   344   000046                     gpio_pin_write_logic@_pin_config:
   345                           	callstack 0
   346   000046                     gpio_pin_read_logic@_pin_config:
   347                           	callstack 0
   348   000046                     EEPROM_Data_Write_Byte@address:
   349                           	callstack 0
   350   000046                     EEPROM_Data_Read_Byte@address:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x0
   354   000046                     	ds	1
   355   000047                     ??_gpio_pin_direction_init:
   356   000047                     gpio_pin_write_logic@logic:
   357                           	callstack 0
   358   000047                     gpio_pin_read_logic@logic:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x1
   362   000047                     	ds	1
   363   000048                     ??_gpio_pin_write_logic:
   364   000048                     ??_gpio_pin_read_logic:
   365   000048                     EEPROM_Data_Write_Byte@data:
   366                           	callstack 0
   367   000048                     EEPROM_Data_Read_Byte@return_data:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x2
   371   000048                     	ds	1
   372   000049                     EEPROM_Data_Write_Byte@interrupt_status:
   373                           	callstack 0
   374   000049                     EEPROM_Data_Read_Byte@ret:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x3
   378   000049                     	ds	3
   379   00004C                     gpio_pin_direction_init@ret:
   380                           	callstack 0
   381   00004C                     gpio_pin_read_logic@ret:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x6
   385   00004C                     	ds	1
   386   00004D                     ecu_button_init@_button_config:
   387                           	callstack 0
   388   00004D                     ecu_button_read_state@btn_config:
   389                           	callstack 0
   390   00004D                     gpio_pin_write_logic@ret:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x7
   394   00004D                     	ds	1
   395   00004E                     ecu_button_init@ret:
   396                           	callstack 0
   397   00004E                     ecu_button_read_state@_button_status:
   398                           	callstack 0
   399   00004E                     ecu_led_turn_on@_led_config:
   400                           	callstack 0
   401   00004E                     ecu_led_turn_off@_led_config:
   402                           	callstack 0
   403   00004E                     gpio_pin_Initialization@_pin_config:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x8
   407   00004E                     	ds	1
   408   00004F                     ??_gpio_pin_Initialization:
   409   00004F                     ??_ecu_led_turn_on:
   410   00004F                     ??_ecu_led_turn_off:
   411                           
   412                           ; 1 bytes @ 0x9
   413   00004F                     	ds	1
   414   000050                     ecu_button_read_state@ret:
   415                           	callstack 0
   416   000050                     ecu_led_turn_on@_pin_config:
   417                           	callstack 0
   418   000050                     ecu_led_turn_off@_pin_config:
   419                           	callstack 0
   420   000050                     gpio_pin_Initialization@ret:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xA
   424   000050                     	ds	1
   425   000051                     ecu_button_read_state@pin_logic_status:
   426                           	callstack 0
   427   000051                     ecu_led_initializ@_led_config:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xB
   431   000051                     	ds	1
   432   000052                     ??_ecu_led_initializ:
   433                           
   434                           ; 1 bytes @ 0xC
   435   000052                     	ds	1
   436   000053                     ecu_led_initializ@ret:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0xD
   440   000053                     	ds	1
   441   000054                     ecu_led_initializ@_pin_config:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xE
   445   000054                     	ds	1
   446   000055                     
   447                           ; 1 bytes @ 0xF
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 51 in file "application.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  2  801[None  ] int 
   460 ;; Registers used:
   461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels required when called: 6
   473 ;; This function calls:
   474 ;;		_EEPROM_Data_Write_Byte
   475 ;;		_application_initializ
   476 ;;		_ecu_button_read_state
   477 ;;		_ecu_led_turn_off
   478 ;;		_ecu_led_turn_on
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text0
   485   00139E                     __ptext0:
   486                           	callstack 0
   487   00139E                     _main:
   488                           	callstack 25
   489   00139E                     
   490                           ;application.c: 53:     application_initializ();
   491   00139E  ECF8  F00A         	call	_application_initializ	;wreg free
   492   0013A2                     l3989:
   493                           
   494                           ;application.c: 56:     {;application.c: 57:         ret = ecu_button_read_state(&btn, &
      +                          btn_state);
   495   0013A2  0E1F               	movlw	low _btn
   496   0013A4  6E4D               	movwf	ecu_button_read_state@btn_config^0,c
   497   0013A6  0E44               	movlw	low _btn_state
   498   0013A8  6E4E               	movwf	ecu_button_read_state@_button_status^0,c
   499   0013AA  EC4D  F00A         	call	_ecu_button_read_state	;wreg free
   500   0013AE  6E56               	movwf	_ret^0,c
   501   0013B0                     
   502                           ;application.c: 60:         if (btn_state == BUTTON_PRESSED && prev_btn_state == BUTTON_
      +                          RELEASED)
   503   0013B0  0444               	decf	_btn_state^0,w,c
   504   0013B2  A4D8               	btfss	status,2,c
   505   0013B4  EFDE  F009         	goto	u2781
   506   0013B8  EFE0  F009         	goto	u2780
   507   0013BC                     u2781:
   508   0013BC  EFED  F009         	goto	l3999
   509   0013C0                     u2780:
   510   0013C0  5032               	movf	_prev_btn_state^0,w,c
   511   0013C2  A4D8               	btfss	status,2,c
   512   0013C4  EFE6  F009         	goto	u2791
   513   0013C8  EFE8  F009         	goto	u2790
   514   0013CC                     u2791:
   515   0013CC  EFED  F009         	goto	l3999
   516   0013D0                     u2790:
   517   0013D0                     
   518                           ;application.c: 61:         {;application.c: 62:             high_value++;
   519   0013D0  2A33               	incf	_high_value^0,f,c
   520   0013D2                     
   521                           ;application.c: 63:             prev_btn_state = BUTTON_PRESSED;
   522   0013D2  0E01               	movlw	1
   523   0013D4  6E32               	movwf	_prev_btn_state^0,c
   524                           
   525                           ;application.c: 64:         }
   526   0013D6  EFFF  F009         	goto	l804
   527   0013DA                     l3999:
   528   0013DA  5044               	movf	_btn_state^0,w,c
   529   0013DC  A4D8               	btfss	status,2,c
   530   0013DE  EFF3  F009         	goto	u2801
   531   0013E2  EFF5  F009         	goto	u2800
   532   0013E6                     u2801:
   533   0013E6  EFFF  F009         	goto	l804
   534   0013EA                     u2800:
   535   0013EA  0432               	decf	_prev_btn_state^0,w,c
   536   0013EC  A4D8               	btfss	status,2,c
   537   0013EE  EFFB  F009         	goto	u2811
   538   0013F2  EFFD  F009         	goto	u2810
   539   0013F6                     u2811:
   540   0013F6  EFFF  F009         	goto	l804
   541   0013FA                     u2810:
   542   0013FA                     
   543                           ;application.c: 66:         {;application.c: 67:             prev_btn_state = BUTTON_REL
      +                          EASED;
   544   0013FA  0E00               	movlw	0
   545   0013FC  6E32               	movwf	_prev_btn_state^0,c
   546   0013FE                     l804:
   547                           
   548                           ;application.c: 70:         if (high_value >= 1)
   549   0013FE  5033               	movf	_high_value^0,w,c
   550   001400  B4D8               	btfsc	status,2,c
   551   001402  EF05  F00A         	goto	u2821
   552   001406  EF07  F00A         	goto	u2820
   553   00140A                     u2821:
   554   00140A  EF3C  F00A         	goto	l4023
   555   00140E                     u2820:
   556   00140E                     
   557                           ;application.c: 71:         {;application.c: 72:             high_value = 0;
   558   00140E  0E00               	movlw	0
   559   001410  6E33               	movwf	_high_value^0,c
   560   001412                     
   561                           ;application.c: 73:             counter++;
   562   001412  2A55               	incf	_counter^0,f,c
   563   001414                     
   564                           ;application.c: 74:             if (counter > 3)
   565   001414  0E03               	movlw	3
   566   001416  6455               	cpfsgt	_counter^0,c
   567   001418  EF10  F00A         	goto	u2831
   568   00141C  EF12  F00A         	goto	u2830
   569   001420                     u2831:
   570   001420  EF14  F00A         	goto	l4013
   571   001424                     u2830:
   572   001424                     
   573                           ;application.c: 75:             {;application.c: 76:                 counter = 1;
   574   001424  0E01               	movlw	1
   575   001426  6E55               	movwf	_counter^0,c
   576   001428                     l4013:
   577                           
   578                           ;application.c: 78:             ret = EEPROM_Data_Write_Byte(0x3FF, counter);
   579   001428  0E03               	movlw	3
   580   00142A  6E47               	movwf	(EEPROM_Data_Write_Byte@address+1)^0,c
   581   00142C  6846               	setf	EEPROM_Data_Write_Byte@address^0,c
   582   00142E  C055  F048         	movff	_counter,EEPROM_Data_Write_Byte@data
   583   001432  EC13  F00C         	call	_EEPROM_Data_Write_Byte	;wreg free
   584   001436  6E56               	movwf	_ret^0,c
   585   001438  EF3C  F00A         	goto	l4023
   586   00143C                     l4015:
   587                           
   588                           ;application.c: 85:                 ecu_led_turn_on(&led1);
   589   00143C  0E23               	movlw	low _led1
   590   00143E  6E4E               	movwf	ecu_led_turn_on@_led_config^0,c
   591   001440  EC7A  F00B         	call	_ecu_led_turn_on	;wreg free
   592                           
   593                           ;application.c: 86:                 ecu_led_turn_off(&led2);
   594   001444  0E22               	movlw	low _led2
   595   001446  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
   596   001448  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
   597                           
   598                           ;application.c: 87:                 break;
   599   00144C  EFD1  F009         	goto	l3989
   600   001450                     l4017:
   601                           
   602                           ;application.c: 89:                 ecu_led_turn_on(&led2);
   603   001450  0E22               	movlw	low _led2
   604   001452  6E4E               	movwf	ecu_led_turn_on@_led_config^0,c
   605   001454  EC7A  F00B         	call	_ecu_led_turn_on	;wreg free
   606                           
   607                           ;application.c: 90:                 ecu_led_turn_off(&led1);
   608   001458  0E23               	movlw	low _led1
   609   00145A  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
   610   00145C  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
   611                           
   612                           ;application.c: 91:                 break;
   613   001460  EFD1  F009         	goto	l3989
   614   001464                     l4019:
   615                           
   616                           ;application.c: 93:                 ecu_led_turn_off(&led1);
   617   001464  0E23               	movlw	low _led1
   618   001466  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
   619   001468  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
   620                           
   621                           ;application.c: 94:                 ecu_led_turn_off(&led2);
   622   00146C  0E22               	movlw	low _led2
   623   00146E  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
   624   001470  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
   625                           
   626                           ;application.c: 95:                 break;
   627   001474  EFD1  F009         	goto	l3989
   628   001478                     l4023:
   629   001478  5055               	movf	_counter^0,w,c
   630                           
   631                           ; Switch size 1, requested type "simple"
   632                           ; Number of cases is 3, Range of values is 1 to 3
   633                           ; switch strategies available:
   634                           ; Name         Instructions Cycles
   635                           ; simple_byte           10     6 (average)
   636                           ;	Chosen strategy is simple_byte
   637   00147A  0A01               	xorlw	1	; case 1
   638   00147C  B4D8               	btfsc	status,2,c
   639   00147E  EF1E  F00A         	goto	l4015
   640   001482  0A03               	xorlw	3	; case 2
   641   001484  B4D8               	btfsc	status,2,c
   642   001486  EF28  F00A         	goto	l4017
   643   00148A  0A01               	xorlw	1	; case 3
   644   00148C  B4D8               	btfsc	status,2,c
   645   00148E  EF32  F00A         	goto	l4019
   646   001492  EFD1  F009         	goto	l3989
   647   001496  EF07  F000         	goto	start
   648   00149A                     __end_of_main:
   649                           	callstack 0
   650                           
   651 ;; *************** function _ecu_button_read_state *****************
   652 ;; Defined at:
   653 ;;		line 37 in file "ECU_layer/button/button.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  btn_config      1    7[COMRAM] PTR struct .
   656 ;;		 -> btn(3), 
   657 ;;  _button_stat    1    8[COMRAM] PTR enum E3041
   658 ;;		 -> btn_state(1), 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  pin_logic_st    1   11[COMRAM] enum E2981
   661 ;;  ret             1   10[COMRAM] unsigned char 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      unsigned char 
   664 ;; Registers used:
   665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        5 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 3
   678 ;; This function calls:
   679 ;;		_gpio_pin_read_logic
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text1
   686   00149A                     __ptext1:
   687                           	callstack 0
   688   00149A                     _ecu_button_read_state:
   689                           	callstack 27
   690   00149A                     
   691                           ;ECU_layer/button/button.c: 37: STD_ReturnType ecu_button_read_state(button_config *btn_
      +                          config ,button_status *_button_status);ECU_layer/button/button.c: 38: {;ECU_layer/button
      +                          /button.c: 39:     logic_t pin_logic_status = GPIO_LOW;
   692   00149A  0E00               	movlw	0
   693   00149C  6E51               	movwf	ecu_button_read_state@pin_logic_status^0,c
   694                           
   695                           ;ECU_layer/button/button.c: 42:     if (((void*)0) == btn_config || ((void*)0) == _butto
      +                          n_status)
   696   00149E  504D               	movf	ecu_button_read_state@btn_config^0,w,c
   697   0014A0  B4D8               	btfsc	status,2,c
   698   0014A2  EF55  F00A         	goto	u2041
   699   0014A6  EF57  F00A         	goto	u2040
   700   0014AA                     u2041:
   701   0014AA  EF5F  F00A         	goto	l3259
   702   0014AE                     u2040:
   703   0014AE  504E               	movf	ecu_button_read_state@_button_status^0,w,c
   704   0014B0  A4D8               	btfss	status,2,c
   705   0014B2  EF5D  F00A         	goto	u2051
   706   0014B6  EF5F  F00A         	goto	u2050
   707   0014BA                     u2051:
   708   0014BA  EF63  F00A         	goto	l3261
   709   0014BE                     u2050:
   710   0014BE                     l3259:
   711                           
   712                           ;ECU_layer/button/button.c: 43:     {;ECU_layer/button/button.c: 44:         ret = (STD_
      +                          ReturnType)0x00;
   713   0014BE  0E00               	movlw	0
   714   0014C0  6E50               	movwf	ecu_button_read_state@ret^0,c
   715                           
   716                           ;ECU_layer/button/button.c: 45:     }
   717   0014C2  EFA4  F00A         	goto	l31
   718   0014C6                     l3261:
   719                           
   720                           ;ECU_layer/button/button.c: 47:     {;ECU_layer/button/button.c: 48:         gpio_pin_re
      +                          ad_logic(&(btn_config->button_pin) , &pin_logic_status);
   721   0014C6  C04D  F046         	movff	ecu_button_read_state@btn_config,gpio_pin_read_logic@_pin_config
   722   0014CA  0E51               	movlw	low ecu_button_read_state@pin_logic_status
   723   0014CC  6E47               	movwf	gpio_pin_read_logic@logic^0,c
   724   0014CE  ECA6  F00A         	call	_gpio_pin_read_logic	;wreg free
   725   0014D2                     
   726                           ;ECU_layer/button/button.c: 50:         if(BUTTON_ACTIVE_HIGHT == btn_config->_button_ac
      +                          tiv)
   727   0014D2  504D               	movf	ecu_button_read_state@btn_config^0,w,c
   728   0014D4  6ED9               	movwf	fsr2l,c
   729   0014D6  6ADA               	clrf	fsr2h,c
   730   0014D8  0E02               	movlw	2
   731   0014DA  26D9               	addwf	fsr2l,f,c
   732   0014DC  04DE               	decf	postinc2,w,c
   733   0014DE  A4D8               	btfss	status,2,c
   734   0014E0  EF74  F00A         	goto	u2061
   735   0014E4  EF76  F00A         	goto	u2060
   736   0014E8                     u2061:
   737   0014E8  EF8B  F00A         	goto	l3271
   738   0014EC                     u2060:
   739   0014EC                     
   740                           ;ECU_layer/button/button.c: 51:         {;ECU_layer/button/button.c: 52:             if(
      +                          pin_logic_status == GPIO_HIGH)
   741   0014EC  0451               	decf	ecu_button_read_state@pin_logic_status^0,w,c
   742   0014EE  A4D8               	btfss	status,2,c
   743   0014F0  EF7C  F00A         	goto	u2071
   744   0014F4  EF7E  F00A         	goto	u2070
   745   0014F8                     u2071:
   746   0014F8  EF85  F00A         	goto	l3269
   747   0014FC                     u2070:
   748   0014FC                     l3267:
   749                           
   750                           ;ECU_layer/button/button.c: 53:             {;ECU_layer/button/button.c: 54:            
      +                               *_button_status = BUTTON_PRESSED;
   751   0014FC  504E               	movf	ecu_button_read_state@_button_status^0,w,c
   752   0014FE  6ED9               	movwf	fsr2l,c
   753   001500  6ADA               	clrf	fsr2h,c
   754   001502  0E01               	movlw	1
   755   001504  6EDF               	movwf	indf2,c
   756                           
   757                           ;ECU_layer/button/button.c: 55:             }
   758   001506  EFA2  F00A         	goto	l3279
   759   00150A                     l3269:
   760                           
   761                           ;ECU_layer/button/button.c: 57:             {;ECU_layer/button/button.c: 58:            
      +                               *_button_status = BUTTON_RELEASED;
   762   00150A  504E               	movf	ecu_button_read_state@_button_status^0,w,c
   763   00150C  6ED9               	movwf	fsr2l,c
   764   00150E  6ADA               	clrf	fsr2h,c
   765   001510  6ADF               	clrf	indf2,c
   766   001512  EFA2  F00A         	goto	l3279
   767   001516                     l3271:
   768   001516  504D               	movf	ecu_button_read_state@btn_config^0,w,c
   769   001518  6ED9               	movwf	fsr2l,c
   770   00151A  6ADA               	clrf	fsr2h,c
   771   00151C  0E02               	movlw	2
   772   00151E  26D9               	addwf	fsr2l,f,c
   773   001520  50DF               	movf	indf2,w,c
   774   001522  A4D8               	btfss	status,2,c
   775   001524  EF96  F00A         	goto	u2081
   776   001528  EF98  F00A         	goto	u2080
   777   00152C                     u2081:
   778   00152C  EFA2  F00A         	goto	l3279
   779   001530                     u2080:
   780   001530                     
   781                           ;ECU_layer/button/button.c: 63:         {;ECU_layer/button/button.c: 64:             if(
      +                          pin_logic_status == GPIO_HIGH)
   782   001530  0451               	decf	ecu_button_read_state@pin_logic_status^0,w,c
   783   001532  A4D8               	btfss	status,2,c
   784   001534  EF9E  F00A         	goto	u2091
   785   001538  EFA0  F00A         	goto	u2090
   786   00153C                     u2091:
   787   00153C  EF7E  F00A         	goto	l3267
   788   001540                     u2090:
   789   001540  EF85  F00A         	goto	l3269
   790   001544                     l3279:
   791                           
   792                           ;ECU_layer/button/button.c: 77:         ret = (STD_ReturnType)0x01;
   793   001544  0E01               	movlw	1
   794   001546  6E50               	movwf	ecu_button_read_state@ret^0,c
   795   001548                     l31:
   796                           
   797                           ;ECU_layer/button/button.c: 80:     return ret;
   798   001548  5050               	movf	ecu_button_read_state@ret^0,w,c
   799   00154A  0012               	return		;funcret
   800   00154C                     __end_of_ecu_button_read_state:
   801                           	callstack 0
   802                           
   803 ;; *************** function _gpio_pin_read_logic *****************
   804 ;; Defined at:
   805 ;;		line 109 in file "MCAL_layer/GPIO/gpio.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   808 ;;		 -> btn$button_pin(1), btn(3), 
   809 ;;  logic           1    1[COMRAM] PTR enum E2981
   810 ;;		 -> keypad_get_value@colum_logic(1), ecu_button_read_state@pin_logic_status(1), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  ret             1    6[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      unsigned char 
   815 ;; Registers used:
   816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        7 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 2
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_ecu_button_read_state
   833 ;;		_keypad_get_value
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text2
   838   00154C                     __ptext2:
   839                           	callstack 0
   840   00154C                     _gpio_pin_read_logic:
   841                           	callstack 27
   842   00154C                     
   843                           ;MCAL_layer/GPIO/gpio.c: 109: STD_ReturnType gpio_pin_read_logic(const pin_config *_pin_
      +                          config, logic_t *logic);MCAL_layer/GPIO/gpio.c: 110: {;MCAL_layer/GPIO/gpio.c: 111:     
      +                          STD_ReturnType ret = (STD_ReturnType)0x01;
   844   00154C  0E01               	movlw	1
   845   00154E  6E4C               	movwf	gpio_pin_read_logic@ret^0,c
   846                           
   847                           ;MCAL_layer/GPIO/gpio.c: 112:     if(((void*)0) == _pin_config || ((void*)0) == logic ||
      +                           _pin_config->pin > 8 -1)
   848   001550  5046               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   849   001552  B4D8               	btfsc	status,2,c
   850   001554  EFAE  F00A         	goto	u1841
   851   001558  EFB0  F00A         	goto	u1840
   852   00155C                     u1841:
   853   00155C  EFC8  F00A         	goto	l3089
   854   001560                     u1840:
   855   001560  5047               	movf	gpio_pin_read_logic@logic^0,w,c
   856   001562  B4D8               	btfsc	status,2,c
   857   001564  EFB6  F00A         	goto	u1851
   858   001568  EFB8  F00A         	goto	u1850
   859   00156C                     u1851:
   860   00156C  EFC8  F00A         	goto	l3089
   861   001570                     u1850:
   862   001570  5046               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   863   001572  6ED9               	movwf	fsr2l,c
   864   001574  6ADA               	clrf	fsr2h,c
   865   001576  30DF               	rrcf	223,w,c
   866   001578  32E8               	rrcf	wreg,f,c
   867   00157A  32E8               	rrcf	wreg,f,c
   868   00157C  0B07               	andlw	7
   869   00157E  6E48               	movwf	??_gpio_pin_read_logic^0,c
   870   001580  0E07               	movlw	7
   871   001582  6448               	cpfsgt	??_gpio_pin_read_logic^0,c
   872   001584  EFC6  F00A         	goto	u1861
   873   001588  EFC8  F00A         	goto	u1860
   874   00158C                     u1861:
   875   00158C  EFCC  F00A         	goto	l3091
   876   001590                     u1860:
   877   001590                     l3089:
   878                           
   879                           ;MCAL_layer/GPIO/gpio.c: 113:     {;MCAL_layer/GPIO/gpio.c: 114:         ret = (STD_Retu
      +                          rnType)0x00;
   880   001590  0E00               	movlw	0
   881   001592  6E4C               	movwf	gpio_pin_read_logic@ret^0,c
   882                           
   883                           ;MCAL_layer/GPIO/gpio.c: 115:     }
   884   001594  EFF6  F00A         	goto	l3093
   885   001598                     l3091:
   886                           
   887                           ;MCAL_layer/GPIO/gpio.c: 117:     {;MCAL_layer/GPIO/gpio.c: 118:         *logic = ((*por
      +                          t_registers[_pin_config->port] >> _pin_config->pin)& (uint8)1);
   888   001598  5047               	movf	gpio_pin_read_logic@logic^0,w,c
   889   00159A  6ED9               	movwf	fsr2l,c
   890   00159C  6ADA               	clrf	fsr2h,c
   891   00159E  5046               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   892   0015A0  6EE1               	movwf	fsr1l,c
   893   0015A2  6AE2               	clrf	fsr1h,c
   894   0015A4  30E7               	rrcf	231,w,c
   895   0015A6  32E8               	rrcf	wreg,f,c
   896   0015A8  32E8               	rrcf	wreg,f,c
   897   0015AA  0B07               	andlw	7
   898   0015AC  6E48               	movwf	??_gpio_pin_read_logic^0,c
   899   0015AE  5046               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   900   0015B0  6EE1               	movwf	fsr1l,c
   901   0015B2  6AE2               	clrf	fsr1h,c
   902   0015B4  50E7               	movf	231,w,c
   903   0015B6  0B07               	andlw	7
   904   0015B8  0D02               	mullw	2
   905   0015BA  50F3               	movf	243,w,c
   906   0015BC  0F01               	addlw	low _port_registers
   907   0015BE  6EE1               	movwf	fsr1l,c
   908   0015C0  6AE2               	clrf	fsr1h,c
   909   0015C2  CFE6 F049          	movff	postinc1,??_gpio_pin_read_logic+1
   910   0015C6  CFE5 F04A          	movff	postdec1,??_gpio_pin_read_logic+2
   911   0015CA  C049  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
   912   0015CE  C04A  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
   913   0015D2  50E7               	movf	indf1,w,c
   914   0015D4  6E4B               	movwf	(??_gpio_pin_read_logic+3)^0,c
   915   0015D6  2A48               	incf	??_gpio_pin_read_logic^0,f,c
   916   0015D8  EFF0  F00A         	goto	u1874
   917   0015DC                     u1875:
   918   0015DC  90D8               	bcf	status,0,c
   919   0015DE  324B               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
   920   0015E0                     u1874:
   921   0015E0  2E48               	decfsz	??_gpio_pin_read_logic^0,f,c
   922   0015E2  EFEE  F00A         	goto	u1875
   923   0015E6  504B               	movf	(??_gpio_pin_read_logic+3)^0,w,c
   924   0015E8  0B01               	andlw	1
   925   0015EA  6EDF               	movwf	indf2,c
   926   0015EC                     l3093:
   927                           
   928                           ;MCAL_layer/GPIO/gpio.c: 121:     return ret;
   929   0015EC  504C               	movf	gpio_pin_read_logic@ret^0,w,c
   930   0015EE  0012               	return		;funcret
   931   0015F0                     __end_of_gpio_pin_read_logic:
   932                           	callstack 0
   933                           
   934 ;; *************** function _application_initializ *****************
   935 ;; Defined at:
   936 ;;		line 16 in file "application.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 5
   957 ;; This function calls:
   958 ;;		_EEPROM_Data_Read_Byte
   959 ;;		_ecu_button_init
   960 ;;		_ecu_led_initializ
   961 ;;		_ecu_led_turn_off
   962 ;;		_ecu_led_turn_on
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text3
   969   0015F0                     __ptext3:
   970                           	callstack 0
   971   0015F0                     _application_initializ:
   972                           	callstack 25
   973   0015F0                     
   974                           ;application.c: 18:     ret = ecu_led_initializ(&led1);
   975   0015F0  0E23               	movlw	low _led1
   976   0015F2  6E51               	movwf	ecu_led_initializ@_led_config^0,c
   977   0015F4  EC43  F00B         	call	_ecu_led_initializ	;wreg free
   978   0015F8  6E56               	movwf	_ret^0,c
   979                           
   980                           ;application.c: 19:     ret = ecu_led_initializ(&led2);
   981   0015FA  0E22               	movlw	low _led2
   982   0015FC  6E51               	movwf	ecu_led_initializ@_led_config^0,c
   983   0015FE  EC43  F00B         	call	_ecu_led_initializ	;wreg free
   984   001602  6E56               	movwf	_ret^0,c
   985                           
   986                           ;application.c: 20:     ret = ecu_button_init(&btn);
   987   001604  0E1F               	movlw	low _btn
   988   001606  6E4D               	movwf	ecu_button_init@_button_config^0,c
   989   001608  EC70  F00C         	call	_ecu_button_init	;wreg free
   990   00160C  6E56               	movwf	_ret^0,c
   991   00160E                     
   992                           ;application.c: 23:     ret = EEPROM_Data_Read_Byte(0x3FF, &ret_data);
   993   00160E  0E03               	movlw	3
   994   001610  6E47               	movwf	(EEPROM_Data_Read_Byte@address+1)^0,c
   995   001612  6846               	setf	EEPROM_Data_Read_Byte@address^0,c
   996   001614  0E45               	movlw	low _ret_data
   997   001616  6E48               	movwf	EEPROM_Data_Read_Byte@return_data^0,c
   998   001618  EC36  F00C         	call	_EEPROM_Data_Read_Byte	;wreg free
   999   00161C  6E56               	movwf	_ret^0,c
  1000   00161E                     
  1001                           ;application.c: 26:     counter = ret_data;
  1002   00161E  C045  F055         	movff	_ret_data,_counter
  1003                           
  1004                           ;application.c: 27:     switch(counter)
  1005   001622  EF33  F00B         	goto	l3365
  1006   001626                     l3351:
  1007                           
  1008                           ;application.c: 30:             ecu_led_turn_on(&led1);
  1009   001626  0E23               	movlw	low _led1
  1010   001628  6E4E               	movwf	ecu_led_turn_on@_led_config^0,c
  1011   00162A  EC7A  F00B         	call	_ecu_led_turn_on	;wreg free
  1012                           
  1013                           ;application.c: 31:             ecu_led_turn_off(&led2);
  1014   00162E  0E22               	movlw	low _led2
  1015   001630  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
  1016   001632  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
  1017                           
  1018                           ;application.c: 32:             break;
  1019   001636  EF42  F00B         	goto	l797
  1020   00163A                     l3353:
  1021                           
  1022                           ;application.c: 34:             ecu_led_turn_on(&led2);
  1023   00163A  0E22               	movlw	low _led2
  1024   00163C  6E4E               	movwf	ecu_led_turn_on@_led_config^0,c
  1025   00163E  EC7A  F00B         	call	_ecu_led_turn_on	;wreg free
  1026                           
  1027                           ;application.c: 35:             ecu_led_turn_off(&led1);
  1028   001642  0E23               	movlw	low _led1
  1029   001644  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
  1030   001646  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
  1031                           
  1032                           ;application.c: 36:             break;
  1033   00164A  EF42  F00B         	goto	l797
  1034   00164E                     l3355:
  1035                           
  1036                           ;application.c: 38:             ecu_led_turn_off(&led1);
  1037   00164E  0E23               	movlw	low _led1
  1038   001650  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
  1039   001652  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
  1040                           
  1041                           ;application.c: 39:             ecu_led_turn_off(&led2);
  1042   001656  0E22               	movlw	low _led2
  1043   001658  6E4E               	movwf	ecu_led_turn_off@_led_config^0,c
  1044   00165A  ECAF  F00B         	call	_ecu_led_turn_off	;wreg free
  1045   00165E                     
  1046                           ;application.c: 40:             counter = 0;
  1047   00165E  0E00               	movlw	0
  1048   001660  6E55               	movwf	_counter^0,c
  1049                           
  1050                           ;application.c: 41:             break;
  1051   001662  EF42  F00B         	goto	l797
  1052   001666                     l3365:
  1053   001666  5055               	movf	_counter^0,w,c
  1054                           
  1055                           ; Switch size 1, requested type "simple"
  1056                           ; Number of cases is 3, Range of values is 1 to 3
  1057                           ; switch strategies available:
  1058                           ; Name         Instructions Cycles
  1059                           ; simple_byte           10     6 (average)
  1060                           ;	Chosen strategy is simple_byte
  1061   001668  0A01               	xorlw	1	; case 1
  1062   00166A  B4D8               	btfsc	status,2,c
  1063   00166C  EF13  F00B         	goto	l3351
  1064   001670  0A03               	xorlw	3	; case 2
  1065   001672  B4D8               	btfsc	status,2,c
  1066   001674  EF1D  F00B         	goto	l3353
  1067   001678  0A01               	xorlw	1	; case 3
  1068   00167A  B4D8               	btfsc	status,2,c
  1069   00167C  EF27  F00B         	goto	l3355
  1070   001680  EF27  F00B         	goto	l3355
  1071   001684                     l797:
  1072   001684  0012               	return		;funcret
  1073   001686                     __end_of_application_initializ:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _ecu_led_turn_on *****************
  1077 ;; Defined at:
  1078 ;;		line 39 in file "ECU_layer/led/ecu_led.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  _led_config     1    8[COMRAM] PTR const struct .
  1081 ;;		 -> led2(1), led1(1), 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  _pin_config     1   10[COMRAM] struct .
  1084 ;;  ret             1    0        unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      unsigned char 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;Total ram usage:        3 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 3
  1101 ;; This function calls:
  1102 ;;		_gpio_pin_write_logic
  1103 ;; This function is called by:
  1104 ;;		_application_initializ
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text4
  1110   0016F4                     __ptext4:
  1111                           	callstack 0
  1112   0016F4                     _ecu_led_turn_on:
  1113                           	callstack 27
  1114   0016F4                     
  1115                           ;ECU_layer/led/ecu_led.c: 43:     if (((void*)0) == _led_config) {
  1116   0016F4  504E               	movf	ecu_led_turn_on@_led_config^0,w,c
  1117   0016F6  A4D8               	btfss	status,2,c
  1118   0016F8  EF80  F00B         	goto	u1991
  1119   0016FC  EF82  F00B         	goto	u1990
  1120   001700                     u1991:
  1121   001700  EF84  F00B         	goto	l313
  1122   001704                     u1990:
  1123   001704                     
  1124                           ;ECU_layer/led/ecu_led.c: 45:     } else {
  1125   001704  EFAE  F00B         	goto	l317
  1126   001708                     l313:
  1127                           
  1128                           ;ECU_layer/led/ecu_led.c: 46:         pin_config _pin_config ={
  1129   001708  C03A  F050         	movff	ecu_led_turn_on@F3066,ecu_led_turn_on@_pin_config
  1130   00170C  504E               	movf	ecu_led_turn_on@_led_config^0,w,c
  1131   00170E  6ED9               	movwf	fsr2l,c
  1132   001710  6ADA               	clrf	fsr2h,c
  1133   001712  50DF               	movf	223,w,c
  1134   001714  0B0F               	andlw	15
  1135   001716  6E4F               	movwf	??_ecu_led_turn_on^0,c
  1136   001718  5050               	movf	ecu_led_turn_on@_pin_config^0,w,c
  1137   00171A  184F               	xorwf	??_ecu_led_turn_on^0,w,c
  1138   00171C  0BF8               	andlw	-8
  1139   00171E  184F               	xorwf	??_ecu_led_turn_on^0,w,c
  1140   001720  6E50               	movwf	ecu_led_turn_on@_pin_config^0,c
  1141   001722  504E               	movf	ecu_led_turn_on@_led_config^0,w,c
  1142   001724  6ED9               	movwf	fsr2l,c
  1143   001726  6ADA               	clrf	fsr2h,c
  1144   001728  38DF               	swapf	223,w,c
  1145   00172A  0B07               	andlw	7
  1146   00172C  6E4F               	movwf	??_ecu_led_turn_on^0,c
  1147   00172E  464F               	rlncf	??_ecu_led_turn_on^0,f,c
  1148   001730  464F               	rlncf	??_ecu_led_turn_on^0,f,c
  1149   001732  464F               	rlncf	??_ecu_led_turn_on^0,f,c
  1150   001734  5050               	movf	ecu_led_turn_on@_pin_config^0,w,c
  1151   001736  184F               	xorwf	??_ecu_led_turn_on^0,w,c
  1152   001738  0BC7               	andlw	-57
  1153   00173A  184F               	xorwf	??_ecu_led_turn_on^0,w,c
  1154   00173C  6E50               	movwf	ecu_led_turn_on@_pin_config^0,c
  1155   00173E  9C50               	bcf	ecu_led_turn_on@_pin_config^0,6,c
  1156   001740  504E               	movf	ecu_led_turn_on@_led_config^0,w,c
  1157   001742  6ED9               	movwf	fsr2l,c
  1158   001744  6ADA               	clrf	fsr2h,c
  1159   001746  AEDF               	btfss	indf2,7,c
  1160   001748  D002               	bra	u2005
  1161   00174A  8E50               	bsf	ecu_led_turn_on@_pin_config^0,7,c
  1162   00174C  D001               	bra	u2007
  1163   00174E                     u2005:
  1164   00174E  9E50               	bcf	ecu_led_turn_on@_pin_config^0,7,c
  1165   001750                     u2007:
  1166   001750  0E50               	movlw	low ecu_led_turn_on@_pin_config
  1167   001752  6E46               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1168   001754  0E01               	movlw	1
  1169   001756  6E47               	movwf	gpio_pin_write_logic@logic^0,c
  1170   001758  EC47  F009         	call	_gpio_pin_write_logic	;wreg free
  1171   00175C                     l317:
  1172   00175C  0012               	return		;funcret
  1173   00175E                     __end_of_ecu_led_turn_on:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _ecu_led_turn_off *****************
  1177 ;; Defined at:
  1178 ;;		line 63 in file "ECU_layer/led/ecu_led.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  _led_config     1    8[COMRAM] PTR const struct .
  1181 ;;		 -> led2(1), led1(1), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  _pin_config     1   10[COMRAM] struct .
  1184 ;;  ret             1    0        unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      unsigned char 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1194 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;Total ram usage:        3 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 3
  1201 ;; This function calls:
  1202 ;;		_gpio_pin_write_logic
  1203 ;; This function is called by:
  1204 ;;		_application_initializ
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text5
  1210   00175E                     __ptext5:
  1211                           	callstack 0
  1212   00175E                     _ecu_led_turn_off:
  1213                           	callstack 27
  1214   00175E                     
  1215                           ;ECU_layer/led/ecu_led.c: 67:     if (((void*)0) == _led_config) {
  1216   00175E  504E               	movf	ecu_led_turn_off@_led_config^0,w,c
  1217   001760  A4D8               	btfss	status,2,c
  1218   001762  EFB5  F00B         	goto	u2011
  1219   001766  EFB7  F00B         	goto	u2010
  1220   00176A                     u2011:
  1221   00176A  EFB9  F00B         	goto	l320
  1222   00176E                     u2010:
  1223   00176E                     
  1224                           ;ECU_layer/led/ecu_led.c: 69:     } else {
  1225   00176E  EFE3  F00B         	goto	l324
  1226   001772                     l320:
  1227                           
  1228                           ;ECU_layer/led/ecu_led.c: 70:         pin_config _pin_config ={
  1229   001772  C039  F050         	movff	ecu_led_turn_off@F3071,ecu_led_turn_off@_pin_config
  1230   001776  504E               	movf	ecu_led_turn_off@_led_config^0,w,c
  1231   001778  6ED9               	movwf	fsr2l,c
  1232   00177A  6ADA               	clrf	fsr2h,c
  1233   00177C  50DF               	movf	223,w,c
  1234   00177E  0B0F               	andlw	15
  1235   001780  6E4F               	movwf	??_ecu_led_turn_off^0,c
  1236   001782  5050               	movf	ecu_led_turn_off@_pin_config^0,w,c
  1237   001784  184F               	xorwf	??_ecu_led_turn_off^0,w,c
  1238   001786  0BF8               	andlw	-8
  1239   001788  184F               	xorwf	??_ecu_led_turn_off^0,w,c
  1240   00178A  6E50               	movwf	ecu_led_turn_off@_pin_config^0,c
  1241   00178C  504E               	movf	ecu_led_turn_off@_led_config^0,w,c
  1242   00178E  6ED9               	movwf	fsr2l,c
  1243   001790  6ADA               	clrf	fsr2h,c
  1244   001792  38DF               	swapf	223,w,c
  1245   001794  0B07               	andlw	7
  1246   001796  6E4F               	movwf	??_ecu_led_turn_off^0,c
  1247   001798  464F               	rlncf	??_ecu_led_turn_off^0,f,c
  1248   00179A  464F               	rlncf	??_ecu_led_turn_off^0,f,c
  1249   00179C  464F               	rlncf	??_ecu_led_turn_off^0,f,c
  1250   00179E  5050               	movf	ecu_led_turn_off@_pin_config^0,w,c
  1251   0017A0  184F               	xorwf	??_ecu_led_turn_off^0,w,c
  1252   0017A2  0BC7               	andlw	-57
  1253   0017A4  184F               	xorwf	??_ecu_led_turn_off^0,w,c
  1254   0017A6  6E50               	movwf	ecu_led_turn_off@_pin_config^0,c
  1255   0017A8  9C50               	bcf	ecu_led_turn_off@_pin_config^0,6,c
  1256   0017AA  504E               	movf	ecu_led_turn_off@_led_config^0,w,c
  1257   0017AC  6ED9               	movwf	fsr2l,c
  1258   0017AE  6ADA               	clrf	fsr2h,c
  1259   0017B0  AEDF               	btfss	indf2,7,c
  1260   0017B2  D002               	bra	u2025
  1261   0017B4  8E50               	bsf	ecu_led_turn_off@_pin_config^0,7,c
  1262   0017B6  D001               	bra	u2027
  1263   0017B8                     u2025:
  1264   0017B8  9E50               	bcf	ecu_led_turn_off@_pin_config^0,7,c
  1265   0017BA                     u2027:
  1266   0017BA  0E50               	movlw	low ecu_led_turn_off@_pin_config
  1267   0017BC  6E46               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1268   0017BE  0E00               	movlw	0
  1269   0017C0  6E47               	movwf	gpio_pin_write_logic@logic^0,c
  1270   0017C2  EC47  F009         	call	_gpio_pin_write_logic	;wreg free
  1271   0017C6                     l324:
  1272   0017C6  0012               	return		;funcret
  1273   0017C8                     __end_of_ecu_led_turn_off:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _ecu_led_initializ *****************
  1277 ;; Defined at:
  1278 ;;		line 14 in file "ECU_layer/led/ecu_led.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  _led_config     1   11[COMRAM] PTR const struct .
  1281 ;;		 -> led2(1), led1(1), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  _pin_config     1   14[COMRAM] struct .
  1284 ;;  ret             1   13[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        4 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 4
  1301 ;; This function calls:
  1302 ;;		_gpio_pin_Initialization
  1303 ;; This function is called by:
  1304 ;;		_application_initializ
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text6
  1309   001686                     __ptext6:
  1310                           	callstack 0
  1311   001686                     _ecu_led_initializ:
  1312                           	callstack 25
  1313   001686                     
  1314                           ;ECU_layer/led/ecu_led.c: 18:     if (((void*)0) == _led_config) {
  1315   001686  5051               	movf	ecu_led_initializ@_led_config^0,w,c
  1316   001688  A4D8               	btfss	status,2,c
  1317   00168A  EF49  F00B         	goto	u1971
  1318   00168E  EF4B  F00B         	goto	u1970
  1319   001692                     u1971:
  1320   001692  EF4F  F00B         	goto	l306
  1321   001696                     u1970:
  1322   001696                     
  1323                           ;ECU_layer/led/ecu_led.c: 19:         ret = (STD_ReturnType)0x00;
  1324   001696  0E00               	movlw	0
  1325   001698  6E53               	movwf	ecu_led_initializ@ret^0,c
  1326                           
  1327                           ;ECU_layer/led/ecu_led.c: 20:     } else {
  1328   00169A  EF78  F00B         	goto	l3199
  1329   00169E                     l306:
  1330                           
  1331                           ;ECU_layer/led/ecu_led.c: 21:         pin_config _pin_config ={
  1332   00169E  C03B  F054         	movff	ecu_led_initializ@F3061,ecu_led_initializ@_pin_config
  1333   0016A2  5051               	movf	ecu_led_initializ@_led_config^0,w,c
  1334   0016A4  6ED9               	movwf	fsr2l,c
  1335   0016A6  6ADA               	clrf	fsr2h,c
  1336   0016A8  50DF               	movf	223,w,c
  1337   0016AA  0B0F               	andlw	15
  1338   0016AC  6E52               	movwf	??_ecu_led_initializ^0,c
  1339   0016AE  5054               	movf	ecu_led_initializ@_pin_config^0,w,c
  1340   0016B0  1852               	xorwf	??_ecu_led_initializ^0,w,c
  1341   0016B2  0BF8               	andlw	-8
  1342   0016B4  1852               	xorwf	??_ecu_led_initializ^0,w,c
  1343   0016B6  6E54               	movwf	ecu_led_initializ@_pin_config^0,c
  1344   0016B8  5051               	movf	ecu_led_initializ@_led_config^0,w,c
  1345   0016BA  6ED9               	movwf	fsr2l,c
  1346   0016BC  6ADA               	clrf	fsr2h,c
  1347   0016BE  38DF               	swapf	223,w,c
  1348   0016C0  0B07               	andlw	7
  1349   0016C2  6E52               	movwf	??_ecu_led_initializ^0,c
  1350   0016C4  4652               	rlncf	??_ecu_led_initializ^0,f,c
  1351   0016C6  4652               	rlncf	??_ecu_led_initializ^0,f,c
  1352   0016C8  4652               	rlncf	??_ecu_led_initializ^0,f,c
  1353   0016CA  5054               	movf	ecu_led_initializ@_pin_config^0,w,c
  1354   0016CC  1852               	xorwf	??_ecu_led_initializ^0,w,c
  1355   0016CE  0BC7               	andlw	-57
  1356   0016D0  1852               	xorwf	??_ecu_led_initializ^0,w,c
  1357   0016D2  6E54               	movwf	ecu_led_initializ@_pin_config^0,c
  1358   0016D4  9C54               	bcf	ecu_led_initializ@_pin_config^0,6,c
  1359   0016D6  5051               	movf	ecu_led_initializ@_led_config^0,w,c
  1360   0016D8  6ED9               	movwf	fsr2l,c
  1361   0016DA  6ADA               	clrf	fsr2h,c
  1362   0016DC  AEDF               	btfss	indf2,7,c
  1363   0016DE  D002               	bra	u1985
  1364   0016E0  8E54               	bsf	ecu_led_initializ@_pin_config^0,7,c
  1365   0016E2  D001               	bra	u1987
  1366   0016E4                     u1985:
  1367   0016E4  9E54               	bcf	ecu_led_initializ@_pin_config^0,7,c
  1368   0016E6                     u1987:
  1369   0016E6                     
  1370                           ;ECU_layer/led/ecu_led.c: 28:         ret = gpio_pin_Initialization(&_pin_config);
  1371   0016E6  0E54               	movlw	low ecu_led_initializ@_pin_config
  1372   0016E8  6E4E               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1373   0016EA  ECE4  F00B         	call	_gpio_pin_Initialization	;wreg free
  1374   0016EE  6E53               	movwf	ecu_led_initializ@ret^0,c
  1375   0016F0                     l3199:
  1376                           
  1377                           ;ECU_layer/led/ecu_led.c: 31:     return ret;
  1378   0016F0  5053               	movf	ecu_led_initializ@ret^0,w,c
  1379   0016F2  0012               	return		;funcret
  1380   0016F4                     __end_of_ecu_led_initializ:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _gpio_pin_Initialization *****************
  1384 ;; Defined at:
  1385 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1388 ;;		 -> ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), e
      +cu_dc_motor_initializ@dc_motor_pin_1(1), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  ret             1   10[COMRAM] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        3 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 3
  1407 ;; This function calls:
  1408 ;;		_gpio_pin_direction_init
  1409 ;;		_gpio_pin_write_logic
  1410 ;; This function is called by:
  1411 ;;		_ecu_led_initializ
  1412 ;;		_seg_initialization
  1413 ;;		_ecu_dc_motor_initializ
  1414 ;;		_keypad_initialize
  1415 ;;		_lcd_4bit_init
  1416 ;;		_lcd_8bit_init
  1417 ;;		_ecu_relay_initializ
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text7
  1422   0017C8                     __ptext7:
  1423                           	callstack 0
  1424   0017C8                     _gpio_pin_Initialization:
  1425                           	callstack 25
  1426   0017C8                     
  1427                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
  1428   0017C8  504E               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1429   0017CA  B4D8               	btfsc	status,2,c
  1430   0017CC  EFEA  F00B         	goto	u1811
  1431   0017D0  EFEC  F00B         	goto	u1810
  1432   0017D4                     u1811:
  1433   0017D4  EFFC  F00B         	goto	l3065
  1434   0017D8                     u1810:
  1435   0017D8  504E               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1436   0017DA  6ED9               	movwf	fsr2l,c
  1437   0017DC  6ADA               	clrf	fsr2h,c
  1438   0017DE  30DF               	rrcf	223,w,c
  1439   0017E0  32E8               	rrcf	wreg,f,c
  1440   0017E2  32E8               	rrcf	wreg,f,c
  1441   0017E4  0B07               	andlw	7
  1442   0017E6  6E4F               	movwf	??_gpio_pin_Initialization^0,c
  1443   0017E8  0E07               	movlw	7
  1444   0017EA  644F               	cpfsgt	??_gpio_pin_Initialization^0,c
  1445   0017EC  EFFA  F00B         	goto	u1821
  1446   0017F0  EFFC  F00B         	goto	u1820
  1447   0017F4                     u1821:
  1448   0017F4  EF00  F00C         	goto	l3067
  1449   0017F8                     u1820:
  1450   0017F8                     l3065:
  1451                           
  1452                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
  1453   0017F8  0E00               	movlw	0
  1454   0017FA  6E50               	movwf	gpio_pin_Initialization@ret^0,c
  1455                           
  1456                           ;MCAL_layer/GPIO/gpio.c: 154:     }
  1457   0017FC  EF11  F00C         	goto	l3069
  1458   001800                     l3067:
  1459                           
  1460                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
  1461   001800  C04E  F046         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
  1462   001804  ECBE  F008         	call	_gpio_pin_direction_init	;wreg free
  1463   001808  6E50               	movwf	gpio_pin_Initialization@ret^0,c
  1464                           
  1465                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
  1466   00180A  C04E  F046         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
  1467   00180E  504E               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1468   001810  6ED9               	movwf	fsr2l,c
  1469   001812  6ADA               	clrf	fsr2h,c
  1470   001814  0E00               	movlw	0
  1471   001816  BEDF               	btfsc	indf2,7,c
  1472   001818  0E01               	movlw	1
  1473   00181A  6E47               	movwf	gpio_pin_write_logic@logic^0,c
  1474   00181C  EC47  F009         	call	_gpio_pin_write_logic	;wreg free
  1475   001820  6E50               	movwf	gpio_pin_Initialization@ret^0,c
  1476   001822                     l3069:
  1477                           
  1478                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
  1479   001822  5050               	movf	gpio_pin_Initialization@ret^0,w,c
  1480   001824  0012               	return		;funcret
  1481   001826                     __end_of_gpio_pin_Initialization:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _gpio_pin_write_logic *****************
  1485 ;; Defined at:
  1486 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1489 ;;		 -> ecu_relay_turn_off@relay_init(1), ecu_relay_turn_on@relay_init(1), ecu_relay_initializ@relay_init(1), ecu_led_tu
      +rn_off@_pin_config(1), 
  1490 ;;		 -> ecu_led_turn_on@_pin_config(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_stop@dc_motor_pin_2(1), ecu_dc_mo
      +tor_stop@dc_motor_pin_1(1), 
  1491 ;;		 -> ecu_dc_motor_move_left@dc_motor_pin_2(1), ecu_dc_motor_move_left@dc_motor_pin_1(1), ecu_dc_motor_move_right@dc_m
      +otor_pin_2(1), ecu_dc_motor_move_right@dc_motor_pin_1(1), 
  1492 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1493 ;;  logic           1    1[COMRAM] enum E2981
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  ret             1    7[COMRAM] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;Total ram usage:        8 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 2
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_ecu_led_turn_on
  1516 ;;		_ecu_led_turn_off
  1517 ;;		_gpio_pin_Initialization
  1518 ;;		_seg_write_number
  1519 ;;		_ecu_dc_motor_move_right
  1520 ;;		_ecu_dc_motor_move_left
  1521 ;;		_ecu_dc_motor_stop
  1522 ;;		_keypad_get_value
  1523 ;;		_lcd_4bit_send_command
  1524 ;;		_lcd_4bit_send_data
  1525 ;;		_lcd_send_4bits
  1526 ;;		_lcd_send_4bit_enable_signal
  1527 ;;		_lcd_8bit_send_command
  1528 ;;		_lcd_8bit_send_data
  1529 ;;		_lcd_send_8bit_enable_signal
  1530 ;;		_ecu_relay_turn_on
  1531 ;;		_ecu_relay_turn_off
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text8
  1536   00128E                     __ptext8:
  1537                           	callstack 0
  1538   00128E                     _gpio_pin_write_logic:
  1539                           	callstack 27
  1540   00128E                     
  1541                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
  1542   00128E  0E01               	movlw	1
  1543   001290  6E4D               	movwf	gpio_pin_write_logic@ret^0,c
  1544                           
  1545                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1546   001292  5046               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1547   001294  B4D8               	btfsc	status,2,c
  1548   001296  EF4F  F009         	goto	u1721
  1549   00129A  EF51  F009         	goto	u1720
  1550   00129E                     u1721:
  1551   00129E  EF61  F009         	goto	l3025
  1552   0012A2                     u1720:
  1553   0012A2  5046               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1554   0012A4  6ED9               	movwf	fsr2l,c
  1555   0012A6  6ADA               	clrf	fsr2h,c
  1556   0012A8  30DF               	rrcf	223,w,c
  1557   0012AA  32E8               	rrcf	wreg,f,c
  1558   0012AC  32E8               	rrcf	wreg,f,c
  1559   0012AE  0B07               	andlw	7
  1560   0012B0  6E48               	movwf	??_gpio_pin_write_logic^0,c
  1561   0012B2  0E07               	movlw	7
  1562   0012B4  6448               	cpfsgt	??_gpio_pin_write_logic^0,c
  1563   0012B6  EF5F  F009         	goto	u1731
  1564   0012BA  EF61  F009         	goto	u1730
  1565   0012BE                     u1731:
  1566   0012BE  EFB8  F009         	goto	l3033
  1567   0012C2                     u1730:
  1568   0012C2                     l3025:
  1569                           
  1570                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
  1571   0012C2  0E00               	movlw	0
  1572   0012C4  6E4D               	movwf	gpio_pin_write_logic@ret^0,c
  1573                           
  1574                           ;MCAL_layer/GPIO/gpio.c: 82:     }
  1575   0012C6  EFCD  F009         	goto	l3035
  1576   0012CA                     l3027:
  1577                           
  1578                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  1579   0012CA  5046               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1580   0012CC  6ED9               	movwf	fsr2l,c
  1581   0012CE  6ADA               	clrf	fsr2h,c
  1582   0012D0  30DF               	rrcf	223,w,c
  1583   0012D2  32E8               	rrcf	wreg,f,c
  1584   0012D4  32E8               	rrcf	wreg,f,c
  1585   0012D6  0B07               	andlw	7
  1586   0012D8  6E48               	movwf	??_gpio_pin_write_logic^0,c
  1587   0012DA  0E01               	movlw	1
  1588   0012DC  6E49               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1589   0012DE  2A48               	incf	??_gpio_pin_write_logic^0,f,c
  1590   0012E0  EF74  F009         	goto	u1744
  1591   0012E4                     u1745:
  1592   0012E4  90D8               	bcf	status,0,c
  1593   0012E6  3649               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1594   0012E8                     u1744:
  1595   0012E8  2E48               	decfsz	??_gpio_pin_write_logic^0,f,c
  1596   0012EA  EF72  F009         	goto	u1745
  1597   0012EE  5049               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1598   0012F0  0AFF               	xorlw	255
  1599   0012F2  6E4A               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1600   0012F4  5046               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1601   0012F6  6ED9               	movwf	fsr2l,c
  1602   0012F8  6ADA               	clrf	fsr2h,c
  1603   0012FA  50DF               	movf	223,w,c
  1604   0012FC  0B07               	andlw	7
  1605   0012FE  0D02               	mullw	2
  1606   001300  50F3               	movf	243,w,c
  1607   001302  0F0B               	addlw	low _lat_registers
  1608   001304  6ED9               	movwf	fsr2l,c
  1609   001306  6ADA               	clrf	fsr2h,c
  1610   001308  CFDE F04B          	movff	postinc2,??_gpio_pin_write_logic+3
  1611   00130C  CFDD F04C          	movff	postdec2,??_gpio_pin_write_logic+4
  1612   001310  C04B  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1613   001314  C04C  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1614   001318  504A               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1615   00131A  16DF               	andwf	indf2,f,c
  1616                           
  1617                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
  1618   00131C  EFCD  F009         	goto	l3035
  1619   001320                     l3029:
  1620                           
  1621                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  1622   001320  5046               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1623   001322  6ED9               	movwf	fsr2l,c
  1624   001324  6ADA               	clrf	fsr2h,c
  1625   001326  30DF               	rrcf	223,w,c
  1626   001328  32E8               	rrcf	wreg,f,c
  1627   00132A  32E8               	rrcf	wreg,f,c
  1628   00132C  0B07               	andlw	7
  1629   00132E  6E48               	movwf	??_gpio_pin_write_logic^0,c
  1630   001330  0E01               	movlw	1
  1631   001332  6E49               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1632   001334  2A48               	incf	??_gpio_pin_write_logic^0,f,c
  1633   001336  EF9F  F009         	goto	u1754
  1634   00133A                     u1755:
  1635   00133A  90D8               	bcf	status,0,c
  1636   00133C  3649               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1637   00133E                     u1754:
  1638   00133E  2E48               	decfsz	??_gpio_pin_write_logic^0,f,c
  1639   001340  EF9D  F009         	goto	u1755
  1640   001344  5046               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1641   001346  6ED9               	movwf	fsr2l,c
  1642   001348  6ADA               	clrf	fsr2h,c
  1643   00134A  50DF               	movf	223,w,c
  1644   00134C  0B07               	andlw	7
  1645   00134E  0D02               	mullw	2
  1646   001350  50F3               	movf	243,w,c
  1647   001352  0F0B               	addlw	low _lat_registers
  1648   001354  6ED9               	movwf	fsr2l,c
  1649   001356  6ADA               	clrf	fsr2h,c
  1650   001358  CFDE F04A          	movff	postinc2,??_gpio_pin_write_logic+2
  1651   00135C  CFDD F04B          	movff	postdec2,??_gpio_pin_write_logic+3
  1652   001360  C04A  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1653   001364  C04B  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1654   001368  5049               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1655   00136A  12DF               	iorwf	indf2,f,c
  1656                           
  1657                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  1658   00136C  EFCD  F009         	goto	l3035
  1659   001370                     l3033:
  1660   001370  5047               	movf	gpio_pin_write_logic@logic^0,w,c
  1661   001372  6E48               	movwf	??_gpio_pin_write_logic^0,c
  1662   001374  6A49               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1663                           
  1664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1665                           ; Switch size 1, requested type "simple"
  1666                           ; Number of cases is 1, Range of values is 0 to 0
  1667                           ; switch strategies available:
  1668                           ; Name         Instructions Cycles
  1669                           ; simple_byte            4     3 (average)
  1670                           ;	Chosen strategy is simple_byte
  1671   001376  5049               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1672   001378  0A00               	xorlw	0	; case 0
  1673   00137A  B4D8               	btfsc	status,2,c
  1674   00137C  EFC2  F009         	goto	l4029
  1675   001380  EF61  F009         	goto	l3025
  1676   001384                     l4029:
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 2, Range of values is 0 to 1
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte            7     4 (average)
  1683                           ;	Chosen strategy is simple_byte
  1684   001384  5048               	movf	??_gpio_pin_write_logic^0,w,c
  1685   001386  0A00               	xorlw	0	; case 0
  1686   001388  B4D8               	btfsc	status,2,c
  1687   00138A  EF65  F009         	goto	l3027
  1688   00138E  0A01               	xorlw	1	; case 1
  1689   001390  B4D8               	btfsc	status,2,c
  1690   001392  EF90  F009         	goto	l3029
  1691   001396  EF61  F009         	goto	l3025
  1692   00139A                     l3035:
  1693                           
  1694                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  1695   00139A  504D               	movf	gpio_pin_write_logic@ret^0,w,c
  1696   00139C  0012               	return		;funcret
  1697   00139E                     __end_of_gpio_pin_write_logic:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _ecu_button_init *****************
  1701 ;; Defined at:
  1702 ;;		line 15 in file "ECU_layer/button/button.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  _button_conf    1    7[COMRAM] PTR struct .
  1705 ;;		 -> btn(3), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  ret             1    8[COMRAM] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      unsigned char 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1717 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;Total ram usage:        2 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 3
  1724 ;; This function calls:
  1725 ;;		_gpio_pin_direction_init
  1726 ;; This function is called by:
  1727 ;;		_application_initializ
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text9
  1732   0018E0                     __ptext9:
  1733                           	callstack 0
  1734   0018E0                     _ecu_button_init:
  1735                           	callstack 26
  1736   0018E0                     
  1737                           ;ECU_layer/button/button.c: 19:     if (((void*)0) == _button_config)
  1738   0018E0  504D               	movf	ecu_button_init@_button_config^0,w,c
  1739   0018E2  A4D8               	btfss	status,2,c
  1740   0018E4  EF76  F00C         	goto	u1831
  1741   0018E8  EF78  F00C         	goto	u1830
  1742   0018EC                     u1831:
  1743   0018EC  EF7C  F00C         	goto	l3077
  1744   0018F0                     u1830:
  1745   0018F0                     
  1746                           ;ECU_layer/button/button.c: 20:     {;ECU_layer/button/button.c: 21:         ret = (STD_
      +                          ReturnType)0x00;
  1747   0018F0  0E00               	movlw	0
  1748   0018F2  6E4E               	movwf	ecu_button_init@ret^0,c
  1749                           
  1750                           ;ECU_layer/button/button.c: 22:     }
  1751   0018F4  EF81  F00C         	goto	l3079
  1752   0018F8                     l3077:
  1753                           
  1754                           ;ECU_layer/button/button.c: 24:     {;ECU_layer/button/button.c: 25:         ret = gpio_
      +                          pin_direction_init(&(_button_config->button_pin));
  1755   0018F8  C04D  F046         	movff	ecu_button_init@_button_config,gpio_pin_direction_init@_pin_config
  1756   0018FC  ECBE  F008         	call	_gpio_pin_direction_init	;wreg free
  1757   001900  6E4E               	movwf	ecu_button_init@ret^0,c
  1758   001902                     l3079:
  1759                           
  1760                           ;ECU_layer/button/button.c: 28:     return ret;
  1761   001902  504E               	movf	ecu_button_init@ret^0,w,c
  1762   001904  0012               	return		;funcret
  1763   001906                     __end_of_ecu_button_init:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _gpio_pin_direction_init *****************
  1767 ;; Defined at:
  1768 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1771 ;;		 -> btn$button_pin(1), btn(3), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), 
  1772 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  ret             1    6[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        7 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 2
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_ecu_button_init
  1795 ;;		_gpio_pin_Initialization
  1796 ;;		_Interrupt_INTx_Pin_init
  1797 ;;		_Interrupt_RBx_Pin_init
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text10
  1802   00117C                     __ptext10:
  1803                           	callstack 0
  1804   00117C                     _gpio_pin_direction_init:
  1805                           	callstack 25
  1806   00117C                     
  1807                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  1808   00117C  0E01               	movlw	1
  1809   00117E  6E4C               	movwf	gpio_pin_direction_init@ret^0,c
  1810                           
  1811                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1812   001180  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1813   001182  B4D8               	btfsc	status,2,c
  1814   001184  EFC6  F008         	goto	u1761
  1815   001188  EFC8  F008         	goto	u1760
  1816   00118C                     u1761:
  1817   00118C  EFD8  F008         	goto	l3047
  1818   001190                     u1760:
  1819   001190  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1820   001192  6ED9               	movwf	fsr2l,c
  1821   001194  6ADA               	clrf	fsr2h,c
  1822   001196  30DF               	rrcf	223,w,c
  1823   001198  32E8               	rrcf	wreg,f,c
  1824   00119A  32E8               	rrcf	wreg,f,c
  1825   00119C  0B07               	andlw	7
  1826   00119E  6E47               	movwf	??_gpio_pin_direction_init^0,c
  1827   0011A0  0E07               	movlw	7
  1828   0011A2  6447               	cpfsgt	??_gpio_pin_direction_init^0,c
  1829   0011A4  EFD6  F008         	goto	u1771
  1830   0011A8  EFD8  F008         	goto	u1770
  1831   0011AC                     u1771:
  1832   0011AC  EF2F  F009         	goto	l3055
  1833   0011B0                     u1770:
  1834   0011B0                     l3047:
  1835                           
  1836                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  1837   0011B0  0E00               	movlw	0
  1838   0011B2  6E4C               	movwf	gpio_pin_direction_init@ret^0,c
  1839                           
  1840                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  1841   0011B4  EF45  F009         	goto	l3057
  1842   0011B8                     l3049:
  1843                           
  1844                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  1845   0011B8  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1846   0011BA  6ED9               	movwf	fsr2l,c
  1847   0011BC  6ADA               	clrf	fsr2h,c
  1848   0011BE  30DF               	rrcf	223,w,c
  1849   0011C0  32E8               	rrcf	wreg,f,c
  1850   0011C2  32E8               	rrcf	wreg,f,c
  1851   0011C4  0B07               	andlw	7
  1852   0011C6  6E47               	movwf	??_gpio_pin_direction_init^0,c
  1853   0011C8  0E01               	movlw	1
  1854   0011CA  6E48               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1855   0011CC  2A47               	incf	??_gpio_pin_direction_init^0,f,c
  1856   0011CE  EFEB  F008         	goto	u1784
  1857   0011D2                     u1785:
  1858   0011D2  90D8               	bcf	status,0,c
  1859   0011D4  3648               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1860   0011D6                     u1784:
  1861   0011D6  2E47               	decfsz	??_gpio_pin_direction_init^0,f,c
  1862   0011D8  EFE9  F008         	goto	u1785
  1863   0011DC  5048               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1864   0011DE  0AFF               	xorlw	255
  1865   0011E0  6E49               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1866   0011E2  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1867   0011E4  6ED9               	movwf	fsr2l,c
  1868   0011E6  6ADA               	clrf	fsr2h,c
  1869   0011E8  50DF               	movf	223,w,c
  1870   0011EA  0B07               	andlw	7
  1871   0011EC  0D02               	mullw	2
  1872   0011EE  50F3               	movf	243,w,c
  1873   0011F0  0F15               	addlw	low _tris_registers
  1874   0011F2  6ED9               	movwf	fsr2l,c
  1875   0011F4  6ADA               	clrf	fsr2h,c
  1876   0011F6  CFDE F04A          	movff	postinc2,??_gpio_pin_direction_init+3
  1877   0011FA  CFDD F04B          	movff	postdec2,??_gpio_pin_direction_init+4
  1878   0011FE  C04A  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1879   001202  C04B  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1880   001206  5049               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1881   001208  16DF               	andwf	indf2,f,c
  1882                           
  1883                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  1884   00120A  EF45  F009         	goto	l3057
  1885   00120E                     l3051:
  1886                           
  1887                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  1888   00120E  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1889   001210  6ED9               	movwf	fsr2l,c
  1890   001212  6ADA               	clrf	fsr2h,c
  1891   001214  30DF               	rrcf	223,w,c
  1892   001216  32E8               	rrcf	wreg,f,c
  1893   001218  32E8               	rrcf	wreg,f,c
  1894   00121A  0B07               	andlw	7
  1895   00121C  6E47               	movwf	??_gpio_pin_direction_init^0,c
  1896   00121E  0E01               	movlw	1
  1897   001220  6E48               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1898   001222  2A47               	incf	??_gpio_pin_direction_init^0,f,c
  1899   001224  EF16  F009         	goto	u1794
  1900   001228                     u1795:
  1901   001228  90D8               	bcf	status,0,c
  1902   00122A  3648               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1903   00122C                     u1794:
  1904   00122C  2E47               	decfsz	??_gpio_pin_direction_init^0,f,c
  1905   00122E  EF14  F009         	goto	u1795
  1906   001232  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1907   001234  6ED9               	movwf	fsr2l,c
  1908   001236  6ADA               	clrf	fsr2h,c
  1909   001238  50DF               	movf	223,w,c
  1910   00123A  0B07               	andlw	7
  1911   00123C  0D02               	mullw	2
  1912   00123E  50F3               	movf	243,w,c
  1913   001240  0F15               	addlw	low _tris_registers
  1914   001242  6ED9               	movwf	fsr2l,c
  1915   001244  6ADA               	clrf	fsr2h,c
  1916   001246  CFDE F049          	movff	postinc2,??_gpio_pin_direction_init+2
  1917   00124A  CFDD F04A          	movff	postdec2,??_gpio_pin_direction_init+3
  1918   00124E  C049  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1919   001252  C04A  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1920   001256  5048               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1921   001258  12DF               	iorwf	indf2,f,c
  1922                           
  1923                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  1924   00125A  EF45  F009         	goto	l3057
  1925   00125E                     l3055:
  1926   00125E  5046               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1927   001260  6ED9               	movwf	fsr2l,c
  1928   001262  6ADA               	clrf	fsr2h,c
  1929   001264  BCDF               	btfsc	indf2,6,c
  1930   001266  EF37  F009         	goto	u1801
  1931   00126A  EF3A  F009         	goto	u1800
  1932   00126E                     u1801:
  1933   00126E  0E01               	movlw	1
  1934   001270  EF3B  F009         	goto	u1806
  1935   001274                     u1800:
  1936   001274  0E00               	movlw	0
  1937   001276                     u1806:
  1938                           
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 2, Range of values is 0 to 1
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte            7     4 (average)
  1944                           ;	Chosen strategy is simple_byte
  1945   001276  0A00               	xorlw	0	; case 0
  1946   001278  B4D8               	btfsc	status,2,c
  1947   00127A  EFDC  F008         	goto	l3049
  1948   00127E  0A01               	xorlw	1	; case 1
  1949   001280  B4D8               	btfsc	status,2,c
  1950   001282  EF07  F009         	goto	l3051
  1951   001286  EFD8  F008         	goto	l3047
  1952   00128A                     l3057:
  1953                           
  1954                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  1955   00128A  504C               	movf	gpio_pin_direction_init@ret^0,w,c
  1956   00128C  0012               	return		;funcret
  1957   00128E                     __end_of_gpio_pin_direction_init:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _EEPROM_Data_Read_Byte *****************
  1961 ;; Defined at:
  1962 ;;		line 63 in file "MCAL_layer/EEPROM/eeprom.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  address         2    0[COMRAM] unsigned short 
  1965 ;;  return_data     1    2[COMRAM] PTR unsigned char 
  1966 ;;		 -> ret_data(1), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  ret             1    3[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      unsigned char 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        4 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_application_initializ
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text11
  1993   00186C                     __ptext11:
  1994                           	callstack 0
  1995   00186C                     _EEPROM_Data_Read_Byte:
  1996                           	callstack 27
  1997   00186C                     
  1998                           ;MCAL_layer/EEPROM/eeprom.c: 63: STD_ReturnType EEPROM_Data_Read_Byte(uint16 address, ui
      +                          nt8 *return_data);MCAL_layer/EEPROM/eeprom.c: 64: {;MCAL_layer/EEPROM/eeprom.c: 65:     
      +                          STD_ReturnType ret = (STD_ReturnType)0x01;
  1999   00186C  0E01               	movlw	1
  2000   00186E  6E49               	movwf	EEPROM_Data_Read_Byte@ret^0,c
  2001                           
  2002                           ;MCAL_layer/EEPROM/eeprom.c: 67:     if(((void*)0) == return_data)
  2003   001870  5048               	movf	EEPROM_Data_Read_Byte@return_data^0,w,c
  2004   001872  A4D8               	btfss	status,2,c
  2005   001874  EF3E  F00C         	goto	u2031
  2006   001878  EF40  F00C         	goto	u2030
  2007   00187C                     u2031:
  2008   00187C  EF44  F00C         	goto	l3235
  2009   001880                     u2030:
  2010   001880                     
  2011                           ;MCAL_layer/EEPROM/eeprom.c: 68:     {;MCAL_layer/EEPROM/eeprom.c: 69:         ret = (ST
      +                          D_ReturnType)0x00;
  2012   001880  0E00               	movlw	0
  2013   001882  6E49               	movwf	EEPROM_Data_Read_Byte@ret^0,c
  2014                           
  2015                           ;MCAL_layer/EEPROM/eeprom.c: 70:     }
  2016   001884  EF53  F00C         	goto	l3251
  2017   001888                     l3235:
  2018                           
  2019                           ;MCAL_layer/EEPROM/eeprom.c: 72:     {;MCAL_layer/EEPROM/eeprom.c: 74:     EEADRH = (uin
      +                          t8)(address >> 8)&(0x03);
  2020   001888  5047               	movf	(EEPROM_Data_Read_Byte@address+1)^0,w,c
  2021   00188A  0B03               	andlw	3
  2022   00188C  6EAA               	movwf	170,c	;volatile
  2023   00188E                     
  2024                           ;MCAL_layer/EEPROM/eeprom.c: 75:     EEADR = (uint8)(address & 0xFF);
  2025   00188E  C046  FFA9         	movff	EEPROM_Data_Read_Byte@address,4009	;volatile
  2026   001892                     
  2027                           ;MCAL_layer/EEPROM/eeprom.c: 78:     EECON1bits.CFGS = 0;
  2028   001892  9CA6               	bcf	166,6,c	;volsfr
  2029   001894                     
  2030                           ;MCAL_layer/EEPROM/eeprom.c: 79:     EECON1bits.EEPGD = 0;
  2031   001894  9EA6               	bcf	166,7,c	;volsfr
  2032   001896                     
  2033                           ;MCAL_layer/EEPROM/eeprom.c: 82:     EECON1bits.RD = 1;
  2034   001896  80A6               	bsf	166,0,c	;volsfr
  2035   001898                     
  2036                           ;MCAL_layer/EEPROM/eeprom.c: 83:     __nop();
  2037   001898  0000               	nop	
  2038   00189A                     
  2039                           ;MCAL_layer/EEPROM/eeprom.c: 84:     __nop();
  2040   00189A  0000               	nop	
  2041   00189C                     
  2042                           ;MCAL_layer/EEPROM/eeprom.c: 86:     *return_data = EEDATA;
  2043   00189C  5048               	movf	EEPROM_Data_Read_Byte@return_data^0,w,c
  2044   00189E  6ED9               	movwf	fsr2l,c
  2045   0018A0  6ADA               	clrf	fsr2h,c
  2046   0018A2  CFA8 FFDF          	movff	4008,indf2	;volatile
  2047   0018A6                     l3251:
  2048                           
  2049                           ;MCAL_layer/EEPROM/eeprom.c: 89:     return ret;
  2050   0018A6  5049               	movf	EEPROM_Data_Read_Byte@ret^0,w,c
  2051   0018A8  0012               	return		;funcret
  2052   0018AA                     __end_of_EEPROM_Data_Read_Byte:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _EEPROM_Data_Write_Byte *****************
  2056 ;; Defined at:
  2057 ;;		line 16 in file "MCAL_layer/EEPROM/eeprom.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  address         2    0[COMRAM] unsigned short 
  2060 ;;  data            1    2[COMRAM] unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  interrupt_st    1    3[COMRAM] unsigned char 
  2063 ;;  ret             1    0        unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        4 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 2
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text12
  2088   001826                     __ptext12:
  2089                           	callstack 0
  2090   001826                     _EEPROM_Data_Write_Byte:
  2091                           	callstack 28
  2092   001826                     
  2093                           ;MCAL_layer/EEPROM/eeprom.c: 21:     uint8 interrupt_status = INTCONbits.GIE;
  2094   001826  0E00               	movlw	0
  2095   001828  BEF2               	btfsc	242,7,c	;volatile
  2096   00182A  0E01               	movlw	1
  2097   00182C  6E49               	movwf	EEPROM_Data_Write_Byte@interrupt_status^0,c
  2098   00182E                     
  2099                           ;MCAL_layer/EEPROM/eeprom.c: 24:     EEADRH = (uint8)(address >> 8)&(0x03);
  2100   00182E  5047               	movf	(EEPROM_Data_Write_Byte@address+1)^0,w,c
  2101   001830  0B03               	andlw	3
  2102   001832  6EAA               	movwf	170,c	;volatile
  2103   001834                     
  2104                           ;MCAL_layer/EEPROM/eeprom.c: 25:     EEADR = (uint8)(address & 0xFF);
  2105   001834  C046  FFA9         	movff	EEPROM_Data_Write_Byte@address,4009	;volatile
  2106   001838                     
  2107                           ;MCAL_layer/EEPROM/eeprom.c: 28:     EEDATA = data;
  2108   001838  C048  FFA8         	movff	EEPROM_Data_Write_Byte@data,4008	;volatile
  2109   00183C                     
  2110                           ;MCAL_layer/EEPROM/eeprom.c: 31:     EECON1bits.CFGS = 0;
  2111   00183C  9CA6               	bcf	166,6,c	;volsfr
  2112   00183E                     
  2113                           ;MCAL_layer/EEPROM/eeprom.c: 32:     EECON1bits.EEPGD = 0;
  2114   00183E  9EA6               	bcf	166,7,c	;volsfr
  2115   001840                     
  2116                           ;MCAL_layer/EEPROM/eeprom.c: 35:      EECON1bits.WREN = 1;
  2117   001840  84A6               	bsf	166,2,c	;volsfr
  2118   001842                     
  2119                           ;MCAL_layer/EEPROM/eeprom.c: 38:      (INTCONbits.GIE = 0);
  2120   001842  9EF2               	bcf	242,7,c	;volatile
  2121   001844                     
  2122                           ;MCAL_layer/EEPROM/eeprom.c: 40:      EECON2 = 0x55;
  2123   001844  0E55               	movlw	85
  2124   001846  6EA7               	movwf	167,c	;volsfr
  2125   001848                     
  2126                           ;MCAL_layer/EEPROM/eeprom.c: 41:      EECON2 = 0xAA;
  2127   001848  0EAA               	movlw	170
  2128   00184A  6EA7               	movwf	167,c	;volsfr
  2129   00184C                     
  2130                           ;MCAL_layer/EEPROM/eeprom.c: 44:     EECON1bits.WR = 1;
  2131   00184C  82A6               	bsf	166,1,c	;volsfr
  2132   00184E                     l832:
  2133   00184E  B2A6               	btfsc	166,1,c	;volsfr
  2134   001850  EF2C  F00C         	goto	u2161
  2135   001854  EF2E  F00C         	goto	u2160
  2136   001858                     u2161:
  2137   001858  EF27  F00C         	goto	l832
  2138   00185C                     u2160:
  2139   00185C                     
  2140                           ;MCAL_layer/EEPROM/eeprom.c: 50:     EECON1bits.WREN = 0;
  2141   00185C  94A6               	bcf	166,2,c	;volsfr
  2142                           
  2143                           ;MCAL_layer/EEPROM/eeprom.c: 53:     INTCONbits.GIE = interrupt_status;
  2144   00185E  B049               	btfsc	EEPROM_Data_Write_Byte@interrupt_status^0,0,c
  2145   001860  D002               	bra	u2175
  2146   001862  9EF2               	bcf	242,7,c	;volatile
  2147   001864  D001               	bra	u2176
  2148   001866                     u2175:
  2149   001866  8EF2               	bsf	242,7,c	;volatile
  2150   001868                     u2176:
  2151   001868                     
  2152                           ;MCAL_layer/EEPROM/eeprom.c: 54:     return ret;
  2153   001868  0E01               	movlw	1
  2154   00186A  0012               	return		;funcret
  2155   00186C                     __end_of_EEPROM_Data_Write_Byte:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _Interrupt_Manager *****************
  2159 ;; Defined at:
  2160 ;;		line 52 in file "MCAL_layer/Interrupt/interrupt_manager.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 1
  2181 ;; This function calls:
  2182 ;;		_INT0_ISR
  2183 ;;		_INT1_ISR
  2184 ;;		_INT2_ISR
  2185 ;;		_RB4_ISR
  2186 ;;		_RB5_ISR
  2187 ;;		_RB6_ISR
  2188 ;;		_RB7_ISR
  2189 ;; This function is called by:
  2190 ;;		Interrupt level 2
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	intcode
  2195   000008                     __pintcode:
  2196                           	callstack 0
  2197   000008                     _Interrupt_Manager:
  2198                           	callstack 25
  2199                           
  2200                           ;incstack = 0
  2201   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2202   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  2203                           
  2204                           	psect	intcode_body
  2205   001016                     __pintcode_body:
  2206                           	callstack 25
  2207   001016                     int_func:
  2208                           	callstack 25
  2209   001016  0006               	pop		; remove dummy address from shadow register refresh
  2210   001018                     
  2211                           ;MCAL_layer/Interrupt/interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2212   001018  A6F2               	btfss	242,3,c	;volatile
  2213   00101A  EF11  F008         	goto	i2u144_41
  2214   00101E  EF13  F008         	goto	i2u144_40
  2215   001022                     i2u144_41:
  2216   001022  EF2C  F008         	goto	i2l2925
  2217   001026                     i2u144_40:
  2218   001026  A0F2               	btfss	242,0,c	;volatile
  2219   001028  EF18  F008         	goto	i2u145_41
  2220   00102C  EF1A  F008         	goto	i2u145_40
  2221   001030                     i2u145_41:
  2222   001030  EF2C  F008         	goto	i2l2925
  2223   001034                     i2u145_40:
  2224   001034                     
  2225                           ;MCAL_layer/Interrupt/interrupt_manager.c: 56:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 57:         if(PORTBbits.RB5 == GPIO_HIGH)
  2226   001034  AA81               	btfss	129,5,c	;volatile
  2227   001036  EF1F  F008         	goto	i2u146_41
  2228   00103A  EF21  F008         	goto	i2u146_40
  2229   00103E                     i2u146_41:
  2230   00103E  EF23  F008         	goto	i2l2921
  2231   001042                     i2u146_40:
  2232   001042                     
  2233                           ;MCAL_layer/Interrupt/interrupt_manager.c: 58:         RB5_ISR();
  2234   001042  EC99  F00C         	call	_RB5_ISR	;wreg free
  2235   001046                     i2l2921:
  2236                           
  2237                           ;MCAL_layer/Interrupt/interrupt_manager.c: 59:         if(PORTBbits.RB5 == GPIO_LOW)
  2238   001046  BA81               	btfsc	129,5,c	;volatile
  2239   001048  EF28  F008         	goto	i2u147_41
  2240   00104C  EF2A  F008         	goto	i2u147_40
  2241   001050                     i2u147_41:
  2242   001050  EF2C  F008         	goto	i2l2925
  2243   001054                     i2u147_40:
  2244   001054                     
  2245                           ;MCAL_layer/Interrupt/interrupt_manager.c: 60:         RB5_ISR();
  2246   001054  EC99  F00C         	call	_RB5_ISR	;wreg free
  2247   001058                     i2l2925:
  2248                           
  2249                           ;MCAL_layer/Interrupt/interrupt_manager.c: 63:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2250   001058  A6F2               	btfss	242,3,c	;volatile
  2251   00105A  EF31  F008         	goto	i2u148_41
  2252   00105E  EF33  F008         	goto	i2u148_40
  2253   001062                     i2u148_41:
  2254   001062  EF4C  F008         	goto	i2l2937
  2255   001066                     i2u148_40:
  2256   001066  A0F2               	btfss	242,0,c	;volatile
  2257   001068  EF38  F008         	goto	i2u149_41
  2258   00106C  EF3A  F008         	goto	i2u149_40
  2259   001070                     i2u149_41:
  2260   001070  EF4C  F008         	goto	i2l2937
  2261   001074                     i2u149_40:
  2262   001074                     
  2263                           ;MCAL_layer/Interrupt/interrupt_manager.c: 64:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 65:         if(PORTBbits.RB4 == GPIO_HIGH)
  2264   001074  A881               	btfss	129,4,c	;volatile
  2265   001076  EF3F  F008         	goto	i2u150_41
  2266   00107A  EF41  F008         	goto	i2u150_40
  2267   00107E                     i2u150_41:
  2268   00107E  EF43  F008         	goto	i2l2933
  2269   001082                     i2u150_40:
  2270   001082                     
  2271                           ;MCAL_layer/Interrupt/interrupt_manager.c: 66:         RB4_ISR();
  2272   001082  EC9B  F00C         	call	_RB4_ISR	;wreg free
  2273   001086                     i2l2933:
  2274                           
  2275                           ;MCAL_layer/Interrupt/interrupt_manager.c: 67:         if(PORTBbits.RB4 == GPIO_LOW)
  2276   001086  B881               	btfsc	129,4,c	;volatile
  2277   001088  EF48  F008         	goto	i2u151_41
  2278   00108C  EF4A  F008         	goto	i2u151_40
  2279   001090                     i2u151_41:
  2280   001090  EF4C  F008         	goto	i2l2937
  2281   001094                     i2u151_40:
  2282   001094                     
  2283                           ;MCAL_layer/Interrupt/interrupt_manager.c: 68:         RB4_ISR();
  2284   001094  EC9B  F00C         	call	_RB4_ISR	;wreg free
  2285   001098                     i2l2937:
  2286                           
  2287                           ;MCAL_layer/Interrupt/interrupt_manager.c: 72:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2288   001098  A6F2               	btfss	242,3,c	;volatile
  2289   00109A  EF51  F008         	goto	i2u152_41
  2290   00109E  EF53  F008         	goto	i2u152_40
  2291   0010A2                     i2u152_41:
  2292   0010A2  EF6C  F008         	goto	i2l2949
  2293   0010A6                     i2u152_40:
  2294   0010A6  A0F2               	btfss	242,0,c	;volatile
  2295   0010A8  EF58  F008         	goto	i2u153_41
  2296   0010AC  EF5A  F008         	goto	i2u153_40
  2297   0010B0                     i2u153_41:
  2298   0010B0  EF6C  F008         	goto	i2l2949
  2299   0010B4                     i2u153_40:
  2300   0010B4                     
  2301                           ;MCAL_layer/Interrupt/interrupt_manager.c: 73:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 74:         if(PORTBbits.RB6 == GPIO_HIGH)
  2302   0010B4  AC81               	btfss	129,6,c	;volatile
  2303   0010B6  EF5F  F008         	goto	i2u154_41
  2304   0010BA  EF61  F008         	goto	i2u154_40
  2305   0010BE                     i2u154_41:
  2306   0010BE  EF63  F008         	goto	i2l2945
  2307   0010C2                     i2u154_40:
  2308   0010C2                     
  2309                           ;MCAL_layer/Interrupt/interrupt_manager.c: 75:         RB6_ISR();
  2310   0010C2  EC97  F00C         	call	_RB6_ISR	;wreg free
  2311   0010C6                     i2l2945:
  2312                           
  2313                           ;MCAL_layer/Interrupt/interrupt_manager.c: 76:         if(PORTBbits.RB6== GPIO_LOW)
  2314   0010C6  BC81               	btfsc	129,6,c	;volatile
  2315   0010C8  EF68  F008         	goto	i2u155_41
  2316   0010CC  EF6A  F008         	goto	i2u155_40
  2317   0010D0                     i2u155_41:
  2318   0010D0  EF6C  F008         	goto	i2l2949
  2319   0010D4                     i2u155_40:
  2320   0010D4                     
  2321                           ;MCAL_layer/Interrupt/interrupt_manager.c: 77:         RB6_ISR();
  2322   0010D4  EC97  F00C         	call	_RB6_ISR	;wreg free
  2323   0010D8                     i2l2949:
  2324                           
  2325                           ;MCAL_layer/Interrupt/interrupt_manager.c: 80:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
  2326   0010D8  A6F2               	btfss	242,3,c	;volatile
  2327   0010DA  EF71  F008         	goto	i2u156_41
  2328   0010DE  EF73  F008         	goto	i2u156_40
  2329   0010E2                     i2u156_41:
  2330   0010E2  EF8C  F008         	goto	i2l2961
  2331   0010E6                     i2u156_40:
  2332   0010E6  A0F2               	btfss	242,0,c	;volatile
  2333   0010E8  EF78  F008         	goto	i2u157_41
  2334   0010EC  EF7A  F008         	goto	i2u157_40
  2335   0010F0                     i2u157_41:
  2336   0010F0  EF8C  F008         	goto	i2l2961
  2337   0010F4                     i2u157_40:
  2338   0010F4                     
  2339                           ;MCAL_layer/Interrupt/interrupt_manager.c: 81:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 82:         if(PORTBbits.RB7 == GPIO_HIGH)
  2340   0010F4  AE81               	btfss	129,7,c	;volatile
  2341   0010F6  EF7F  F008         	goto	i2u158_41
  2342   0010FA  EF81  F008         	goto	i2u158_40
  2343   0010FE                     i2u158_41:
  2344   0010FE  EF83  F008         	goto	i2l2957
  2345   001102                     i2u158_40:
  2346   001102                     
  2347                           ;MCAL_layer/Interrupt/interrupt_manager.c: 83:         RB7_ISR();
  2348   001102  EC95  F00C         	call	_RB7_ISR	;wreg free
  2349   001106                     i2l2957:
  2350                           
  2351                           ;MCAL_layer/Interrupt/interrupt_manager.c: 84:         if(PORTBbits.RB7 == GPIO_LOW)
  2352   001106  BE81               	btfsc	129,7,c	;volatile
  2353   001108  EF88  F008         	goto	i2u159_41
  2354   00110C  EF8A  F008         	goto	i2u159_40
  2355   001110                     i2u159_41:
  2356   001110  EF8C  F008         	goto	i2l2961
  2357   001114                     i2u159_40:
  2358   001114                     
  2359                           ;MCAL_layer/Interrupt/interrupt_manager.c: 85:         RB7_ISR();
  2360   001114  EC95  F00C         	call	_RB7_ISR	;wreg free
  2361   001118                     i2l2961:
  2362                           
  2363                           ;MCAL_layer/Interrupt/interrupt_manager.c: 88:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF ))
  2364   001118  A8F2               	btfss	242,4,c	;volatile
  2365   00111A  EF91  F008         	goto	i2u160_41
  2366   00111E  EF93  F008         	goto	i2u160_40
  2367   001122                     i2u160_41:
  2368   001122  EF9C  F008         	goto	i2l2967
  2369   001126                     i2u160_40:
  2370   001126  A2F2               	btfss	242,1,c	;volatile
  2371   001128  EF98  F008         	goto	i2u161_41
  2372   00112C  EF9A  F008         	goto	i2u161_40
  2373   001130                     i2u161_41:
  2374   001130  EF9C  F008         	goto	i2l2967
  2375   001134                     i2u161_40:
  2376   001134                     
  2377                           ;MCAL_layer/Interrupt/interrupt_manager.c: 89:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 90:         INT0_ISR();
  2378   001134  ECA1  F00C         	call	_INT0_ISR	;wreg free
  2379   001138                     i2l2967:
  2380                           
  2381                           ;MCAL_layer/Interrupt/interrupt_manager.c: 93:     if((1 == INTCON3bits.INT1IE) && (1 ==
      +                           INTCON3bits.INT1IF ))
  2382   001138  A6F0               	btfss	240,3,c	;volatile
  2383   00113A  EFA1  F008         	goto	i2u162_41
  2384   00113E  EFA3  F008         	goto	i2u162_40
  2385   001142                     i2u162_41:
  2386   001142  EFAC  F008         	goto	i2l2973
  2387   001146                     i2u162_40:
  2388   001146  A0F0               	btfss	240,0,c	;volatile
  2389   001148  EFA8  F008         	goto	i2u163_41
  2390   00114C  EFAA  F008         	goto	i2u163_40
  2391   001150                     i2u163_41:
  2392   001150  EFAC  F008         	goto	i2l2973
  2393   001154                     i2u163_40:
  2394   001154                     
  2395                           ;MCAL_layer/Interrupt/interrupt_manager.c: 94:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 95:         INT1_ISR();
  2396   001154  EC9F  F00C         	call	_INT1_ISR	;wreg free
  2397   001158                     i2l2973:
  2398                           
  2399                           ;MCAL_layer/Interrupt/interrupt_manager.c: 98:     if((1 == INTCON3bits.INT2IE) && (1 ==
      +                           INTCON3bits.INT2IF ))
  2400   001158  A8F0               	btfss	240,4,c	;volatile
  2401   00115A  EFB1  F008         	goto	i2u164_41
  2402   00115E  EFB3  F008         	goto	i2u164_40
  2403   001162                     i2u164_41:
  2404   001162  EFBC  F008         	goto	i2l756
  2405   001166                     i2u164_40:
  2406   001166  A2F0               	btfss	240,1,c	;volatile
  2407   001168  EFB8  F008         	goto	i2u165_41
  2408   00116C  EFBA  F008         	goto	i2u165_40
  2409   001170                     i2u165_41:
  2410   001170  EFBC  F008         	goto	i2l756
  2411   001174                     i2u165_40:
  2412   001174                     
  2413                           ;MCAL_layer/Interrupt/interrupt_manager.c: 99:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 100:         INT2_ISR();
  2414   001174  EC9D  F00C         	call	_INT2_ISR	;wreg free
  2415   001178                     i2l756:
  2416   001178  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2417   00117A  0011               	retfie		f
  2418   00117C                     __end_of_Interrupt_Manager:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _RB7_ISR *****************
  2422 ;; Defined at:
  2423 ;;		line 764 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		None
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_Interrupt_Manager
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text14
  2451   00192A                     __ptext14:
  2452                           	callstack 0
  2453   00192A                     _RB7_ISR:
  2454                           	callstack 25
  2455   00192A                     
  2456                           ;MCAL_layer/Interrupt/external_interrupt.c: 767:     (INTCONbits.RBIF = 0);
  2457   00192A  90F2               	bcf	242,0,c	;volatile
  2458   00192C  0012               	return		;funcret
  2459   00192E                     __end_of_RB7_ISR:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _RB6_ISR *****************
  2463 ;; Defined at:
  2464 ;;		line 749 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		None
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;Total ram usage:        0 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_Interrupt_Manager
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text15
  2492   00192E                     __ptext15:
  2493                           	callstack 0
  2494   00192E                     _RB6_ISR:
  2495                           	callstack 25
  2496   00192E                     
  2497                           ;MCAL_layer/Interrupt/external_interrupt.c: 752:     (INTCONbits.RBIF = 0);
  2498   00192E  90F2               	bcf	242,0,c	;volatile
  2499   001930  0012               	return		;funcret
  2500   001932                     __end_of_RB6_ISR:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _RB5_ISR *****************
  2504 ;; Defined at:
  2505 ;;		line 734 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		None
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_Interrupt_Manager
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text16
  2533   001932                     __ptext16:
  2534                           	callstack 0
  2535   001932                     _RB5_ISR:
  2536                           	callstack 25
  2537   001932                     
  2538                           ;MCAL_layer/Interrupt/external_interrupt.c: 737:     (INTCONbits.RBIF = 0);
  2539   001932  90F2               	bcf	242,0,c	;volatile
  2540   001934  0012               	return		;funcret
  2541   001936                     __end_of_RB5_ISR:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _RB4_ISR *****************
  2545 ;; Defined at:
  2546 ;;		line 720 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		None
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_Interrupt_Manager
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text17
  2574   001936                     __ptext17:
  2575                           	callstack 0
  2576   001936                     _RB4_ISR:
  2577                           	callstack 25
  2578   001936                     
  2579                           ;MCAL_layer/Interrupt/external_interrupt.c: 723:     (INTCONbits.RBIF = 0);
  2580   001936  90F2               	bcf	242,0,c	;volatile
  2581   001938  0012               	return		;funcret
  2582   00193A                     __end_of_RB4_ISR:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _INT2_ISR *****************
  2586 ;; Defined at:
  2587 ;;		line 706 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		None
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_Interrupt_Manager
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text18
  2615   00193A                     __ptext18:
  2616                           	callstack 0
  2617   00193A                     _INT2_ISR:
  2618                           	callstack 25
  2619   00193A                     
  2620                           ;MCAL_layer/Interrupt/external_interrupt.c: 709:     (INTCON3bits.INT2IF = 0);
  2621   00193A  92F0               	bcf	240,1,c	;volatile
  2622   00193C  0012               	return		;funcret
  2623   00193E                     __end_of_INT2_ISR:
  2624                           	callstack 0
  2625                           
  2626 ;; *************** function _INT1_ISR *****************
  2627 ;; Defined at:
  2628 ;;		line 692 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		None
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_Interrupt_Manager
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text19
  2656   00193E                     __ptext19:
  2657                           	callstack 0
  2658   00193E                     _INT1_ISR:
  2659                           	callstack 25
  2660   00193E                     
  2661                           ;MCAL_layer/Interrupt/external_interrupt.c: 695:     (INTCON3bits.INT1IF = 0);
  2662   00193E  90F0               	bcf	240,0,c	;volatile
  2663   001940  0012               	return		;funcret
  2664   001942                     __end_of_INT1_ISR:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _INT0_ISR *****************
  2668 ;; Defined at:
  2669 ;;		line 678 in file "MCAL_layer/Interrupt/external_interrupt.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		None
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_Interrupt_Manager
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text20
  2697   001942                     __ptext20:
  2698                           	callstack 0
  2699   001942                     _INT0_ISR:
  2700                           	callstack 25
  2701   001942                     
  2702                           ;MCAL_layer/Interrupt/external_interrupt.c: 681:     (INTCONbits.INT0IF = 0);
  2703   001942  92F2               	bcf	242,1,c	;volatile
  2704   001944  0012               	return		;funcret
  2705   001946                     __end_of_INT0_ISR:
  2706                           	callstack 0
  2707                           
  2708                           	psect	rparam
  2709   000000                     
  2710                           	psect	temp
  2711   000057                     btemp:
  2712                           	callstack 0
  2713   000057                     	ds	1
  2714   000000                     int$flags	set	btemp
  2715   000000                     wtemp8	set	btemp+1
  2716   000000                     ttemp5	set	btemp+1
  2717   000000                     ttemp6	set	btemp+4
  2718   000000                     ttemp7	set	btemp+8
  2719                           
  2720                           	psect	config
  2721                           
  2722                           ; Padding undefined space
  2723   300000                     	org	3145728
  2724   300000  FF                 	db	255
  2725                           
  2726                           ;Config register CONFIG1H @ 0x300001
  2727                           ;	Oscillator Selection bits
  2728                           ;	OSC = HS, HS oscillator
  2729                           ;	Fail-Safe Clock Monitor Enable bit
  2730                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2731                           ;	Internal/External Oscillator Switchover bit
  2732                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2733   300001                     	org	3145729
  2734   300001  02                 	db	2
  2735                           
  2736                           ;Config register CONFIG2L @ 0x300002
  2737                           ;	Power-up Timer Enable bit
  2738                           ;	PWRT = OFF, PWRT disabled
  2739                           ;	Brown-out Reset Enable bits
  2740                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2741                           ;	Brown Out Reset Voltage bits
  2742                           ;	BORV = 3, Minimum setting
  2743   300002                     	org	3145730
  2744   300002  1F                 	db	31
  2745                           
  2746                           ;Config register CONFIG2H @ 0x300003
  2747                           ;	Watchdog Timer Enable bit
  2748                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2749                           ;	Watchdog Timer Postscale Select bits
  2750                           ;	WDTPS = 32768, 1:32768
  2751   300003                     	org	3145731
  2752   300003  1E                 	db	30
  2753                           
  2754                           ; Padding undefined space
  2755   300004                     	org	3145732
  2756   300004  FF                 	db	255
  2757                           
  2758                           ;Config register CONFIG3H @ 0x300005
  2759                           ;	CCP2 MUX bit
  2760                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2761                           ;	PORTB A/D Enable bit
  2762                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2763                           ;	Low-Power Timer1 Oscillator Enable bit
  2764                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2765                           ;	MCLR Pin Enable bit
  2766                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2767   300005                     	org	3145733
  2768   300005  81                 	db	129
  2769                           
  2770                           ;Config register CONFIG4L @ 0x300006
  2771                           ;	Stack Full/Underflow Reset Enable bit
  2772                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2773                           ;	Single-Supply ICSP Enable bit
  2774                           ;	LVP = OFF, Single-Supply ICSP disabled
  2775                           ;	Extended Instruction Set Enable bit
  2776                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2777                           ;	Background Debugger Enable bit
  2778                           ;	DEBUG = 0x1, unprogrammed default
  2779   300006                     	org	3145734
  2780   300006  81                 	db	129
  2781                           
  2782                           ; Padding undefined space
  2783   300007                     	org	3145735
  2784   300007  FF                 	db	255
  2785                           
  2786                           ;Config register CONFIG5L @ 0x300008
  2787                           ;	Code Protection bit
  2788                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2789                           ;	Code Protection bit
  2790                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2791                           ;	Code Protection bit
  2792                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2793                           ;	Code Protection bit
  2794                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2795   300008                     	org	3145736
  2796   300008  0F                 	db	15
  2797                           
  2798                           ;Config register CONFIG5H @ 0x300009
  2799                           ;	Boot Block Code Protection bit
  2800                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2801                           ;	Data EEPROM Code Protection bit
  2802                           ;	CPD = OFF, Data EEPROM not code-protected
  2803   300009                     	org	3145737
  2804   300009  C0                 	db	192
  2805                           
  2806                           ;Config register CONFIG6L @ 0x30000A
  2807                           ;	Write Protection bit
  2808                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2809                           ;	Write Protection bit
  2810                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2811                           ;	Write Protection bit
  2812                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2813                           ;	Write Protection bit
  2814                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2815   30000A                     	org	3145738
  2816   30000A  0F                 	db	15
  2817                           
  2818                           ;Config register CONFIG6H @ 0x30000B
  2819                           ;	Configuration Register Write Protection bit
  2820                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2821                           ;	Boot Block Write Protection bit
  2822                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2823                           ;	Data EEPROM Write Protection bit
  2824                           ;	WRTD = OFF, Data EEPROM not write-protected
  2825   30000B                     	org	3145739
  2826   30000B  E0                 	db	224
  2827                           
  2828                           ;Config register CONFIG7L @ 0x30000C
  2829                           ;	Table Read Protection bit
  2830                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2831                           ;	Table Read Protection bit
  2832                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2833                           ;	Table Read Protection bit
  2834                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2835                           ;	Table Read Protection bit
  2836                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2837   30000C                     	org	3145740
  2838   30000C  0F                 	db	15
  2839                           
  2840                           ;Config register CONFIG7H @ 0x30000D
  2841                           ;	Boot Block Table Read Protection bit
  2842                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2843   30000D                     	org	3145741
  2844   30000D  40                 	db	64
  2845                           tosu	equ	0xFFF
  2846                           tosh	equ	0xFFE
  2847                           tosl	equ	0xFFD
  2848                           stkptr	equ	0xFFC
  2849                           pclatu	equ	0xFFB
  2850                           pclath	equ	0xFFA
  2851                           pcl	equ	0xFF9
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           prodh	equ	0xFF4
  2857                           prodl	equ	0xFF3
  2858                           indf0	equ	0xFEF
  2859                           postinc0	equ	0xFEE
  2860                           postdec0	equ	0xFED
  2861                           preinc0	equ	0xFEC
  2862                           plusw0	equ	0xFEB
  2863                           fsr0h	equ	0xFEA
  2864                           fsr0l	equ	0xFE9
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           postinc1	equ	0xFE6
  2868                           postdec1	equ	0xFE5
  2869                           preinc1	equ	0xFE4
  2870                           plusw1	equ	0xFE3
  2871                           fsr1h	equ	0xFE2
  2872                           fsr1l	equ	0xFE1
  2873                           bsr	equ	0xFE0
  2874                           indf2	equ	0xFDF
  2875                           postinc2	equ	0xFDE
  2876                           postdec2	equ	0xFDD
  2877                           preinc2	equ	0xFDC
  2878                           plusw2	equ	0xFDB
  2879                           fsr2h	equ	0xFDA
  2880                           fsr2l	equ	0xFD9
  2881                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        35
    BSS         34
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15      86
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ecu_button_init@_button_config	PTR struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), 

    ecu_button_read_state@_button_status	PTR enum E3041 size(1) Largest target is 1
		 -> btn_state(COMRAM[1]), 

    ecu_button_read_state@btn_config	PTR struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), 

    ecu_led_initializ@_led_config	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), 

    ecu_led_turn_off@_led_config	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), 

    ecu_led_turn_on@_led_config	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), 

    EEPROM_Data_Read_Byte@return_data	PTR unsigned char  size(1) Largest target is 1
		 -> ret_data(COMRAM[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), btn$button_pin(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), btn$button_pin(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E2981 size(1) Largest target is 1
		 -> ecu_button_read_state@pin_logic_status(COMRAM[1]), keypad_get_value@colum_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@_interrupt_RBx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    INTx_Set_Interrupt_Handler@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2026$buffer	PTR unsigned char  size(2) Largest target is 0

    S2026$source	PTR const unsigned char  size(2) Largest target is 0

    S860$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S902$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhllll[1]), TRISC(BITBIGSFRhllll[1]), TRISD(BITBIGSFRhllll[1]), 
		 -> TRISE(BITBIGSFRhllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _ecu_button_read_state->_gpio_pin_read_logic
    _application_initializ->_ecu_led_initializ
    _ecu_led_turn_on->_gpio_pin_write_logic
    _ecu_led_turn_off->_gpio_pin_write_logic
    _ecu_led_initializ->_gpio_pin_Initialization
    _gpio_pin_Initialization->_gpio_pin_write_logic
    _ecu_button_init->_gpio_pin_direction_init

Critical Paths under _Interrupt_Manager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_Manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29019
             _EEPROM_Data_Write_Byte
              _application_initializ
              _ecu_button_read_state
                   _ecu_led_turn_off
                    _ecu_led_turn_on
 ---------------------------------------------------------------------------------
 (1) _ecu_button_read_state                                5     3      2     904
                                              7 COMRAM     5     3      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     460
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0   17659
              _EEPROM_Data_Read_Byte
                    _ecu_button_init
                  _ecu_led_initializ
                   _ecu_led_turn_off
                    _ecu_led_turn_on
 ---------------------------------------------------------------------------------
 (1) _ecu_led_turn_on                                      4     3      1    4868
                                              8 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_led_turn_off                                     4     3      1    5324
                                              8 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _ecu_led_initializ                                    4     3      1    6575
                                             11 COMRAM     4     3      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    6270
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    4435
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _ecu_button_init                                      2     1      1     628
                                              7 COMRAM     2     1      1
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     483
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Data_Read_Byte                                4     1      3     264
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Data_Write_Byte                               5     2      3     264
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Manager                                    0     0      0       0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (6) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Data_Write_Byte
   _application_initializ
     _EEPROM_Data_Read_Byte
     _ecu_button_init
       _gpio_pin_direction_init
     _ecu_led_initializ
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
     _ecu_led_turn_off
       _gpio_pin_write_logic
     _ecu_led_turn_on
       _gpio_pin_write_logic
   _ecu_button_read_state
     _gpio_pin_read_logic
   _ecu_led_turn_off
   _ecu_led_turn_on

 _Interrupt_Manager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      56       1       68.3%
BITBIGSFRhllh       45      0       0      37        0.0%
BITBIGSFRhllll       F      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      41        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 08 13:38:12 2024

                                    l31 1548                                      l40 154A  
                                    l25 1904                     ??_Interrupt_Manager 0046  
         __end_of_ecu_button_read_state 154C                                     l310 16F2  
                                   l320 1772                                     l313 1708  
                                   l306 169E                                     l324 17C6  
                                   l413 128C                                     l317 175C  
                                   l432 139C                                     l453 1824  
                                   l439 15EE                                     l804 13FE  
                                   l832 184E                                     l840 18A8  
                                   l834 185C                                     l835 186A  
                                   l797 1684                                     _btn 001F  
               __end_of_ecu_led_turn_on 175E                                     _ret 0056  
                                   wreg 0FE8                         __end_of_RB4_ISR 193A  
                       __end_of_RB5_ISR 1936                         __end_of_RB6_ISR 1932  
                       __end_of_RB7_ISR 192E                                    l3021 128E  
                                  l3023 12A2                                    l3033 1370  
                                  l3025 12C2                                    l4001 13EA  
                                  l3051 120E                                    l3043 117C  
                                  l3027 12CA                                    l3035 139A  
                                  l3211 1740                                    l3203 16F4  
                                  l4011 1424                                    l4003 13FA  
                                  l3045 1190                                    l3029 1320  
                                  l3061 17C8                                    l3221 1776  
                                  l3213 1750                                    l3205 1704  
                                  l4013 1428                                    l4005 140E  
                                  l3231 186C                                    l3055 125E  
                                  l3047 11B0                                    l3063 17D8  
                                  l3223 17A8                                    l3207 170C  
                                  l4015 143C                                    l4007 1412  
                                  l4023 1478                                    l3241 1894  
                                  l3233 1880                                    l3049 11B8  
                                  l3057 128A                                    l3073 18E0  
                                  l3065 17F8                                    l3225 17AA  
                                  l3217 175E                                    l3209 173E  
                                  l4017 1450                                    l4009 1414  
                                  l3243 1896                                    l3251 18A6  
                                  l3235 1888                                    l3075 18F0  
                                  l3067 1800                                    l3227 17BA  
                                  l3219 176E                                    l3091 1598  
                                  l3083 154C                                    l4019 1464  
                                  l3245 1898                                    l3237 188E  
                                  l3077 18F8                                    l4029 1384  
                                  l3069 1822                                    l3093 15EC  
                                  l3085 1560                                    l3261 14C6  
                                  l3247 189A                                    l3239 1892  
                                  l3079 1902                                    l3191 16A2  
                                  l3351 1626                                    l3087 1570  
                                  l3271 1516                                    l3263 14D2  
                                  l3255 149A                                    l3249 189C  
                                  l3193 16D4                                    l3353 163A  
                                  l3345 15F0                                    l3089 1590  
                                  l3273 1530                                    l3265 14EC  
                                  l3257 14AE                                    l3371 182E  
                                  l3195 16D6                                    l3187 1686  
                                  l3355 164E                                    l3347 160E  
                                  l3267 14FC                                    l3259 14BE  
                                  l3381 1840                                    l3373 1834  
                                  l3197 16E6                                    l3189 1696  
                                  l3357 165E                                    l3365 1666  
                                  l3349 161E                                    l3269 150A  
                                  l3391 1868                                    l3383 1842  
                                  l3375 1838                                    l3367 1826  
                                  l3199 16F0                                    l3279 1544  
                                  l3385 1844                                    l3377 183C  
                                  l3369 1826                                    l3387 1848  
                                  l3379 183E                                    l3389 184C  
               ??_application_initializ 0055                                    l3991 13B0  
                                  l3993 13C0                                    l3995 13D0  
                                  l3987 139E                                    l3997 13D2  
                                  l3989 13A2                                    l3999 13DA  
                                  STR_1 1011                                    u2010 176E  
                                  u2011 176A                                    u2005 174E  
                                  u2030 1880                                    u2031 187C  
                                  u2007 1750                                    u2040 14AE  
                                  u2025 17B8                                    u2041 14AA  
                                  u2050 14BE                                    u2027 17BA  
                                  u2051 14BA                                    u2060 14EC  
                                  u2061 14E8                                    _LATA 0F89  
                                  u2070 14FC                                    _LATB 0F8A  
                                  u2071 14F8                                    _LATC 0F8B  
                                  u2160 185C                                    u2080 1530  
                                  _LATD 0F8C                                    u2161 1858  
                                  u2081 152C                                    _LATE 0F8D  
                                  u2090 1540                                    u2091 153C  
                                  u2175 1866                                    u2176 1868  
                                  u1800 1274                                    u1720 12A2  
                                  u1801 126E                                    u1721 129E  
                                  u1730 12C2                                    u1810 17D8  
                                  u1731 12BE                                    u1811 17D4  
                                  u1820 17F8                                    u1821 17F4  
                                  u1806 1276                                    u1830 18F0  
                                  u1831 18EC                                    u1760 1190  
                                  u1744 12E8                                    u1840 1560  
                                  u2800 13EA                                    u1761 118C  
                                  u1745 12E4                                    u1841 155C  
                                  u2801 13E6                                    u1770 11B0  
                                  u1754 133E                                    u1850 1570  
                                  u2810 13FA                                    u1771 11AC  
                                  u1755 133A                                    u1851 156C  
                                  u2811 13F6                                    u1860 1590  
                                  u2820 140E                                    u1861 158C  
                                  u2821 140A                                    u2830 1424  
                                  u2831 1420                                    u1784 11D6  
                                  u1785 11D2                                    u1794 122C  
                                  u1970 1696                                    u1874 15E0  
                                  u1795 1228                                    u1971 1692  
                                  u1875 15DC                                    u2780 13C0  
                                  u2781 13BC                                    u1990 1704  
                                  u2790 13D0                                    u1991 1700  
                                  u2791 13CC                                    u1985 16E4  
                                  u1987 16E6               __end_of_Interrupt_Manager 117C  
                                  _led1 0023                                    _led2 0022  
        gpio_pin_read_logic@_pin_config 0046                                    _main 139E  
              __end_of_ecu_led_turn_off 17C8                                    fsr1h 0FE2  
                                  fsr2h 0FDA                                    indf1 0FE7  
                                  indf2 0FDF                                    fsr1l 0FE1  
                                  fsr2l 0FD9            EEPROM_Data_Read_Byte@address 0046  
              ?_gpio_pin_direction_init 0046                                    btemp 0057  
                                  prodl 0FF3                                    start 000E  
                  _RB7_InterruptHandler 0024                            ___param_bank 0000  
                  _gpio_pin_write_logic 128E                        __end_of_INT0_ISR 1946  
                      __end_of_INT1_ISR 1942                        __end_of_INT2_ISR 193E  
                                 ?_main 0046                                   _EEADR 0FA9  
                                 i2l700 193C                                   i2l704 1938  
                                 i2l712 1930                                   i2l708 1934  
                                 i2l716 192C                                   i2l692 1944  
                                 i2l756 1178                                   i2l696 1940  
               __end_of_ecu_button_init 1906             ecu_dc_motor_initializ@F3064 0043  
           ecu_dc_motor_initializ@F3066 0042                                   _PORTA 0F80  
                                 _PORTB 0F81                                   _PORTC 0F82  
                                 _PORTD 0F83                                   _PORTE 0F84  
                                 _TRISA 0F92                                   _TRISB 0F93  
                                 _TRISC 0F94                                   _TRISD 0F95  
                                 _TRISE 0F96             ecu_led_turn_off@_led_config 004E  
      EEPROM_Data_Read_Byte@return_data 0048                                   tablat 0FF5  
                                 ttemp5 0058                                   ttemp6 005B  
                                 ttemp7 005F                                   status 0FD8  
                                 wtemp8 0058     ecu_button_read_state@_button_status 004E  
                       __initialization 18AA                            __end_of_main 149A  
                 ?_gpio_pin_write_logic 0046                     ecu_led_toggle@F3076 0038  
              gpio_pin_read_logic@logic 0047                           _lat_registers 000B  
                                ??_main 0055                 _gpio_pin_Initialization 17C8  
               ??_EEPROM_Data_Read_Byte 0049                           __activetblptr 0003  
                             ??_RB4_ISR 0046                               ??_RB5_ISR 0046  
                             ??_RB6_ISR 0046                               ??_RB7_ISR 0046  
                      ?_ecu_led_turn_on 004E                                  _EEADRH 0FAA  
                                _EEDATA 0FA8                                  _EECON2 0FA7  
           ecu_led_turn_off@_pin_config 0050                                  i2l1901 193A  
                                i2l1905 1936                                  i2l1913 192E  
                                i2l1909 1932                                  i2l1917 192A  
                                i2l2921 1046                                  i2l2913 1018  
                                i2l2931 1082                                  i2l2923 1054  
                                i2l2915 1026                                  i2l1893 1942  
                                i2l2941 10B4                                  i2l2933 1086  
                                i2l2917 1034                                  i2l2925 1058  
                                i2l2951 10E6                                  i2l2943 10C2  
                                i2l2935 1094                                  i2l2927 1066  
                                i2l2919 1042                                  i2l1897 193E  
                                i2l2953 10F4                                  i2l2961 1118  
                                i2l2945 10C6                                  i2l2929 1074  
                                i2l2937 1098                                  i2l2971 1154  
                                i2l2963 1126                                  i2l2955 1102  
                                i2l2947 10D4                                  i2l2939 10A6  
                                i2l2973 1158                                  i2l2965 1134  
                                i2l2957 1106                                  i2l2949 10D8  
                                i2l2975 1166                                  i2l2967 1138  
                                i2l2959 1114                                  i2l2977 1174  
                                i2l2969 1146  EEPROM_Data_Write_Byte@interrupt_status 0049  
                                clear_0 18D0                                  isa$std 0001  
                      ?_ecu_button_init 004D                            __pdataCOMRAM 0001  
                    ecu_button_init@ret 004E                            __mediumconst 0000  
                                tblptrh 0FF7                                  tblptrl 0FF6  
                                tblptru 0FF8                              __accesstop 0080  
               __end_of__initialization 18D6                               ?_INT0_ISR 0046  
                             ?_INT1_ISR 0046                               ?_INT2_ISR 0046  
                         ___rparam_used 0001                  ??_gpio_pin_write_logic 0048  
                        __pcstackCOMRAM 0046               ??_gpio_pin_Initialization 004F  
          ecu_dc_motor_move_right@F3071 0041            ecu_dc_motor_move_right@F3073 0040  
         __end_of_application_initializ 1686                   _INT0_InterruptHandler 0030  
                            ??_INT0_ISR 0046                              ??_INT1_ISR 0046  
                            ??_INT2_ISR 0046                              __pnvCOMRAM 0055  
                     ?_ecu_led_turn_off 004E      gpio_pin_direction_init@_pin_config 0046  
                    ??_ecu_led_turn_off 004F                                 _RB4_ISR 1936  
                               _RB5_ISR 1932                                 _RB6_ISR 192E  
                               _RB7_ISR 192A                   _ecu_button_read_state 149A  
            EEPROM_Data_Write_Byte@data 0048                              _high_value 0033  
       __end_of_gpio_pin_Initialization 1826                          _tris_registers 0015  
                               __Hparam 0000                                 __Lparam 0000  
                   _gpio_pin_read_logic 154C              ecu_led_turn_on@_led_config 004E  
                          __psmallconst 1000                                 __pcinit 18AA  
                               __ramtop 1000                                 __ptext0 139E  
                               __ptext1 149A                                 __ptext2 154C  
                               __ptext3 15F0                                 __ptext4 16F4  
                               __ptext5 175E                                 __ptext6 1686  
                               __ptext7 17C8                                 __ptext8 128E  
                               __ptext9 18E0                                 _counter 0055  
         __end_of_EEPROM_Data_Read_Byte 18AA      gpio_pin_Initialization@_pin_config 004E  
                  ?_gpio_pin_read_logic 0046                          __pintcode_body 1016  
                  end_of_initialization 18D6                ??_EEPROM_Data_Write_Byte 0049  
                               int_func 1016                EEPROM_Data_Read_Byte@ret 0049  
                               postdec1 0FE5                                 postdec2 0FDD  
                               postinc0 0FEE                                 postinc1 0FE6  
                               postinc2 0FDE              ecu_led_turn_on@_pin_config 0050  
                 _INT1_InterruptHandler 002E                               _PORTBbits 0F81  
                ?_ecu_button_read_state 004D           EEPROM_Data_Write_Byte@address 0046  
                 ??_gpio_pin_read_logic 0048                   ecu_led_turn_off@F3071 0039  
               _gpio_pin_direction_init 117C                           __pidataCOMRAM 1906  
              ecu_relay_initializ@F3061 0037         ecu_button_read_state@btn_config 004D  
                   start_initialization 18AA             ecu_dc_motor_move_left@F3080 003E  
           ecu_dc_motor_move_left@F3078 003F                    _RB4_InterruptHandler 002A  
                     _ecu_led_initializ 1686                      ?_ecu_led_initializ 0051  
                   ??_ecu_led_initializ 0052                                ?_RB4_ISR 0046  
                              ?_RB5_ISR 0046                                ?_RB6_ISR 0046  
                              ?_RB7_ISR 0046                             __pbssCOMRAM 0024  
             __end_of_ecu_led_initializ 16F4                   _INT2_InterruptHandler 002C  
                 _application_initializ 15F0                ?_gpio_pin_Initialization 004E  
                     ??_ecu_led_turn_on 004F               ??_gpio_pin_direction_init 0047  
                             __pintcode 0008         gpio_pin_write_logic@_pin_config 0046  
                _EEPROM_Data_Write_Byte 1826   ecu_button_read_state@pin_logic_status 0051  
             gpio_pin_write_logic@logic 0047                               _btn_state 0044  
                           __smallconst 1000                                _INT0_ISR 1942  
                              _INT1_ISR 193E                                _INT2_ISR 193A  
                        _prev_btn_state 0032                          _keypad_sampels 1001  
                  ecu_led_initializ@ret 0053                   ecu_relay_toggle@F3076 0034  
                     ??_ecu_button_init 004E                                i2u150_40 1082  
                              i2u150_41 107E              gpio_pin_Initialization@ret 0050  
                              i2u151_40 1094                                i2u151_41 1090  
                              i2u160_40 1126                                i2u152_40 10A6  
                              i2u144_40 1026                                i2u160_41 1122  
                              i2u152_41 10A2                                i2u144_41 1022  
                              i2u161_40 1134                                i2u153_40 10B4  
                              i2u145_40 1034                                i2u161_41 1130  
                              i2u153_41 10B0                                i2u145_41 1030  
                              i2u162_40 1146                                i2u154_40 10C2  
                              i2u146_40 1042                                i2u162_41 1142  
                              i2u154_41 10BE                                i2u146_41 103E  
                              i2u163_40 1154                                i2u155_40 10D4  
                              i2u147_40 1054                                i2u163_41 1150  
                              i2u155_41 10D0                                i2u147_41 1050  
                              i2u164_40 1166                                i2u156_40 10E6  
                              i2u148_40 1066                                i2u164_41 1162  
                              i2u156_41 10E2                                i2u148_41 1062  
                              i2u165_40 1174                                i2u157_40 10F4  
                              i2u149_40 1074                                i2u165_41 1170  
                              i2u157_41 10F0                                i2u149_41 1070  
                              i2u158_40 1102                                i2u158_41 10FE  
                              i2u159_40 1114                                i2u159_41 1110  
                  _RB5_InterruptHandler 0028                 ??_ecu_button_read_state 004F  
                  ecu_led_turn_on@F3066 003A         __end_of_gpio_pin_direction_init 128E  
                 _EEPROM_Data_Read_Byte 186C                 gpio_pin_write_logic@ret 004D  
                           _INTCON2bits 0FF1                             _INTCON3bits 0FF0  
                             copy_data0 18BE                  __end_of_keypad_sampels 1011  
                gpio_pin_read_logic@ret 004C                  ?_application_initializ 0046  
                            _EECON1bits 0FA6                                __Hrparam 0000  
                              __Lrparam 0000                        _ecu_led_turn_off 175E  
           __end_of_gpio_pin_read_logic 15F0                                __ptext10 117C  
                              __ptext11 186C                                __ptext20 1942  
                              __ptext12 1826                                __ptext14 192A  
                              __ptext15 192E                                __ptext16 1932  
                              __ptext17 1936                                __ptext18 193A  
                              __ptext19 193E                  ecu_dc_motor_stop@F3085 003D  
                ecu_dc_motor_stop@F3087 003C           ecu_button_init@_button_config 004D  
                              _ret_data 0045                 ecu_relay_turn_off@F3071 0035  
                              isa$xinst 0000            ecu_led_initializ@_led_config 0051  
                              int$flags 0057                  ecu_led_initializ@F3061 003B  
              ecu_button_read_state@ret 0050                              _INTCONbits 0FF2  
                ?_EEPROM_Data_Read_Byte 0046                    _RB6_InterruptHandler 0026  
          __end_of_gpio_pin_write_logic 139E                         _ecu_led_turn_on 16F4  
                              intlevel2 0000                  ecu_relay_turn_on@F3066 0036  
               ?_EEPROM_Data_Write_Byte 0046            ecu_led_initializ@_pin_config 0054  
                        _port_registers 0001              gpio_pin_direction_init@ret 004C  
                       _ecu_button_init 18E0                       _Interrupt_Manager 0008  
        __end_of_EEPROM_Data_Write_Byte 186C                      ?_Interrupt_Manager 0046  
