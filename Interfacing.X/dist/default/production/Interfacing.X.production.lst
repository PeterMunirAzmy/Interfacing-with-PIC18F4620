

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 21 08:05:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 17/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4620 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   001626                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _port_registers
    66   001626  80                 	db	128
    67   001627  0F                 	db	15
    68   001628  81                 	db	129
    69   001629  0F                 	db	15
    70   00162A  82                 	db	130
    71   00162B  0F                 	db	15
    72   00162C  83                 	db	131
    73   00162D  0F                 	db	15
    74   00162E  84                 	db	132
    75   00162F  0F                 	db	15
    76                           
    77                           ;initializer for _lat_registers
    78   001630  89                 	db	137
    79   001631  0F                 	db	15
    80   001632  8A                 	db	138
    81   001633  0F                 	db	15
    82   001634  8B                 	db	139
    83   001635  0F                 	db	15
    84   001636  8C                 	db	140
    85   001637  0F                 	db	15
    86   001638  8D                 	db	141
    87   001639  0F                 	db	15
    88                           
    89                           ;initializer for _tris_registers
    90   00163A  92                 	db	146
    91   00163B  0F                 	db	15
    92   00163C  93                 	db	147
    93   00163D  0F                 	db	15
    94   00163E  94                 	db	148
    95   00163F  0F                 	db	15
    96   001640  95                 	db	149
    97   001641  0F                 	db	15
    98   001642  96                 	db	150
    99   001643  0F                 	db	15
   100                           
   101                           ;initializer for _keypad
   102   001644  02                 	db	2
   103   001645  0A                 	db	10
   104   001646  12                 	db	18
   105   001647  1A                 	db	26
   106   001648  62                 	db	98
   107   001649  6A                 	db	106
   108   00164A  72                 	db	114
   109   00164B  7A                 	db	122
   110                           
   111                           ;initializer for _seg
   112   00164C  03                 	db	3
   113   00164D  0B                 	db	11
   114   00164E  13                 	db	19
   115   00164F  1B                 	db	27
   116                           
   117                           	psect	smallconst
   118   001000                     __psmallconst:
   119                           	callstack 0
   120   001000  00                 	db	0
   121   001001                     _keypad_sampels:
   122                           	callstack 0
   123   001001  37                 	db	55
   124   001002  38                 	db	56
   125   001003  39                 	db	57
   126   001004  2F                 	db	47
   127   001005  34                 	db	52
   128   001006  35                 	db	53
   129   001007  36                 	db	54
   130   001008  2A                 	db	42
   131   001009  31                 	db	49
   132   00100A  32                 	db	50
   133   00100B  33                 	db	51
   134   00100C  2D                 	db	45
   135   00100D  23                 	db	35
   136   00100E  30                 	db	48
   137   00100F  3D                 	db	61
   138   001010  2B                 	db	43
   139   001011                     __end_of_keypad_sampels:
   140                           	callstack 0
   141   001011  00                 	db	0	; dummy byte at the end
   142   000000                     
   143                           	psect	nvCOMRAM
   144   000052                     __pnvCOMRAM:
   145                           	callstack 0
   146   000052                     _ret:
   147                           	callstack 0
   148   000052                     	ds	1
   149   000000                     _PORTE	set	3972
   150   000000                     _PORTD	set	3971
   151   000000                     _PORTC	set	3970
   152   000000                     _PORTB	set	3969
   153   000000                     _PORTA	set	3968
   154   000000                     _LATA	set	3977
   155   000000                     _TRISA	set	3986
   156   000000                     _TRISE	set	3990
   157   000000                     _TRISD	set	3989
   158   000000                     _TRISC	set	3988
   159   000000                     _TRISB	set	3987
   160   000000                     _LATE	set	3981
   161   000000                     _LATD	set	3980
   162   000000                     _LATC	set	3979
   163   000000                     _LATB	set	3978
   164                           
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168   0015F0                     __pcinit:
   169                           	callstack 0
   170   0015F0                     start_initialization:
   171                           	callstack 0
   172   0015F0                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Initialize objects allocated to COMRAM (42 bytes)
   176                           ; load TBLPTR registers with __pidataCOMRAM
   177   0015F0  0E26               	movlw	low __pidataCOMRAM
   178   0015F2  6EF6               	movwf	tblptrl,c
   179   0015F4  0E16               	movlw	high __pidataCOMRAM
   180   0015F6  6EF7               	movwf	tblptrh,c
   181   0015F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   182   0015FA  6EF8               	movwf	tblptru,c
   183   0015FC  EE00  F001         	lfsr	0,__pdataCOMRAM
   184   001600  EE10 F02A          	lfsr	1,42
   185   001604                     copy_data0:
   186   001604  0009               	tblrd		*+
   187   001606  CFF5 FFEE          	movff	tablat,postinc0
   188   00160A  50E5               	movf	postdec1,w,c
   189   00160C  50E1               	movf	fsr1l,w,c
   190   00160E  E1FA               	bnz	copy_data0
   191                           
   192                           ; Clear objects allocated to COMRAM (18 bytes)
   193   001610  EE00  F040         	lfsr	0,__pbssCOMRAM
   194   001614  0E12               	movlw	18
   195   001616                     clear_0:
   196   001616  6AEE               	clrf	postinc0,c
   197   001618  06E8               	decf	wreg,f,c
   198   00161A  E1FD               	bnz	clear_0
   199   00161C                     end_of_initialization:
   200                           	callstack 0
   201   00161C                     __end_of__initialization:
   202                           	callstack 0
   203   00161C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   204   00161E  6EF8               	movwf	tblptru,c
   205   001620  0100               	movlb	0
   206   001622  EF6E  F00A         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMRAM
   209   000040                     __pbssCOMRAM:
   210                           	callstack 0
   211   000040                     _num_value:
   212                           	callstack 0
   213   000040                     	ds	1
   214   000041                     ecu_relay_toggle@F2909:
   215                           	callstack 0
   216   000041                     	ds	1
   217   000042                     ecu_relay_turn_off@F2904:
   218                           	callstack 0
   219   000042                     	ds	1
   220   000043                     ecu_relay_turn_on@F2899:
   221                           	callstack 0
   222   000043                     	ds	1
   223   000044                     ecu_relay_initializ@F2894:
   224                           	callstack 0
   225   000044                     	ds	1
   226   000045                     ecu_led_toggle@F2909:
   227                           	callstack 0
   228   000045                     	ds	1
   229   000046                     ecu_led_turn_off@F2904:
   230                           	callstack 0
   231   000046                     	ds	1
   232   000047                     ecu_led_turn_on@F2899:
   233                           	callstack 0
   234   000047                     	ds	1
   235   000048                     ecu_led_initializ@F2894:
   236                           	callstack 0
   237   000048                     	ds	1
   238   000049                     ecu_dc_motor_stop@F2920:
   239                           	callstack 0
   240   000049                     	ds	1
   241   00004A                     ecu_dc_motor_stop@F2918:
   242                           	callstack 0
   243   00004A                     	ds	1
   244   00004B                     ecu_dc_motor_move_left@F2913:
   245                           	callstack 0
   246   00004B                     	ds	1
   247   00004C                     ecu_dc_motor_move_left@F2911:
   248                           	callstack 0
   249   00004C                     	ds	1
   250   00004D                     ecu_dc_motor_move_right@F2906:
   251                           	callstack 0
   252   00004D                     	ds	1
   253   00004E                     ecu_dc_motor_move_right@F2904:
   254                           	callstack 0
   255   00004E                     	ds	1
   256   00004F                     ecu_dc_motor_initializ@F2899:
   257                           	callstack 0
   258   00004F                     	ds	1
   259   000050                     ecu_dc_motor_initializ@F2897:
   260                           	callstack 0
   261   000050                     	ds	1
   262   000051                     _value:
   263                           	callstack 0
   264   000051                     	ds	1
   265                           
   266                           	psect	dataCOMRAM
   267   000001                     __pdataCOMRAM:
   268                           	callstack 0
   269   000001                     _port_registers:
   270                           	callstack 0
   271   000001                     	ds	10
   272   00000B                     _lat_registers:
   273                           	callstack 0
   274   00000B                     	ds	10
   275   000015                     _tris_registers:
   276                           	callstack 0
   277   000015                     	ds	10
   278   00001F                     _keypad:
   279                           	callstack 0
   280   00001F                     	ds	8
   281   000027                     _seg:
   282                           	callstack 0
   283   000027                     	ds	4
   284                           
   285                           	psect	cstackCOMRAM
   286   00002B                     __pcstackCOMRAM:
   287                           	callstack 0
   288   00002B                     gpio_pin_direction_init@_pin_config:
   289                           	callstack 0
   290   00002B                     gpio_pin_write_logic@_pin_config:
   291                           	callstack 0
   292   00002B                     gpio_pin_read_logic@_pin_config:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x0
   296   00002B                     	ds	1
   297   00002C                     ??_gpio_pin_direction_init:
   298   00002C                     gpio_pin_write_logic@logic:
   299                           	callstack 0
   300   00002C                     gpio_pin_read_logic@logic:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x1
   304   00002C                     	ds	1
   305   00002D                     ??_gpio_pin_write_logic:
   306   00002D                     ??_gpio_pin_read_logic:
   307                           
   308                           ; 1 bytes @ 0x2
   309   00002D                     	ds	4
   310   000031                     gpio_pin_direction_init@ret:
   311                           	callstack 0
   312   000031                     gpio_pin_read_logic@ret:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x6
   316   000031                     	ds	1
   317   000032                     gpio_pin_write_logic@ret:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x7
   321   000032                     	ds	1
   322   000033                     seg_write_number@_seg_config:
   323                           	callstack 0
   324   000033                     keypad_get_value@_keypad_config:
   325                           	callstack 0
   326   000033                     gpio_pin_Initialization@_pin_config:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x8
   330   000033                     	ds	1
   331   000034                     ??_gpio_pin_Initialization:
   332   000034                     seg_write_number@number:
   333                           	callstack 0
   334   000034                     keypad_get_value@value:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x9
   338   000034                     	ds	1
   339   000035                     ??_keypad_get_value:
   340   000035                     seg_write_number@ret:
   341                           	callstack 0
   342   000035                     gpio_pin_Initialization@ret:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xA
   346   000035                     	ds	1
   347   000036                     seg_initialization@_seg_config:
   348                           	callstack 0
   349   000036                     keypad_initialize@_keypad_config:
   350                           	callstack 0
   351   000036                     keypad_get_value@ret:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xB
   355   000036                     	ds	1
   356   000037                     seg_initialization@ret:
   357                           	callstack 0
   358   000037                     keypad_initialize@ret:
   359                           	callstack 0
   360   000037                     keypad_get_value@colum_logic:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xC
   364   000037                     	ds	1
   365   000038                     keypad_initialize@i:
   366                           	callstack 0
   367   000038                     keypad_get_value@j:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0xD
   371   000038                     	ds	2
   372   00003A                     keypad_initialize@j:
   373                           	callstack 0
   374   00003A                     keypad_get_value@i:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0xF
   378   00003A                     	ds	2
   379   00003C                     keypad_get_value@k:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x11
   383   00003C                     	ds	2
   384   00003E                     ??_main:
   385                           
   386                           ; 1 bytes @ 0x13
   387   00003E                     	ds	2
   388                           
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 36 in file "application.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  2  415[None  ] int 
   401 ;; Registers used:
   402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called: 4
   414 ;; This function calls:
   415 ;;		_application_initializ
   416 ;;		_keypad_get_value
   417 ;;		_seg_write_number
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text0
   424   0014DC                     __ptext0:
   425                           	callstack 0
   426   0014DC                     _main:
   427                           	callstack 27
   428   0014DC  EC28  F00B         	call	_application_initializ	;wreg free
   429   0014E0                     l2234:
   430   0014E0  0E1F               	movlw	low _keypad
   431   0014E2  6E33               	movwf	keypad_get_value@_keypad_config^0,c
   432   0014E4  0E51               	movlw	low _value
   433   0014E6  6E34               	movwf	keypad_get_value@value^0,c
   434   0014E8  EC1A  F009         	call	_keypad_get_value	;wreg free
   435   0014EC  6E52               	movwf	_ret^0,c
   436   0014EE  0E02               	movlw	2
   437   0014F0  6E3F               	movwf	(??_main+1)^0,c
   438   0014F2  0E04               	movlw	4
   439   0014F4  6E3E               	movwf	??_main^0,c
   440   0014F6  0EBA               	movlw	186
   441   0014F8                     u1637:
   442   0014F8  2EE8               	decfsz	wreg,f,c
   443   0014FA  D7FE               	bra	u1637
   444   0014FC  2E3E               	decfsz	??_main^0,f,c
   445   0014FE  D7FC               	bra	u1637
   446   001500  2E3F               	decfsz	(??_main+1)^0,f,c
   447   001502  D7FA               	bra	u1637
   448   001504  D000               	nop2	
   449   001506  0E2F               	movlw	47
   450   001508  6451               	cpfsgt	_value^0,c
   451   00150A  EF89  F00A         	goto	u1611
   452   00150E  EF8B  F00A         	goto	u1610
   453   001512                     u1611:
   454   001512  EF98  F00A         	goto	l2244
   455   001516                     u1610:
   456   001516  0E3A               	movlw	58
   457   001518  6051               	cpfslt	_value^0,c
   458   00151A  EF91  F00A         	goto	u1621
   459   00151E  EF93  F00A         	goto	u1620
   460   001522                     u1621:
   461   001522  EF98  F00A         	goto	l2244
   462   001526                     u1620:
   463   001526  5051               	movf	_value^0,w,c
   464   001528  0FD0               	addlw	208
   465   00152A  6E40               	movwf	_num_value^0,c
   466   00152C  EF9A  F00A         	goto	l2246
   467   001530                     l2244:
   468   001530  0E0F               	movlw	15
   469   001532  6E40               	movwf	_num_value^0,c
   470   001534                     l2246:
   471   001534  0E27               	movlw	low _seg
   472   001536  6E33               	movwf	seg_write_number@_seg_config^0,c
   473   001538  C040  F034         	movff	_num_value,seg_write_number@number
   474   00153C  EC31  F00A         	call	_seg_write_number	;wreg free
   475   001540  6E52               	movwf	_ret^0,c
   476   001542  EF70  F00A         	goto	l2234
   477   001546  EF00  F000         	goto	start
   478   00154A                     __end_of_main:
   479                           	callstack 0
   480                           
   481 ;; *************** function _seg_write_number *****************
   482 ;; Defined at:
   483 ;;		line 40 in file "ECU_layer/7-seg/7-seg.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  _seg_config     1    8[COMRAM] PTR const struct .
   486 ;;		 -> seg(4), 
   487 ;;  number          1    9[COMRAM] unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  ret             1   10[COMRAM] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      unsigned char 
   492 ;; Registers used:
   493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;Total ram usage:        3 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		_gpio_pin_write_logic
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514   001462                     __ptext1:
   515                           	callstack 0
   516   001462                     _seg_write_number:
   517                           	callstack 29
   518   001462                     
   519                           ;ECU_layer/7-seg/7-seg.c: 45:     if ((((void*)0) == _seg_config) || (number > 9))
   520   001462  5033               	movf	seg_write_number@_seg_config^0,w,c
   521   001464  B4D8               	btfsc	status,2,c
   522   001466  EF37  F00A         	goto	u1181
   523   00146A  EF39  F00A         	goto	u1180
   524   00146E                     u1181:
   525   00146E  EF41  F00A         	goto	l1884
   526   001472                     u1180:
   527   001472  0E09               	movlw	9
   528   001474  6434               	cpfsgt	seg_write_number@number^0,c
   529   001476  EF3F  F00A         	goto	u1191
   530   00147A  EF41  F00A         	goto	u1190
   531   00147E                     u1191:
   532   00147E  EF45  F00A         	goto	l1886
   533   001482                     u1190:
   534   001482                     l1884:
   535                           
   536                           ;ECU_layer/7-seg/7-seg.c: 46:     {;ECU_layer/7-seg/7-seg.c: 47:         ret = (STD_Retu
      +                          rnType)0x00;
   537   001482  0E00               	movlw	0
   538   001484  6E35               	movwf	seg_write_number@ret^0,c
   539                           
   540                           ;ECU_layer/7-seg/7-seg.c: 48:     }
   541   001486  EF6C  F00A         	goto	l1888
   542   00148A                     l1886:
   543                           
   544                           ;ECU_layer/7-seg/7-seg.c: 50:     {;ECU_layer/7-seg/7-seg.c: 51:         ret = gpio_pin_
      +                          write_logic(&(_seg_config->_seg_pin[seg_pin0]),(number >> seg_pin0) & (uint8)1);
   545   00148A  C033  F02B         	movff	seg_write_number@_seg_config,gpio_pin_write_logic@_pin_config
   546   00148E  5034               	movf	seg_write_number@number^0,w,c
   547   001490  0B01               	andlw	1
   548   001492  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
   549   001494  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   550   001498  6E35               	movwf	seg_write_number@ret^0,c
   551                           
   552                           ;ECU_layer/7-seg/7-seg.c: 52:         ret = gpio_pin_write_logic(&(_seg_config->_seg_pin
      +                          [seg_pin1]),(number >> seg_pin1) & (uint8)1);
   553   00149A  2833               	incf	seg_write_number@_seg_config^0,w,c
   554   00149C  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   555   00149E  90D8               	bcf	status,0,c
   556   0014A0  3034               	rrcf	seg_write_number@number^0,w,c
   557   0014A2  0B01               	andlw	1
   558   0014A4  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
   559   0014A6  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   560   0014AA  6E35               	movwf	seg_write_number@ret^0,c
   561                           
   562                           ;ECU_layer/7-seg/7-seg.c: 53:         ret = gpio_pin_write_logic(&(_seg_config->_seg_pin
      +                          [seg_pin2]),(number >> seg_pin2) & (uint8)1);
   563   0014AC  5033               	movf	seg_write_number@_seg_config^0,w,c
   564   0014AE  0F02               	addlw	2
   565   0014B0  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   566   0014B2  4034               	rrncf	seg_write_number@number^0,w,c
   567   0014B4  42E8               	rrncf	wreg,f,c
   568   0014B6  0B3F               	andlw	63
   569   0014B8  0B01               	andlw	1
   570   0014BA  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
   571   0014BC  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   572   0014C0  6E35               	movwf	seg_write_number@ret^0,c
   573                           
   574                           ;ECU_layer/7-seg/7-seg.c: 54:         ret = gpio_pin_write_logic(&(_seg_config->_seg_pin
      +                          [seg_pin3]),(number >> seg_pin3) & (uint8)1);
   575   0014C2  5033               	movf	seg_write_number@_seg_config^0,w,c
   576   0014C4  0F03               	addlw	3
   577   0014C6  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   578   0014C8  3834               	swapf	seg_write_number@number^0,w,c
   579   0014CA  46E8               	rlncf	wreg,f,c
   580   0014CC  0B1F               	andlw	31
   581   0014CE  0B01               	andlw	1
   582   0014D0  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
   583   0014D2  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   584   0014D6  6E35               	movwf	seg_write_number@ret^0,c
   585   0014D8                     l1888:
   586                           
   587                           ;ECU_layer/7-seg/7-seg.c: 56:     return ret;
   588   0014D8  5035               	movf	seg_write_number@ret^0,w,c
   589   0014DA  0012               	return		;funcret
   590   0014DC                     __end_of_seg_write_number:
   591                           	callstack 0
   592                           
   593 ;; *************** function _keypad_get_value *****************
   594 ;; Defined at:
   595 ;;		line 53 in file "ECU_layer/Keypad/keypad.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  _keypad_conf    1    8[COMRAM] PTR const struct .
   598 ;;		 -> keypad(8), 
   599 ;;  value           1    9[COMRAM] PTR unsigned char 
   600 ;;		 -> value(1), 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  k               2   17[COMRAM] int 
   603 ;;  j               2   13[COMRAM] int 
   604 ;;  i               2   15[COMRAM] int 
   605 ;;  colum_logic     1   12[COMRAM] unsigned char 
   606 ;;  ret             1   11[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      unsigned char 
   609 ;; Registers used:
   610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:       11 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		_gpio_pin_read_logic
   625 ;;		_gpio_pin_write_logic
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text2
   632   001234                     __ptext2:
   633                           	callstack 0
   634   001234                     _keypad_get_value:
   635                           	callstack 29
   636   001234                     
   637                           ;ECU_layer/Keypad/keypad.c: 56:     uint8 colum_logic = 0;
   638   001234  0E00               	movlw	0
   639   001236  6E37               	movwf	keypad_get_value@colum_logic^0,c
   640                           
   641                           ;ECU_layer/Keypad/keypad.c: 58:     if ((((void*)0) == _keypad_config) || (((void*)0) ==
      +                           value))
   642   001238  5033               	movf	keypad_get_value@_keypad_config^0,w,c
   643   00123A  B4D8               	btfsc	status,2,c
   644   00123C  EF22  F009         	goto	u1201
   645   001240  EF24  F009         	goto	u1200
   646   001244                     u1201:
   647   001244  EF2C  F009         	goto	l1896
   648   001248                     u1200:
   649   001248  5034               	movf	keypad_get_value@value^0,w,c
   650   00124A  A4D8               	btfss	status,2,c
   651   00124C  EF2A  F009         	goto	u1211
   652   001250  EF2C  F009         	goto	u1210
   653   001254                     u1211:
   654   001254  EF30  F009         	goto	l1898
   655   001258                     u1210:
   656   001258                     l1896:
   657                           
   658                           ;ECU_layer/Keypad/keypad.c: 59:     {;ECU_layer/Keypad/keypad.c: 60:         ret = (STD_
      +                          ReturnType)0x00;
   659   001258  0E00               	movlw	0
   660   00125A  6E36               	movwf	keypad_get_value@ret^0,c
   661                           
   662                           ;ECU_layer/Keypad/keypad.c: 61:     }
   663   00125C  EF9B  F009         	goto	l1938
   664   001260                     l1898:
   665                           
   666                           ;ECU_layer/Keypad/keypad.c: 63:     {;ECU_layer/Keypad/keypad.c: 64:         for(int i =
      +                           0 ; i < 4 ; i++)
   667   001260  0E00               	movlw	0
   668   001262  6E3B               	movwf	(keypad_get_value@i+1)^0,c
   669   001264  0E00               	movlw	0
   670   001266  6E3A               	movwf	keypad_get_value@i^0,c
   671   001268                     l1904:
   672                           
   673                           ;ECU_layer/Keypad/keypad.c: 65:         {;ECU_layer/Keypad/keypad.c: 66:             for
      +                          (int j = 0 ; j < 4 ; j++)
   674   001268  0E00               	movlw	0
   675   00126A  6E39               	movwf	(keypad_get_value@j+1)^0,c
   676   00126C  0E00               	movlw	0
   677   00126E  6E38               	movwf	keypad_get_value@j^0,c
   678   001270                     l1910:
   679   001270  5033               	movf	keypad_get_value@_keypad_config^0,w,c
   680   001272  2438               	addwf	keypad_get_value@j^0,w,c
   681   001274  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   682   001276  0E00               	movlw	0
   683   001278  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
   684   00127A  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   685   00127E                     
   686                           ;ECU_layer/Keypad/keypad.c: 69:             }
   687   00127E  4A38               	infsnz	keypad_get_value@j^0,f,c
   688   001280  2A39               	incf	(keypad_get_value@j+1)^0,f,c
   689   001282  BE39               	btfsc	(keypad_get_value@j+1)^0,7,c
   690   001284  EF4D  F009         	goto	u1221
   691   001288  5039               	movf	(keypad_get_value@j+1)^0,w,c
   692   00128A  E109               	bnz	u1220
   693   00128C  0E04               	movlw	4
   694   00128E  5C38               	subwf	keypad_get_value@j^0,w,c
   695   001290  A0D8               	btfss	status,0,c
   696   001292  EF4D  F009         	goto	u1221
   697   001296  EF4F  F009         	goto	u1220
   698   00129A                     u1221:
   699   00129A  EF38  F009         	goto	l1910
   700   00129E                     u1220:
   701   00129E  5033               	movf	keypad_get_value@_keypad_config^0,w,c
   702   0012A0  243A               	addwf	keypad_get_value@i^0,w,c
   703   0012A2  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   704   0012A4  0E01               	movlw	1
   705   0012A6  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
   706   0012A8  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   707   0012AC                     
   708                           ;ECU_layer/Keypad/keypad.c: 73:             for(int k=0 ; k < 4 ; k++)
   709   0012AC  0E00               	movlw	0
   710   0012AE  6E3D               	movwf	(keypad_get_value@k+1)^0,c
   711   0012B0  0E00               	movlw	0
   712   0012B2  6E3C               	movwf	keypad_get_value@k^0,c
   713   0012B4                     l1924:
   714                           
   715                           ;ECU_layer/Keypad/keypad.c: 74:             {;ECU_layer/Keypad/keypad.c: 75:            
      +                               ret = gpio_pin_read_logic(&(_keypad_config->keypad_colums[k]) , &colum_logic);
   716   0012B4  5033               	movf	keypad_get_value@_keypad_config^0,w,c
   717   0012B6  243C               	addwf	keypad_get_value@k^0,w,c
   718   0012B8  0F04               	addlw	4
   719   0012BA  6E2B               	movwf	gpio_pin_read_logic@_pin_config^0,c
   720   0012BC  0E37               	movlw	low keypad_get_value@colum_logic
   721   0012BE  6E2C               	movwf	gpio_pin_read_logic@logic^0,c
   722   0012C0  EC9D  F009         	call	_gpio_pin_read_logic	;wreg free
   723   0012C4  6E36               	movwf	keypad_get_value@ret^0,c
   724   0012C6                     
   725                           ;ECU_layer/Keypad/keypad.c: 77:                 if(GPIO_HIGH == colum_logic)
   726   0012C6  0437               	decf	keypad_get_value@colum_logic^0,w,c
   727   0012C8  A4D8               	btfss	status,2,c
   728   0012CA  EF69  F009         	goto	u1231
   729   0012CE  EF6B  F009         	goto	u1230
   730   0012D2                     u1231:
   731   0012D2  EF7B  F009         	goto	l1930
   732   0012D6                     u1230:
   733   0012D6                     
   734                           ;ECU_layer/Keypad/keypad.c: 78:                 {;ECU_layer/Keypad/keypad.c: 79:        
      +                                       *value = keypad_sampels[i][k];
   735   0012D6  503A               	movf	keypad_get_value@i^0,w,c
   736   0012D8  0D04               	mullw	4
   737   0012DA  50F3               	movf	243,w,c
   738   0012DC  0F01               	addlw	low _keypad_sampels
   739   0012DE  243C               	addwf	keypad_get_value@k^0,w,c
   740   0012E0  6E35               	movwf	??_keypad_get_value^0,c
   741   0012E2  C035  FFF6         	movff	??_keypad_get_value,tblptrl
   742   0012E6                     	if	1	;There is more than 1 active tblptr byte
   743   0012E6  0E10               	movlw	high __smallconst
   744   0012E8  6EF7               	movwf	tblptrh,c
   745   0012EA                     	endif
   746   0012EA                     	if	0	;tblptru may be non-zero
   747   0012EA                     	endif
   748   0012EA                     	if	0	;tblptru may be non-zero
   749   0012EA                     	endif
   750   0012EA  5034               	movf	keypad_get_value@value^0,w,c
   751   0012EC  6ED9               	movwf	fsr2l,c
   752   0012EE  6ADA               	clrf	fsr2h,c
   753   0012F0  0008               	tblrd		*
   754   0012F2  CFF5 FFDF          	movff	tablat,indf2
   755   0012F6                     l1930:
   756                           
   757                           ;ECU_layer/Keypad/keypad.c: 81:             }
   758   0012F6  4A3C               	infsnz	keypad_get_value@k^0,f,c
   759   0012F8  2A3D               	incf	(keypad_get_value@k+1)^0,f,c
   760   0012FA  BE3D               	btfsc	(keypad_get_value@k+1)^0,7,c
   761   0012FC  EF89  F009         	goto	u1241
   762   001300  503D               	movf	(keypad_get_value@k+1)^0,w,c
   763   001302  E109               	bnz	u1240
   764   001304  0E04               	movlw	4
   765   001306  5C3C               	subwf	keypad_get_value@k^0,w,c
   766   001308  A0D8               	btfss	status,0,c
   767   00130A  EF89  F009         	goto	u1241
   768   00130E  EF8B  F009         	goto	u1240
   769   001312                     u1241:
   770   001312  EF5A  F009         	goto	l1924
   771   001316                     u1240:
   772   001316                     
   773                           ;ECU_layer/Keypad/keypad.c: 82:         }
   774   001316  4A3A               	infsnz	keypad_get_value@i^0,f,c
   775   001318  2A3B               	incf	(keypad_get_value@i+1)^0,f,c
   776   00131A  BE3B               	btfsc	(keypad_get_value@i+1)^0,7,c
   777   00131C  EF99  F009         	goto	u1251
   778   001320  503B               	movf	(keypad_get_value@i+1)^0,w,c
   779   001322  E109               	bnz	u1250
   780   001324  0E04               	movlw	4
   781   001326  5C3A               	subwf	keypad_get_value@i^0,w,c
   782   001328  A0D8               	btfss	status,0,c
   783   00132A  EF99  F009         	goto	u1251
   784   00132E  EF9B  F009         	goto	u1250
   785   001332                     u1251:
   786   001332  EF34  F009         	goto	l1904
   787   001336                     u1250:
   788   001336                     l1938:
   789                           
   790                           ;ECU_layer/Keypad/keypad.c: 85:     return ret;
   791   001336  5036               	movf	keypad_get_value@ret^0,w,c
   792   001338  0012               	return		;funcret
   793   00133A                     __end_of_keypad_get_value:
   794                           	callstack 0
   795                           
   796 ;; *************** function _gpio_pin_read_logic *****************
   797 ;; Defined at:
   798 ;;		line 109 in file "MCAL_layer/GPIO/gpio.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   801 ;;		 -> keypad$keypad_colums(4), keypad(8), 
   802 ;;  logic           1    1[COMRAM] PTR enum E2814
   803 ;;		 -> keypad_get_value@colum_logic(1), ecu_button_read_state@pin_logic_status(1), 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  ret             1    6[COMRAM] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      unsigned char 
   808 ;; Registers used:
   809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;Total ram usage:        7 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_keypad_get_value
   825 ;;		_ecu_button_read_state
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text3
   830   00133A                     __ptext3:
   831                           	callstack 0
   832   00133A                     _gpio_pin_read_logic:
   833                           	callstack 29
   834   00133A                     
   835                           ;MCAL_layer/GPIO/gpio.c: 109: STD_ReturnType gpio_pin_read_logic(const pin_config *_pin_
      +                          config, logic_t *logic);MCAL_layer/GPIO/gpio.c: 110: {;MCAL_layer/GPIO/gpio.c: 111:     
      +                          STD_ReturnType ret = (STD_ReturnType)0x01;
   836   00133A  0E01               	movlw	1
   837   00133C  6E31               	movwf	gpio_pin_read_logic@ret^0,c
   838                           
   839                           ;MCAL_layer/GPIO/gpio.c: 112:     if(((void*)0) == _pin_config || ((void*)0) == logic ||
      +                           _pin_config->pin > 8 -1)
   840   00133E  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   841   001340  B4D8               	btfsc	status,2,c
   842   001342  EFA5  F009         	goto	u1111
   843   001346  EFA7  F009         	goto	u1110
   844   00134A                     u1111:
   845   00134A  EFBF  F009         	goto	l1840
   846   00134E                     u1110:
   847   00134E  502C               	movf	gpio_pin_read_logic@logic^0,w,c
   848   001350  B4D8               	btfsc	status,2,c
   849   001352  EFAD  F009         	goto	u1121
   850   001356  EFAF  F009         	goto	u1120
   851   00135A                     u1121:
   852   00135A  EFBF  F009         	goto	l1840
   853   00135E                     u1120:
   854   00135E  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   855   001360  6ED9               	movwf	fsr2l,c
   856   001362  6ADA               	clrf	fsr2h,c
   857   001364  30DF               	rrcf	223,w,c
   858   001366  32E8               	rrcf	wreg,f,c
   859   001368  32E8               	rrcf	wreg,f,c
   860   00136A  0B07               	andlw	7
   861   00136C  6E2D               	movwf	??_gpio_pin_read_logic^0,c
   862   00136E  0E07               	movlw	7
   863   001370  642D               	cpfsgt	??_gpio_pin_read_logic^0,c
   864   001372  EFBD  F009         	goto	u1131
   865   001376  EFBF  F009         	goto	u1130
   866   00137A                     u1131:
   867   00137A  EFC3  F009         	goto	l1842
   868   00137E                     u1130:
   869   00137E                     l1840:
   870                           
   871                           ;MCAL_layer/GPIO/gpio.c: 113:     {;MCAL_layer/GPIO/gpio.c: 114:         ret = (STD_Retu
      +                          rnType)0x00;
   872   00137E  0E00               	movlw	0
   873   001380  6E31               	movwf	gpio_pin_read_logic@ret^0,c
   874                           
   875                           ;MCAL_layer/GPIO/gpio.c: 115:     }
   876   001382  EFED  F009         	goto	l1844
   877   001386                     l1842:
   878                           
   879                           ;MCAL_layer/GPIO/gpio.c: 117:     {;MCAL_layer/GPIO/gpio.c: 118:         *logic = ((*por
      +                          t_registers[_pin_config->port] >> _pin_config->pin)& (uint8)1);
   880   001386  502C               	movf	gpio_pin_read_logic@logic^0,w,c
   881   001388  6ED9               	movwf	fsr2l,c
   882   00138A  6ADA               	clrf	fsr2h,c
   883   00138C  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   884   00138E  6EE1               	movwf	fsr1l,c
   885   001390  6AE2               	clrf	fsr1h,c
   886   001392  30E7               	rrcf	231,w,c
   887   001394  32E8               	rrcf	wreg,f,c
   888   001396  32E8               	rrcf	wreg,f,c
   889   001398  0B07               	andlw	7
   890   00139A  6E2D               	movwf	??_gpio_pin_read_logic^0,c
   891   00139C  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   892   00139E  6EE1               	movwf	fsr1l,c
   893   0013A0  6AE2               	clrf	fsr1h,c
   894   0013A2  50E7               	movf	231,w,c
   895   0013A4  0B07               	andlw	7
   896   0013A6  0D02               	mullw	2
   897   0013A8  50F3               	movf	243,w,c
   898   0013AA  0F01               	addlw	low _port_registers
   899   0013AC  6EE1               	movwf	fsr1l,c
   900   0013AE  6AE2               	clrf	fsr1h,c
   901   0013B0  CFE6 F02E          	movff	postinc1,??_gpio_pin_read_logic+1
   902   0013B4  CFE5 F02F          	movff	postdec1,??_gpio_pin_read_logic+2
   903   0013B8  C02E  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
   904   0013BC  C02F  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
   905   0013C0  50E7               	movf	indf1,w,c
   906   0013C2  6E30               	movwf	(??_gpio_pin_read_logic+3)^0,c
   907   0013C4  2A2D               	incf	??_gpio_pin_read_logic^0,f,c
   908   0013C6  EFE7  F009         	goto	u1144
   909   0013CA                     u1145:
   910   0013CA  90D8               	bcf	status,0,c
   911   0013CC  3230               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
   912   0013CE                     u1144:
   913   0013CE  2E2D               	decfsz	??_gpio_pin_read_logic^0,f,c
   914   0013D0  EFE5  F009         	goto	u1145
   915   0013D4  5030               	movf	(??_gpio_pin_read_logic+3)^0,w,c
   916   0013D6  0B01               	andlw	1
   917   0013D8  6EDF               	movwf	indf2,c
   918   0013DA                     l1844:
   919                           
   920                           ;MCAL_layer/GPIO/gpio.c: 121:     return ret;
   921   0013DA  5031               	movf	gpio_pin_read_logic@ret^0,w,c
   922   0013DC  0012               	return		;funcret
   923   0013DE                     __end_of_gpio_pin_read_logic:
   924                           	callstack 0
   925                           
   926 ;; *************** function _application_initializ *****************
   927 ;; Defined at:
   928 ;;		line 61 in file "application.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 3
   949 ;; This function calls:
   950 ;;		_keypad_initialize
   951 ;;		_seg_initialization
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text4
   958   001650                     __ptext4:
   959                           	callstack 0
   960   001650                     _application_initializ:
   961                           	callstack 27
   962   001650  0E1F               	movlw	low _keypad
   963   001652  6E36               	movwf	keypad_initialize@_keypad_config^0,c
   964   001654  ECEF  F009         	call	_keypad_initialize	;wreg free
   965   001658  6E52               	movwf	_ret^0,c
   966   00165A  0E27               	movlw	low _seg
   967   00165C  6E36               	movwf	seg_initialization@_seg_config^0,c
   968   00165E  ECD4  F00A         	call	_seg_initialization	;wreg free
   969   001662  6E52               	movwf	_ret^0,c
   970   001664  0012               	return		;funcret
   971   001666                     __end_of_application_initializ:
   972                           	callstack 0
   973                           
   974 ;; *************** function _seg_initialization *****************
   975 ;; Defined at:
   976 ;;		line 15 in file "ECU_layer/7-seg/7-seg.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  _seg_config     1   11[COMRAM] PTR const struct .
   979 ;;		 -> seg(4), 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  ret             1   12[COMRAM] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      unsigned char 
   984 ;; Registers used:
   985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   991 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 2
   998 ;; This function calls:
   999 ;;		_gpio_pin_Initialization
  1000 ;; This function is called by:
  1001 ;;		_application_initializ
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text5
  1006   0015A8                     __ptext5:
  1007                           	callstack 0
  1008   0015A8                     _seg_initialization:
  1009                           	callstack 27
  1010   0015A8                     
  1011                           ;ECU_layer/7-seg/7-seg.c: 20:     if (((void*)0) == _seg_config)
  1012   0015A8  5036               	movf	seg_initialization@_seg_config^0,w,c
  1013   0015AA  A4D8               	btfss	status,2,c
  1014   0015AC  EFDA  F00A         	goto	u1101
  1015   0015B0  EFDC  F00A         	goto	u1100
  1016   0015B4                     u1101:
  1017   0015B4  EFE0  F00A         	goto	l1828
  1018   0015B8                     u1100:
  1019   0015B8                     
  1020                           ;ECU_layer/7-seg/7-seg.c: 21:     {;ECU_layer/7-seg/7-seg.c: 22:         ret = (STD_Retu
      +                          rnType)0x00;
  1021   0015B8  0E00               	movlw	0
  1022   0015BA  6E37               	movwf	seg_initialization@ret^0,c
  1023                           
  1024                           ;ECU_layer/7-seg/7-seg.c: 23:     }
  1025   0015BC  EFF6  F00A         	goto	l1830
  1026   0015C0                     l1828:
  1027                           
  1028                           ;ECU_layer/7-seg/7-seg.c: 25:     {;ECU_layer/7-seg/7-seg.c: 26:         ret = gpio_pin_
      +                          Initialization(&(_seg_config->_seg_pin[seg_pin0]));
  1029   0015C0  C036  F033         	movff	seg_initialization@_seg_config,gpio_pin_Initialization@_pin_config
  1030   0015C4  ECA5  F00A         	call	_gpio_pin_Initialization	;wreg free
  1031   0015C8  6E37               	movwf	seg_initialization@ret^0,c
  1032                           
  1033                           ;ECU_layer/7-seg/7-seg.c: 27:         ret = gpio_pin_Initialization(&(_seg_config->_seg_
      +                          pin[seg_pin1]));
  1034   0015CA  2836               	incf	seg_initialization@_seg_config^0,w,c
  1035   0015CC  6E33               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1036   0015CE  ECA5  F00A         	call	_gpio_pin_Initialization	;wreg free
  1037   0015D2  6E37               	movwf	seg_initialization@ret^0,c
  1038                           
  1039                           ;ECU_layer/7-seg/7-seg.c: 28:         ret = gpio_pin_Initialization(&(_seg_config->_seg_
      +                          pin[seg_pin2]));
  1040   0015D4  5036               	movf	seg_initialization@_seg_config^0,w,c
  1041   0015D6  0F02               	addlw	2
  1042   0015D8  6E33               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1043   0015DA  ECA5  F00A         	call	_gpio_pin_Initialization	;wreg free
  1044   0015DE  6E37               	movwf	seg_initialization@ret^0,c
  1045                           
  1046                           ;ECU_layer/7-seg/7-seg.c: 29:         ret = gpio_pin_Initialization(&(_seg_config->_seg_
      +                          pin[seg_pin3]));
  1047   0015E0  5036               	movf	seg_initialization@_seg_config^0,w,c
  1048   0015E2  0F03               	addlw	3
  1049   0015E4  6E33               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1050   0015E6  ECA5  F00A         	call	_gpio_pin_Initialization	;wreg free
  1051   0015EA  6E37               	movwf	seg_initialization@ret^0,c
  1052   0015EC                     l1830:
  1053                           
  1054                           ;ECU_layer/7-seg/7-seg.c: 31:     return ret;
  1055   0015EC  5037               	movf	seg_initialization@ret^0,w,c
  1056   0015EE  0012               	return		;funcret
  1057   0015F0                     __end_of_seg_initialization:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _keypad_initialize *****************
  1061 ;; Defined at:
  1062 ;;		line 23 in file "ECU_layer/Keypad/keypad.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  _keypad_conf    1   11[COMRAM] PTR const struct .
  1065 ;;		 -> keypad(8), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  j               2   15[COMRAM] int 
  1068 ;;  i               2   13[COMRAM] int 
  1069 ;;  ret             1   12[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      unsigned char 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        6 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 2
  1086 ;; This function calls:
  1087 ;;		_gpio_pin_Initialization
  1088 ;; This function is called by:
  1089 ;;		_application_initializ
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text6
  1094   0013DE                     __ptext6:
  1095                           	callstack 0
  1096   0013DE                     _keypad_initialize:
  1097                           	callstack 27
  1098   0013DE                     
  1099                           ;ECU_layer/Keypad/keypad.c: 27:     if (((void*)0) == _keypad_config)
  1100   0013DE  5036               	movf	keypad_initialize@_keypad_config^0,w,c
  1101   0013E0  A4D8               	btfss	status,2,c
  1102   0013E2  EFF5  F009         	goto	u1151
  1103   0013E6  EFF7  F009         	goto	u1150
  1104   0013EA                     u1151:
  1105   0013EA  EFFB  F009         	goto	l1852
  1106   0013EE                     u1150:
  1107   0013EE                     
  1108                           ;ECU_layer/Keypad/keypad.c: 28:     {;ECU_layer/Keypad/keypad.c: 29:         ret = (STD_
      +                          ReturnType)0x00;
  1109   0013EE  0E00               	movlw	0
  1110   0013F0  6E37               	movwf	keypad_initialize@ret^0,c
  1111                           
  1112                           ;ECU_layer/Keypad/keypad.c: 30:     }
  1113   0013F2  EF2F  F00A         	goto	l1876
  1114   0013F6                     l1852:
  1115                           
  1116                           ;ECU_layer/Keypad/keypad.c: 32:     {;ECU_layer/Keypad/keypad.c: 33:         for(int i =
      +                           0 ; i < 4 ; i++)
  1117   0013F6  0E00               	movlw	0
  1118   0013F8  6E39               	movwf	(keypad_initialize@i+1)^0,c
  1119   0013FA  0E00               	movlw	0
  1120   0013FC  6E38               	movwf	keypad_initialize@i^0,c
  1121   0013FE                     l1858:
  1122   0013FE  5036               	movf	keypad_initialize@_keypad_config^0,w,c
  1123   001400  2438               	addwf	keypad_initialize@i^0,w,c
  1124   001402  6E33               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1125   001404  ECA5  F00A         	call	_gpio_pin_Initialization	;wreg free
  1126   001408                     
  1127                           ;ECU_layer/Keypad/keypad.c: 36:         }
  1128   001408  4A38               	infsnz	keypad_initialize@i^0,f,c
  1129   00140A  2A39               	incf	(keypad_initialize@i+1)^0,f,c
  1130   00140C  BE39               	btfsc	(keypad_initialize@i+1)^0,7,c
  1131   00140E  EF12  F00A         	goto	u1161
  1132   001412  5039               	movf	(keypad_initialize@i+1)^0,w,c
  1133   001414  E109               	bnz	u1160
  1134   001416  0E04               	movlw	4
  1135   001418  5C38               	subwf	keypad_initialize@i^0,w,c
  1136   00141A  A0D8               	btfss	status,0,c
  1137   00141C  EF12  F00A         	goto	u1161
  1138   001420  EF14  F00A         	goto	u1160
  1139   001424                     u1161:
  1140   001424  EFFF  F009         	goto	l1858
  1141   001428                     u1160:
  1142   001428                     
  1143                           ;ECU_layer/Keypad/keypad.c: 38:         for(int j = 0 ; j < 4 ; j++)
  1144   001428  0E00               	movlw	0
  1145   00142A  6E3B               	movwf	(keypad_initialize@j+1)^0,c
  1146   00142C  0E00               	movlw	0
  1147   00142E  6E3A               	movwf	keypad_initialize@j^0,c
  1148   001430                     l1870:
  1149                           
  1150                           ;ECU_layer/Keypad/keypad.c: 39:         {;ECU_layer/Keypad/keypad.c: 40:         ret = g
      +                          pio_pin_Initialization(&(_keypad_config->keypad_colums[j]));
  1151   001430  5036               	movf	keypad_initialize@_keypad_config^0,w,c
  1152   001432  243A               	addwf	keypad_initialize@j^0,w,c
  1153   001434  0F04               	addlw	4
  1154   001436  6E33               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1155   001438  ECA5  F00A         	call	_gpio_pin_Initialization	;wreg free
  1156   00143C  6E37               	movwf	keypad_initialize@ret^0,c
  1157   00143E                     
  1158                           ;ECU_layer/Keypad/keypad.c: 41:         }
  1159   00143E  4A3A               	infsnz	keypad_initialize@j^0,f,c
  1160   001440  2A3B               	incf	(keypad_initialize@j+1)^0,f,c
  1161   001442  BE3B               	btfsc	(keypad_initialize@j+1)^0,7,c
  1162   001444  EF2D  F00A         	goto	u1171
  1163   001448  503B               	movf	(keypad_initialize@j+1)^0,w,c
  1164   00144A  E109               	bnz	u1170
  1165   00144C  0E04               	movlw	4
  1166   00144E  5C3A               	subwf	keypad_initialize@j^0,w,c
  1167   001450  A0D8               	btfss	status,0,c
  1168   001452  EF2D  F00A         	goto	u1171
  1169   001456  EF2F  F00A         	goto	u1170
  1170   00145A                     u1171:
  1171   00145A  EF18  F00A         	goto	l1870
  1172   00145E                     u1170:
  1173   00145E                     l1876:
  1174                           
  1175                           ;ECU_layer/Keypad/keypad.c: 44:     return ret;
  1176   00145E  5037               	movf	keypad_initialize@ret^0,w,c
  1177   001460  0012               	return		;funcret
  1178   001462                     __end_of_keypad_initialize:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _gpio_pin_Initialization *****************
  1182 ;; Defined at:
  1183 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1186 ;;		 -> seg$_seg_pin(4), seg(4), keypad$keypad_colums(4), keypad$keypad_rows(4), 
  1187 ;;		 -> keypad(8), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_
      +pin_2(1), 
  1188 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  ret             1   10[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      unsigned char 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:        3 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 1
  1207 ;; This function calls:
  1208 ;;		_gpio_pin_direction_init
  1209 ;;		_gpio_pin_write_logic
  1210 ;; This function is called by:
  1211 ;;		_seg_initialization
  1212 ;;		_keypad_initialize
  1213 ;;		_ecu_dc_motor_initializ
  1214 ;;		_lcd_4bit_init
  1215 ;;		_lcd_8bit_init
  1216 ;;		_ecu_led_initializ
  1217 ;;		_ecu_relay_initializ
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text7
  1222   00154A                     __ptext7:
  1223                           	callstack 0
  1224   00154A                     _gpio_pin_Initialization:
  1225                           	callstack 27
  1226   00154A                     
  1227                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
  1228   00154A  5033               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1229   00154C  B4D8               	btfsc	status,2,c
  1230   00154E  EFAB  F00A         	goto	u1081
  1231   001552  EFAD  F00A         	goto	u1080
  1232   001556                     u1081:
  1233   001556  EFBD  F00A         	goto	l1816
  1234   00155A                     u1080:
  1235   00155A  5033               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1236   00155C  6ED9               	movwf	fsr2l,c
  1237   00155E  6ADA               	clrf	fsr2h,c
  1238   001560  30DF               	rrcf	223,w,c
  1239   001562  32E8               	rrcf	wreg,f,c
  1240   001564  32E8               	rrcf	wreg,f,c
  1241   001566  0B07               	andlw	7
  1242   001568  6E34               	movwf	??_gpio_pin_Initialization^0,c
  1243   00156A  0E07               	movlw	7
  1244   00156C  6434               	cpfsgt	??_gpio_pin_Initialization^0,c
  1245   00156E  EFBB  F00A         	goto	u1091
  1246   001572  EFBD  F00A         	goto	u1090
  1247   001576                     u1091:
  1248   001576  EFC1  F00A         	goto	l1818
  1249   00157A                     u1090:
  1250   00157A                     l1816:
  1251                           
  1252                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
  1253   00157A  0E00               	movlw	0
  1254   00157C  6E35               	movwf	gpio_pin_Initialization@ret^0,c
  1255                           
  1256                           ;MCAL_layer/GPIO/gpio.c: 154:     }
  1257   00157E  EFD2  F00A         	goto	l1820
  1258   001582                     l1818:
  1259                           
  1260                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
  1261   001582  C033  F02B         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
  1262   001586  EC09  F008         	call	_gpio_pin_direction_init	;wreg free
  1263   00158A  6E35               	movwf	gpio_pin_Initialization@ret^0,c
  1264                           
  1265                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
  1266   00158C  C033  F02B         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
  1267   001590  5033               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1268   001592  6ED9               	movwf	fsr2l,c
  1269   001594  6ADA               	clrf	fsr2h,c
  1270   001596  0E00               	movlw	0
  1271   001598  BEDF               	btfsc	indf2,7,c
  1272   00159A  0E01               	movlw	1
  1273   00159C  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
  1274   00159E  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1275   0015A2  6E35               	movwf	gpio_pin_Initialization@ret^0,c
  1276   0015A4                     l1820:
  1277                           
  1278                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
  1279   0015A4  5035               	movf	gpio_pin_Initialization@ret^0,w,c
  1280   0015A6  0012               	return		;funcret
  1281   0015A8                     __end_of_gpio_pin_Initialization:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function _gpio_pin_write_logic *****************
  1285 ;; Defined at:
  1286 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1289 ;;		 -> seg$_seg_pin(4), seg(4), keypad$keypad_colums(4), keypad$keypad_rows(4), 
  1290 ;;		 -> keypad(8), ecu_relay_turn_off@relay_init(1), ecu_relay_turn_on@relay_init(1), ecu_relay_initializ@relay_init(1),
      + 
  1291 ;;		 -> ecu_led_turn_off@_pin_config(1), ecu_led_turn_on@_pin_config(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_
      +stop@dc_motor_pin_2(1), 
  1292 ;;		 -> ecu_dc_motor_stop@dc_motor_pin_1(1), ecu_dc_motor_move_left@dc_motor_pin_2(1), ecu_dc_motor_move_left@dc_motor_p
      +in_1(1), ecu_dc_motor_move_right@dc_motor_pin_2(1), 
  1293 ;;		 -> ecu_dc_motor_move_right@dc_motor_pin_1(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_m
      +otor_pin_1(1), 
  1294 ;;  logic           1    1[COMRAM] enum E2814
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  ret             1    7[COMRAM] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      unsigned char 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:        8 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_seg_write_number
  1316 ;;		_keypad_get_value
  1317 ;;		_gpio_pin_Initialization
  1318 ;;		_ecu_dc_motor_move_right
  1319 ;;		_ecu_dc_motor_move_left
  1320 ;;		_ecu_dc_motor_stop
  1321 ;;		_ecu_led_turn_on
  1322 ;;		_ecu_led_turn_off
  1323 ;;		_ecu_relay_turn_on
  1324 ;;		_ecu_relay_turn_off
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text8
  1329   001124                     __ptext8:
  1330                           	callstack 0
  1331   001124                     _gpio_pin_write_logic:
  1332                           	callstack 29
  1333   001124                     
  1334                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
  1335   001124  0E01               	movlw	1
  1336   001126  6E32               	movwf	gpio_pin_write_logic@ret^0,c
  1337                           
  1338                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1339   001128  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1340   00112A  B4D8               	btfsc	status,2,c
  1341   00112C  EF9A  F008         	goto	u991
  1342   001130  EF9C  F008         	goto	u990
  1343   001134                     u991:
  1344   001134  EFAC  F008         	goto	l1776
  1345   001138                     u990:
  1346   001138  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1347   00113A  6ED9               	movwf	fsr2l,c
  1348   00113C  6ADA               	clrf	fsr2h,c
  1349   00113E  30DF               	rrcf	223,w,c
  1350   001140  32E8               	rrcf	wreg,f,c
  1351   001142  32E8               	rrcf	wreg,f,c
  1352   001144  0B07               	andlw	7
  1353   001146  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  1354   001148  0E07               	movlw	7
  1355   00114A  642D               	cpfsgt	??_gpio_pin_write_logic^0,c
  1356   00114C  EFAA  F008         	goto	u1001
  1357   001150  EFAC  F008         	goto	u1000
  1358   001154                     u1001:
  1359   001154  EF03  F009         	goto	l1784
  1360   001158                     u1000:
  1361   001158                     l1776:
  1362                           
  1363                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
  1364   001158  0E00               	movlw	0
  1365   00115A  6E32               	movwf	gpio_pin_write_logic@ret^0,c
  1366                           
  1367                           ;MCAL_layer/GPIO/gpio.c: 82:     }
  1368   00115C  EF18  F009         	goto	l1786
  1369   001160                     l1778:
  1370                           
  1371                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  1372   001160  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1373   001162  6ED9               	movwf	fsr2l,c
  1374   001164  6ADA               	clrf	fsr2h,c
  1375   001166  30DF               	rrcf	223,w,c
  1376   001168  32E8               	rrcf	wreg,f,c
  1377   00116A  32E8               	rrcf	wreg,f,c
  1378   00116C  0B07               	andlw	7
  1379   00116E  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  1380   001170  0E01               	movlw	1
  1381   001172  6E2E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1382   001174  2A2D               	incf	??_gpio_pin_write_logic^0,f,c
  1383   001176  EFBF  F008         	goto	u1014
  1384   00117A                     u1015:
  1385   00117A  90D8               	bcf	status,0,c
  1386   00117C  362E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1387   00117E                     u1014:
  1388   00117E  2E2D               	decfsz	??_gpio_pin_write_logic^0,f,c
  1389   001180  EFBD  F008         	goto	u1015
  1390   001184  502E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1391   001186  0AFF               	xorlw	255
  1392   001188  6E2F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1393   00118A  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1394   00118C  6ED9               	movwf	fsr2l,c
  1395   00118E  6ADA               	clrf	fsr2h,c
  1396   001190  50DF               	movf	223,w,c
  1397   001192  0B07               	andlw	7
  1398   001194  0D02               	mullw	2
  1399   001196  50F3               	movf	243,w,c
  1400   001198  0F0B               	addlw	low _lat_registers
  1401   00119A  6ED9               	movwf	fsr2l,c
  1402   00119C  6ADA               	clrf	fsr2h,c
  1403   00119E  CFDE F030          	movff	postinc2,??_gpio_pin_write_logic+3
  1404   0011A2  CFDD F031          	movff	postdec2,??_gpio_pin_write_logic+4
  1405   0011A6  C030  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1406   0011AA  C031  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1407   0011AE  502F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1408   0011B0  16DF               	andwf	indf2,f,c
  1409                           
  1410                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
  1411   0011B2  EF18  F009         	goto	l1786
  1412   0011B6                     l1780:
  1413                           
  1414                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  1415   0011B6  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1416   0011B8  6ED9               	movwf	fsr2l,c
  1417   0011BA  6ADA               	clrf	fsr2h,c
  1418   0011BC  30DF               	rrcf	223,w,c
  1419   0011BE  32E8               	rrcf	wreg,f,c
  1420   0011C0  32E8               	rrcf	wreg,f,c
  1421   0011C2  0B07               	andlw	7
  1422   0011C4  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  1423   0011C6  0E01               	movlw	1
  1424   0011C8  6E2E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1425   0011CA  2A2D               	incf	??_gpio_pin_write_logic^0,f,c
  1426   0011CC  EFEA  F008         	goto	u1024
  1427   0011D0                     u1025:
  1428   0011D0  90D8               	bcf	status,0,c
  1429   0011D2  362E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1430   0011D4                     u1024:
  1431   0011D4  2E2D               	decfsz	??_gpio_pin_write_logic^0,f,c
  1432   0011D6  EFE8  F008         	goto	u1025
  1433   0011DA  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1434   0011DC  6ED9               	movwf	fsr2l,c
  1435   0011DE  6ADA               	clrf	fsr2h,c
  1436   0011E0  50DF               	movf	223,w,c
  1437   0011E2  0B07               	andlw	7
  1438   0011E4  0D02               	mullw	2
  1439   0011E6  50F3               	movf	243,w,c
  1440   0011E8  0F0B               	addlw	low _lat_registers
  1441   0011EA  6ED9               	movwf	fsr2l,c
  1442   0011EC  6ADA               	clrf	fsr2h,c
  1443   0011EE  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+2
  1444   0011F2  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+3
  1445   0011F6  C02F  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1446   0011FA  C030  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1447   0011FE  502E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1448   001200  12DF               	iorwf	indf2,f,c
  1449                           
  1450                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  1451   001202  EF18  F009         	goto	l1786
  1452   001206                     l1784:
  1453   001206  502C               	movf	gpio_pin_write_logic@logic^0,w,c
  1454   001208  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  1455   00120A  6A2E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1456                           
  1457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 1, Range of values is 0 to 0
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            4     3 (average)
  1463                           ;	Chosen strategy is simple_byte
  1464   00120C  502E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1465   00120E  0A00               	xorlw	0	; case 0
  1466   001210  B4D8               	btfsc	status,2,c
  1467   001212  EF0D  F009         	goto	l2252
  1468   001216  EFAC  F008         	goto	l1776
  1469   00121A                     l2252:
  1470                           
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 2, Range of values is 0 to 1
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            7     4 (average)
  1476                           ;	Chosen strategy is simple_byte
  1477   00121A  502D               	movf	??_gpio_pin_write_logic^0,w,c
  1478   00121C  0A00               	xorlw	0	; case 0
  1479   00121E  B4D8               	btfsc	status,2,c
  1480   001220  EFB0  F008         	goto	l1778
  1481   001224  0A01               	xorlw	1	; case 1
  1482   001226  B4D8               	btfsc	status,2,c
  1483   001228  EFDB  F008         	goto	l1780
  1484   00122C  EFAC  F008         	goto	l1776
  1485   001230                     l1786:
  1486                           
  1487                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  1488   001230  5032               	movf	gpio_pin_write_logic@ret^0,w,c
  1489   001232  0012               	return		;funcret
  1490   001234                     __end_of_gpio_pin_write_logic:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function _gpio_pin_direction_init *****************
  1494 ;; Defined at:
  1495 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1498 ;;		 -> seg$_seg_pin(4), seg(4), keypad$keypad_colums(4), keypad$keypad_rows(4), 
  1499 ;;		 -> keypad(8), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_
      +pin_2(1), 
  1500 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  ret             1    6[COMRAM] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      unsigned char 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1512 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;Total ram usage:        7 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_gpio_pin_Initialization
  1522 ;;		_ecu_button_init
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text9
  1527   001012                     __ptext9:
  1528                           	callstack 0
  1529   001012                     _gpio_pin_direction_init:
  1530                           	callstack 27
  1531   001012                     
  1532                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  1533   001012  0E01               	movlw	1
  1534   001014  6E31               	movwf	gpio_pin_direction_init@ret^0,c
  1535                           
  1536                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  1537   001016  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1538   001018  B4D8               	btfsc	status,2,c
  1539   00101A  EF11  F008         	goto	u1031
  1540   00101E  EF13  F008         	goto	u1030
  1541   001022                     u1031:
  1542   001022  EF23  F008         	goto	l1798
  1543   001026                     u1030:
  1544   001026  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1545   001028  6ED9               	movwf	fsr2l,c
  1546   00102A  6ADA               	clrf	fsr2h,c
  1547   00102C  30DF               	rrcf	223,w,c
  1548   00102E  32E8               	rrcf	wreg,f,c
  1549   001030  32E8               	rrcf	wreg,f,c
  1550   001032  0B07               	andlw	7
  1551   001034  6E2C               	movwf	??_gpio_pin_direction_init^0,c
  1552   001036  0E07               	movlw	7
  1553   001038  642C               	cpfsgt	??_gpio_pin_direction_init^0,c
  1554   00103A  EF21  F008         	goto	u1041
  1555   00103E  EF23  F008         	goto	u1040
  1556   001042                     u1041:
  1557   001042  EF7A  F008         	goto	l1806
  1558   001046                     u1040:
  1559   001046                     l1798:
  1560                           
  1561                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  1562   001046  0E00               	movlw	0
  1563   001048  6E31               	movwf	gpio_pin_direction_init@ret^0,c
  1564                           
  1565                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  1566   00104A  EF90  F008         	goto	l1808
  1567   00104E                     l1800:
  1568                           
  1569                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  1570   00104E  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1571   001050  6ED9               	movwf	fsr2l,c
  1572   001052  6ADA               	clrf	fsr2h,c
  1573   001054  30DF               	rrcf	223,w,c
  1574   001056  32E8               	rrcf	wreg,f,c
  1575   001058  32E8               	rrcf	wreg,f,c
  1576   00105A  0B07               	andlw	7
  1577   00105C  6E2C               	movwf	??_gpio_pin_direction_init^0,c
  1578   00105E  0E01               	movlw	1
  1579   001060  6E2D               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1580   001062  2A2C               	incf	??_gpio_pin_direction_init^0,f,c
  1581   001064  EF36  F008         	goto	u1054
  1582   001068                     u1055:
  1583   001068  90D8               	bcf	status,0,c
  1584   00106A  362D               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1585   00106C                     u1054:
  1586   00106C  2E2C               	decfsz	??_gpio_pin_direction_init^0,f,c
  1587   00106E  EF34  F008         	goto	u1055
  1588   001072  502D               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1589   001074  0AFF               	xorlw	255
  1590   001076  6E2E               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1591   001078  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1592   00107A  6ED9               	movwf	fsr2l,c
  1593   00107C  6ADA               	clrf	fsr2h,c
  1594   00107E  50DF               	movf	223,w,c
  1595   001080  0B07               	andlw	7
  1596   001082  0D02               	mullw	2
  1597   001084  50F3               	movf	243,w,c
  1598   001086  0F15               	addlw	low _tris_registers
  1599   001088  6ED9               	movwf	fsr2l,c
  1600   00108A  6ADA               	clrf	fsr2h,c
  1601   00108C  CFDE F02F          	movff	postinc2,??_gpio_pin_direction_init+3
  1602   001090  CFDD F030          	movff	postdec2,??_gpio_pin_direction_init+4
  1603   001094  C02F  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1604   001098  C030  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1605   00109C  502E               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1606   00109E  16DF               	andwf	indf2,f,c
  1607                           
  1608                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  1609   0010A0  EF90  F008         	goto	l1808
  1610   0010A4                     l1802:
  1611                           
  1612                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  1613   0010A4  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1614   0010A6  6ED9               	movwf	fsr2l,c
  1615   0010A8  6ADA               	clrf	fsr2h,c
  1616   0010AA  30DF               	rrcf	223,w,c
  1617   0010AC  32E8               	rrcf	wreg,f,c
  1618   0010AE  32E8               	rrcf	wreg,f,c
  1619   0010B0  0B07               	andlw	7
  1620   0010B2  6E2C               	movwf	??_gpio_pin_direction_init^0,c
  1621   0010B4  0E01               	movlw	1
  1622   0010B6  6E2D               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1623   0010B8  2A2C               	incf	??_gpio_pin_direction_init^0,f,c
  1624   0010BA  EF61  F008         	goto	u1064
  1625   0010BE                     u1065:
  1626   0010BE  90D8               	bcf	status,0,c
  1627   0010C0  362D               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1628   0010C2                     u1064:
  1629   0010C2  2E2C               	decfsz	??_gpio_pin_direction_init^0,f,c
  1630   0010C4  EF5F  F008         	goto	u1065
  1631   0010C8  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1632   0010CA  6ED9               	movwf	fsr2l,c
  1633   0010CC  6ADA               	clrf	fsr2h,c
  1634   0010CE  50DF               	movf	223,w,c
  1635   0010D0  0B07               	andlw	7
  1636   0010D2  0D02               	mullw	2
  1637   0010D4  50F3               	movf	243,w,c
  1638   0010D6  0F15               	addlw	low _tris_registers
  1639   0010D8  6ED9               	movwf	fsr2l,c
  1640   0010DA  6ADA               	clrf	fsr2h,c
  1641   0010DC  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+2
  1642   0010E0  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+3
  1643   0010E4  C02E  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1644   0010E8  C02F  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1645   0010EC  502D               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1646   0010EE  12DF               	iorwf	indf2,f,c
  1647                           
  1648                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  1649   0010F0  EF90  F008         	goto	l1808
  1650   0010F4                     l1806:
  1651   0010F4  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1652   0010F6  6ED9               	movwf	fsr2l,c
  1653   0010F8  6ADA               	clrf	fsr2h,c
  1654   0010FA  BCDF               	btfsc	indf2,6,c
  1655   0010FC  EF82  F008         	goto	u1071
  1656   001100  EF85  F008         	goto	u1070
  1657   001104                     u1071:
  1658   001104  0E01               	movlw	1
  1659   001106  EF86  F008         	goto	u1076
  1660   00110A                     u1070:
  1661   00110A  0E00               	movlw	0
  1662   00110C                     u1076:
  1663                           
  1664                           ; Switch size 1, requested type "simple"
  1665                           ; Number of cases is 2, Range of values is 0 to 1
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte            7     4 (average)
  1669                           ;	Chosen strategy is simple_byte
  1670   00110C  0A00               	xorlw	0	; case 0
  1671   00110E  B4D8               	btfsc	status,2,c
  1672   001110  EF27  F008         	goto	l1800
  1673   001114  0A01               	xorlw	1	; case 1
  1674   001116  B4D8               	btfsc	status,2,c
  1675   001118  EF52  F008         	goto	l1802
  1676   00111C  EF23  F008         	goto	l1798
  1677   001120                     l1808:
  1678                           
  1679                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  1680   001120  5031               	movf	gpio_pin_direction_init@ret^0,w,c
  1681   001122  0012               	return		;funcret
  1682   001124                     __end_of_gpio_pin_direction_init:
  1683                           	callstack 0
  1684                           
  1685                           	psect	rparam
  1686   000000                     
  1687                           	psect	config
  1688                           
  1689                           ; Padding undefined space
  1690   300000                     	org	3145728
  1691   300000  FF                 	db	255
  1692                           
  1693                           ;Config register CONFIG1H @ 0x300001
  1694                           ;	Oscillator Selection bits
  1695                           ;	OSC = HS, HS oscillator
  1696                           ;	Fail-Safe Clock Monitor Enable bit
  1697                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1698                           ;	Internal/External Oscillator Switchover bit
  1699                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1700   300001                     	org	3145729
  1701   300001  02                 	db	2
  1702                           
  1703                           ;Config register CONFIG2L @ 0x300002
  1704                           ;	Power-up Timer Enable bit
  1705                           ;	PWRT = OFF, PWRT disabled
  1706                           ;	Brown-out Reset Enable bits
  1707                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1708                           ;	Brown Out Reset Voltage bits
  1709                           ;	BORV = 3, Minimum setting
  1710   300002                     	org	3145730
  1711   300002  1F                 	db	31
  1712                           
  1713                           ;Config register CONFIG2H @ 0x300003
  1714                           ;	Watchdog Timer Enable bit
  1715                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1716                           ;	Watchdog Timer Postscale Select bits
  1717                           ;	WDTPS = 32768, 1:32768
  1718   300003                     	org	3145731
  1719   300003  1E                 	db	30
  1720                           
  1721                           ; Padding undefined space
  1722   300004                     	org	3145732
  1723   300004  FF                 	db	255
  1724                           
  1725                           ;Config register CONFIG3H @ 0x300005
  1726                           ;	CCP2 MUX bit
  1727                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1728                           ;	PORTB A/D Enable bit
  1729                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1730                           ;	Low-Power Timer1 Oscillator Enable bit
  1731                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1732                           ;	MCLR Pin Enable bit
  1733                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1734   300005                     	org	3145733
  1735   300005  81                 	db	129
  1736                           
  1737                           ;Config register CONFIG4L @ 0x300006
  1738                           ;	Stack Full/Underflow Reset Enable bit
  1739                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1740                           ;	Single-Supply ICSP Enable bit
  1741                           ;	LVP = OFF, Single-Supply ICSP disabled
  1742                           ;	Extended Instruction Set Enable bit
  1743                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1744                           ;	Background Debugger Enable bit
  1745                           ;	DEBUG = 0x1, unprogrammed default
  1746   300006                     	org	3145734
  1747   300006  81                 	db	129
  1748                           
  1749                           ; Padding undefined space
  1750   300007                     	org	3145735
  1751   300007  FF                 	db	255
  1752                           
  1753                           ;Config register CONFIG5L @ 0x300008
  1754                           ;	Code Protection bit
  1755                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1756                           ;	Code Protection bit
  1757                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1758                           ;	Code Protection bit
  1759                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1760                           ;	Code Protection bit
  1761                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1762   300008                     	org	3145736
  1763   300008  0F                 	db	15
  1764                           
  1765                           ;Config register CONFIG5H @ 0x300009
  1766                           ;	Boot Block Code Protection bit
  1767                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1768                           ;	Data EEPROM Code Protection bit
  1769                           ;	CPD = OFF, Data EEPROM not code-protected
  1770   300009                     	org	3145737
  1771   300009  C0                 	db	192
  1772                           
  1773                           ;Config register CONFIG6L @ 0x30000A
  1774                           ;	Write Protection bit
  1775                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1776                           ;	Write Protection bit
  1777                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1778                           ;	Write Protection bit
  1779                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1780                           ;	Write Protection bit
  1781                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1782   30000A                     	org	3145738
  1783   30000A  0F                 	db	15
  1784                           
  1785                           ;Config register CONFIG6H @ 0x30000B
  1786                           ;	Configuration Register Write Protection bit
  1787                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1788                           ;	Boot Block Write Protection bit
  1789                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1790                           ;	Data EEPROM Write Protection bit
  1791                           ;	WRTD = OFF, Data EEPROM not write-protected
  1792   30000B                     	org	3145739
  1793   30000B  E0                 	db	224
  1794                           
  1795                           ;Config register CONFIG7L @ 0x30000C
  1796                           ;	Table Read Protection bit
  1797                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1798                           ;	Table Read Protection bit
  1799                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1800                           ;	Table Read Protection bit
  1801                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1802                           ;	Table Read Protection bit
  1803                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1804   30000C                     	org	3145740
  1805   30000C  0F                 	db	15
  1806                           
  1807                           ;Config register CONFIG7H @ 0x30000D
  1808                           ;	Boot Block Table Read Protection bit
  1809                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1810   30000D                     	org	3145741
  1811   30000D  40                 	db	64
  1812                           tosu	equ	0xFFF
  1813                           tosh	equ	0xFFE
  1814                           tosl	equ	0xFFD
  1815                           stkptr	equ	0xFFC
  1816                           pclatu	equ	0xFFB
  1817                           pclath	equ	0xFFA
  1818                           pcl	equ	0xFF9
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           indf0	equ	0xFEF
  1826                           postinc0	equ	0xFEE
  1827                           postdec0	equ	0xFED
  1828                           preinc0	equ	0xFEC
  1829                           plusw0	equ	0xFEB
  1830                           fsr0h	equ	0xFEA
  1831                           fsr0l	equ	0xFE9
  1832                           wreg	equ	0xFE8
  1833                           indf1	equ	0xFE7
  1834                           postinc1	equ	0xFE6
  1835                           postdec1	equ	0xFE5
  1836                           preinc1	equ	0xFE4
  1837                           plusw1	equ	0xFE3
  1838                           fsr1h	equ	0xFE2
  1839                           fsr1l	equ	0xFE1
  1840                           bsr	equ	0xFE0
  1841                           indf2	equ	0xFDF
  1842                           postinc2	equ	0xFDE
  1843                           postdec2	equ	0xFDD
  1844                           preinc2	equ	0xFDC
  1845                           plusw2	equ	0xFDB
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        42
    BSS         18
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      82
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), keypad$keypad_rows(COMRAM[4]), seg(COMRAM[4]), 
		 -> seg$_seg_pin(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), keypad$keypad_rows(COMRAM[4]), seg(COMRAM[4]), 
		 -> seg$_seg_pin(COMRAM[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), 

    gpio_pin_read_logic@logic	PTR enum E2814 size(1) Largest target is 1
		 -> ecu_button_read_state@pin_logic_status(COMRAM[1]), keypad_get_value@colum_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), 
		 -> keypad$keypad_rows(COMRAM[4]), seg(COMRAM[4]), seg$_seg_pin(COMRAM[4]), 

    keypad_get_value@_keypad_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> value(COMRAM[1]), 

    keypad_initialize@_keypad_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    seg_initialization@_seg_config	PTR const struct . size(1) Largest target is 4
		 -> seg(COMRAM[4]), 

    seg_write_number@_seg_config	PTR const struct . size(1) Largest target is 4
		 -> seg(COMRAM[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _seg_write_number->_gpio_pin_write_logic
    _keypad_get_value->_gpio_pin_write_logic
    _application_initializ->_keypad_initialize
    _seg_initialization->_gpio_pin_Initialization
    _keypad_initialize->_gpio_pin_Initialization
    _gpio_pin_Initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16402
                                             19 COMRAM     2     2      0
              _application_initializ
                   _keypad_get_value
                   _seg_write_number
 ---------------------------------------------------------------------------------
 (1) _seg_write_number                                     3     1      2    3163
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     9      2    3829
                                              8 COMRAM    11     9      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     460
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0    9410
                  _keypad_initialize
                 _seg_initialization
 ---------------------------------------------------------------------------------
 (2) _seg_initialization                                   2     1      1    4660
                                             11 COMRAM     2     1      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                    6     5      1    4750
                                             11 COMRAM     6     5      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    4446
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    2763
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ
     _keypad_initialize
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
     _seg_initialization
       _gpio_pin_Initialization
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _seg_write_number
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      52       1       64.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      39        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 21 08:05:31 2024

                                 l9 15EE                                  l16 14DA  
                                l97 1460                                 l111 1338  
                               l320 1122                                 l360 15A6  
                               l424 1664                                 l346 13DC  
                               l339 1232                                 u990 1138  
                               u991 1134                keypad_initialize@ret 0037  
                               _seg 0027                                 _ret 0052  
                               wreg 0FE8                                l2240 1516  
                              l2232 14DC                                l2242 1526  
                              l2234 14E0                                l2252 121A  
                              l2244 1530                                l2236 14EE  
                              l2246 1534                                l2238 1506  
                              l1800 104E                                l1802 10A4  
                              l1820 15A4                                l1812 154A  
                              l1806 10F4                                l1814 155A  
                              l1830 15EC                                l1910 1270  
                              l1808 1120                                l1816 157A  
                              l1824 15A8                                l1840 137E  
                              l1912 127E                                l1904 1268  
                              l1818 1582                                l1850 13EE  
                              l1826 15B8                                l1842 1386  
                              l1834 133A                                l1930 12F6  
                              l1914 1282                                l1780 11B6  
                              l1772 1124                                l1860 1408  
                              l1852 13F6                                l1828 15C0  
                              l1844 13DA                                l1836 134E  
                              l1932 12FA                                l1924 12B4  
                              l1916 129E                                l1774 1138  
                              l1870 1430                                l1862 140C  
                              l1942 1650                                l1838 135E  
                              l1934 1316                                l1926 12C6  
                              l1918 12AC                                l1784 1206  
                              l1776 1158                                l1872 143E  
                              l1864 1428                                l1848 13DE  
                              l1936 131A                                l1928 12D6  
                              l1880 1462                                l1794 1012  
                              l1778 1160                                l1786 1230  
                              l1874 1442                                l1858 13FE  
                              l1938 1336                                l1882 1472  
                              l1796 1026                                l1876 145E  
                              l1892 1234                                l1884 1482  
                              l1798 1046                                l1894 1248  
                              l1886 148A             ??_application_initializ 003C  
                              l1896 1258                                l1888 14D8  
                              l1898 1260                                u1000 1158  
                              u1001 1154                                u1100 15B8  
                              u1101 15B4                                u1030 1026  
                              u1014 117E                                u1110 134E  
                              u1031 1022                                u1015 117A  
                              u1111 134A                                u1040 1046  
                              u1024 11D4                                u1120 135E  
                              u1200 1248                                u1041 1042  
                              u1025 11D0                                u1121 135A  
                              u1201 1244                                u1130 137E  
                              u1210 1258                                u1131 137A  
                              u1211 1254                                u1220 129E  
                              u1221 129A                                u1070 110A  
                              u1054 106C                                u1150 13EE  
                              u1230 12D6                                u1071 1104  
                              u1055 1068                                u1151 13EA  
                              u1231 12D2                                u1064 10C2  
                              u1080 155A                                u1160 1428  
                              u1144 13CE                                u1240 1316  
                              u1065 10BE                                u1081 1556  
                              u1161 1424                                u1145 13CA  
                              u1241 1312                                u1090 157A  
                              u1170 145E                                u1250 1336  
                              u1091 1576                                u1171 145A  
                              u1251 1332                                u1076 110C  
                              u1180 1472                                u1181 146E  
                              _LATA 0F89                                u1190 1482  
                              _LATB 0F8A                                u1191 147E  
                              _LATC 0F8B                                _LATD 0F8C  
                              _LATE 0F8D                                u1610 1516  
                              u1611 1512                                u1620 1526  
                              u1621 1522                                u1637 14F8  
    gpio_pin_read_logic@_pin_config 002B                                _main 14DC  
                              fsr1h 0FE2                                fsr2h 0FDA  
                              indf1 0FE7                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
          ?_gpio_pin_direction_init 002B                                prodl 0FF3  
                              start 0000                        ___param_bank 0000  
              _gpio_pin_write_logic 1124                               ?_main 002B  
       ecu_dc_motor_initializ@F2897 0050         ecu_dc_motor_initializ@F2899 004F  
                             _PORTA 0F80                               _PORTB 0F81  
                             _PORTC 0F82                               _PORTD 0F83  
                             _PORTE 0F84                               _TRISA 0F92  
                             _TRISB 0F93                               _TRISC 0F94  
                             _TRISD 0F95                               _TRISE 0F96  
          __end_of_keypad_get_value 133A                               _value 0051  
                             tablat 0FF5                               status 0FD8  
                   __initialization 15F0                 keypad_get_value@ret 0036  
                      __end_of_main 154A               ?_gpio_pin_write_logic 002B  
               ecu_led_toggle@F2909 0045            gpio_pin_read_logic@logic 002C  
                     _lat_registers 000B                              ??_main 003E  
           _gpio_pin_Initialization 154A                       __activetblptr 0002  
   keypad_initialize@_keypad_config 0036              seg_write_number@number 0034  
                            _keypad 001F                              clear_0 1616  
                            isa$std 0001                   ?_seg_write_number 0033  
                      __pdataCOMRAM 0001       seg_initialization@_seg_config 0036  
                ??_seg_write_number 0035                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                          __accesstop 0080  
           __end_of__initialization 161C                       ___rparam_used 0001  
            ??_gpio_pin_write_logic 002D                      __pcstackCOMRAM 002B  
         ??_gpio_pin_Initialization 0034        ecu_dc_motor_move_right@F2904 004E  
      ecu_dc_motor_move_right@F2906 004D       __end_of_application_initializ 1666  
                        __pnvCOMRAM 0052  gpio_pin_direction_init@_pin_config 002B  
                 ?_keypad_get_value 0033     __end_of_gpio_pin_Initialization 15A8  
                ??_keypad_get_value 0035                      _tris_registers 0015  
                           __Hparam 0000                             __Lparam 0000  
               _gpio_pin_read_logic 133A                        __psmallconst 1000  
                           __pcinit 15F0                             __ramtop 1000  
                           __ptext0 14DC                             __ptext1 1462  
                           __ptext2 1234                             __ptext3 133A  
                           __ptext4 1650                             __ptext5 15A8  
                           __ptext6 13DE                             __ptext7 154A  
                           __ptext8 1124                             __ptext9 1012  
gpio_pin_Initialization@_pin_config 0033                ?_gpio_pin_read_logic 002B  
              end_of_initialization 161C          __end_of_seg_initialization 15F0  
                     __Lmediumconst 0000                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
             ??_gpio_pin_read_logic 002D               ecu_led_turn_off@F2904 0046  
             keypad_get_value@value 0034             _gpio_pin_direction_init 1012  
    keypad_get_value@_keypad_config 0033                       __pidataCOMRAM 1626  
          ecu_relay_initializ@F2894 0044                 start_initialization 15F0  
       ecu_dc_motor_move_left@F2911 004C         ecu_dc_motor_move_left@F2913 004B  
                       __pbssCOMRAM 0040               _application_initializ 1650  
          ?_gpio_pin_Initialization 0033           ??_gpio_pin_direction_init 002C  
   gpio_pin_write_logic@_pin_config 002B           gpio_pin_write_logic@logic 002C  
                       __smallconst 1000                    _seg_write_number 1462  
                    _keypad_sampels 1001               ecu_relay_toggle@F2909 0041  
        gpio_pin_Initialization@ret 0035                  _seg_initialization 15A8  
                         _num_value 0040                 ?_seg_initialization 0036  
                keypad_initialize@i 0038                  keypad_initialize@j 003A  
              ecu_led_turn_on@F2899 0047     __end_of_gpio_pin_direction_init 1124  
               seg_write_number@ret 0035             gpio_pin_write_logic@ret 0032  
                         copy_data0 1604                   _keypad_initialize 13DE  
                 keypad_get_value@i 003A                   keypad_get_value@j 0038  
                 keypad_get_value@k 003C              __end_of_keypad_sampels 1011  
                ?_keypad_initialize 0036              gpio_pin_read_logic@ret 0031  
            ?_application_initializ 002B                ??_seg_initialization 0037  
                          __Hrparam 0000                            __Lrparam 0000  
               ??_keypad_initialize 0037         __end_of_gpio_pin_read_logic 13DE  
         __end_of_keypad_initialize 1462              ecu_dc_motor_stop@F2920 0049  
            ecu_dc_motor_stop@F2918 004A                    _keypad_get_value 1234  
           ecu_relay_turn_off@F2904 0042                            isa$xinst 0000  
            ecu_led_initializ@F2894 0048        __end_of_gpio_pin_write_logic 1234  
            ecu_relay_turn_on@F2899 0043         keypad_get_value@colum_logic 0037  
          __end_of_seg_write_number 14DC                      _port_registers 0001  
        gpio_pin_direction_init@ret 0031               seg_initialization@ret 0037  
       seg_write_number@_seg_config 0033  
