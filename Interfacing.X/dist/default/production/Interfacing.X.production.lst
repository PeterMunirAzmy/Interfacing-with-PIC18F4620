

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 16 02:56:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 17/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   0011D2                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _port_registers
    68   0011D2  80                 	db	128
    69   0011D3  0F                 	db	15
    70   0011D4  81                 	db	129
    71   0011D5  0F                 	db	15
    72   0011D6  82                 	db	130
    73   0011D7  0F                 	db	15
    74   0011D8  83                 	db	131
    75   0011D9  0F                 	db	15
    76   0011DA  84                 	db	132
    77   0011DB  0F                 	db	15
    78                           
    79                           ;initializer for _lat_registers
    80   0011DC  89                 	db	137
    81   0011DD  0F                 	db	15
    82   0011DE  8A                 	db	138
    83   0011DF  0F                 	db	15
    84   0011E0  8B                 	db	139
    85   0011E1  0F                 	db	15
    86   0011E2  8C                 	db	140
    87   0011E3  0F                 	db	15
    88   0011E4  8D                 	db	141
    89   0011E5  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92   0011E6  92                 	db	146
    93   0011E7  0F                 	db	15
    94   0011E8  93                 	db	147
    95   0011E9  0F                 	db	15
    96   0011EA  94                 	db	148
    97   0011EB  0F                 	db	15
    98   0011EC  95                 	db	149
    99   0011ED  0F                 	db	15
   100   0011EE  96                 	db	150
   101   0011EF  0F                 	db	15
   102                           
   103                           	psect	smallconst
   104   001000                     __psmallconst:
   105                           	callstack 0
   106   001000  00                 	db	0
   107   001001                     _keypad_sampels:
   108                           	callstack 0
   109   001001  37                 	db	55
   110   001002  38                 	db	56
   111   001003  39                 	db	57
   112   001004  2F                 	db	47
   113   001005  34                 	db	52
   114   001006  35                 	db	53
   115   001007  36                 	db	54
   116   001008  2A                 	db	42
   117   001009  31                 	db	49
   118   00100A  32                 	db	50
   119   00100B  33                 	db	51
   120   00100C  2D                 	db	45
   121   00100D  23                 	db	35
   122   00100E  30                 	db	48
   123   00100F  3D                 	db	61
   124   001010  2B                 	db	43
   125   001011                     __end_of_keypad_sampels:
   126                           	callstack 0
   127   000000                     _INTCON2bits	set	4081
   128   000000                     _EECON2	set	4007
   129   000000                     _ADCON1bits	set	4033
   130   000000                     _ADRESL	set	4035
   131   000000                     _ADRESH	set	4036
   132   000000                     _INTCONbits	set	4082
   133   000000                     _TRISD	set	3989
   134   000000                     _TRISC	set	3988
   135   000000                     _TRISB	set	3987
   136   000000                     _TRISE	set	3990
   137   000000                     _PORTBbits	set	3969
   138   000000                     _PIE1bits	set	3997
   139   000000                     _ADCON2bits	set	4032
   140   000000                     _ADCON0bits	set	4034
   141   000000                     _PORTE	set	3972
   142   000000                     _PORTD	set	3971
   143   000000                     _PORTC	set	3970
   144   000000                     _PORTB	set	3969
   145   000000                     _PORTA	set	3968
   146   000000                     _LATA	set	3977
   147   000000                     _TRISA	set	3986
   148   000000                     _EECON1bits	set	4006
   149   000000                     _EEDATA	set	4008
   150   000000                     _EEADR	set	4009
   151   000000                     _EEADRH	set	4010
   152   000000                     _IPR1bits	set	3999
   153   000000                     _PIR1bits	set	3998
   154   000000                     _INTCON3bits	set	4080
   155   000000                     _LATE	set	3981
   156   000000                     _LATD	set	3980
   157   000000                     _LATC	set	3979
   158   000000                     _LATB	set	3978
   159   001011                     STR_1:
   160   001011  25                 	db	37
   161   001012  69                 	db	105	;'i'
   162   001013  00                 	db	0
   163   001014  00                 	db	0	; dummy byte at the end
   164   000000                     
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168   00119C                     __pcinit:
   169                           	callstack 0
   170   00119C                     start_initialization:
   171                           	callstack 0
   172   00119C                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Initialize objects allocated to COMRAM (30 bytes)
   176                           ; load TBLPTR registers with __pidataCOMRAM
   177   00119C  0ED2               	movlw	low __pidataCOMRAM
   178   00119E  6EF6               	movwf	tblptrl,c
   179   0011A0  0E11               	movlw	high __pidataCOMRAM
   180   0011A2  6EF7               	movwf	tblptrh,c
   181   0011A4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   182   0011A6  6EF8               	movwf	tblptru,c
   183   0011A8  EE00  F021         	lfsr	0,__pdataCOMRAM
   184   0011AC  EE10 F01E          	lfsr	1,30
   185   0011B0                     copy_data0:
   186   0011B0  0009               	tblrd		*+
   187   0011B2  CFF5 FFEE          	movff	tablat,postinc0
   188   0011B6  50E5               	movf	postdec1,w,c
   189   0011B8  50E1               	movf	fsr1l,w,c
   190   0011BA  E1FA               	bnz	copy_data0
   191                           
   192                           ; Clear objects allocated to COMRAM (32 bytes)
   193   0011BC  EE00  F001         	lfsr	0,__pbssCOMRAM
   194   0011C0  0E20               	movlw	32
   195   0011C2                     clear_0:
   196   0011C2  6AEE               	clrf	postinc0,c
   197   0011C4  06E8               	decf	wreg,f,c
   198   0011C6  E1FD               	bnz	clear_0
   199   0011C8                     end_of_initialization:
   200                           	callstack 0
   201   0011C8                     __end_of__initialization:
   202                           	callstack 0
   203   0011C8  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204   0011CA  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205   0011CC  0100               	movlb	0
   206   0011CE  EFF8  F008         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMRAM
   209   000001                     __pbssCOMRAM:
   210                           	callstack 0
   211   000001                     _RB7_InterruptHandler:
   212                           	callstack 0
   213   000001                     	ds	2
   214   000003                     _RB6_InterruptHandler:
   215                           	callstack 0
   216   000003                     	ds	2
   217   000005                     _RB5_InterruptHandler:
   218                           	callstack 0
   219   000005                     	ds	2
   220   000007                     _RB4_InterruptHandler:
   221                           	callstack 0
   222   000007                     	ds	2
   223   000009                     _INT2_InterruptHandler:
   224                           	callstack 0
   225   000009                     	ds	2
   226   00000B                     _INT1_InterruptHandler:
   227                           	callstack 0
   228   00000B                     	ds	2
   229   00000D                     _INT0_InterruptHandler:
   230                           	callstack 0
   231   00000D                     	ds	2
   232   00000F                     _ADC_InterruptHandler:
   233                           	callstack 0
   234   00000F                     	ds	2
   235   000011                     ecu_relay_toggle@F3076:
   236                           	callstack 0
   237   000011                     	ds	1
   238   000012                     ecu_relay_turn_off@F3071:
   239                           	callstack 0
   240   000012                     	ds	1
   241   000013                     ecu_relay_turn_on@F3066:
   242                           	callstack 0
   243   000013                     	ds	1
   244   000014                     ecu_relay_initializ@F3061:
   245                           	callstack 0
   246   000014                     	ds	1
   247   000015                     ecu_led_toggle@F3076:
   248                           	callstack 0
   249   000015                     	ds	1
   250   000016                     ecu_led_turn_off@F3071:
   251                           	callstack 0
   252   000016                     	ds	1
   253   000017                     ecu_led_turn_on@F3066:
   254                           	callstack 0
   255   000017                     	ds	1
   256   000018                     ecu_led_initializ@F3061:
   257                           	callstack 0
   258   000018                     	ds	1
   259   000019                     ecu_dc_motor_stop@F3087:
   260                           	callstack 0
   261   000019                     	ds	1
   262   00001A                     ecu_dc_motor_stop@F3085:
   263                           	callstack 0
   264   00001A                     	ds	1
   265   00001B                     ecu_dc_motor_move_left@F3080:
   266                           	callstack 0
   267   00001B                     	ds	1
   268   00001C                     ecu_dc_motor_move_left@F3078:
   269                           	callstack 0
   270   00001C                     	ds	1
   271   00001D                     ecu_dc_motor_move_right@F3073:
   272                           	callstack 0
   273   00001D                     	ds	1
   274   00001E                     ecu_dc_motor_move_right@F3071:
   275                           	callstack 0
   276   00001E                     	ds	1
   277   00001F                     ecu_dc_motor_initializ@F3066:
   278                           	callstack 0
   279   00001F                     	ds	1
   280   000020                     ecu_dc_motor_initializ@F3064:
   281                           	callstack 0
   282   000020                     	ds	1
   283                           
   284                           	psect	dataCOMRAM
   285   000021                     __pdataCOMRAM:
   286                           	callstack 0
   287   000021                     _port_registers:
   288                           	callstack 0
   289   000021                     	ds	10
   290   00002B                     _lat_registers:
   291                           	callstack 0
   292   00002B                     	ds	10
   293   000035                     _tris_registers:
   294                           	callstack 0
   295   000035                     	ds	10
   296                           
   297                           	psect	cstackCOMRAM
   298   000000                     __pcstackCOMRAM:
   299                           	callstack 0
   300   000000                     
   301                           ; 2 bytes @ 0x0
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 5 in file "application.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  2  930[None  ] int 
   314 ;; Registers used:
   315 ;;		cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels required when called: 3
   327 ;; This function calls:
   328 ;;		_application_initializ
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335   0011F0                     __ptext0:
   336                           	callstack 0
   337   0011F0                     _main:
   338                           	callstack 28
   339   0011F0                     
   340                           ;application.c: 7:     application_initializ();
   341   0011F0  EC0E  F009         	call	_application_initializ	;wreg free
   342   0011F4                     l931:
   343   0011F4  EFFA  F008         	goto	l931
   344   0011F8  EF07  F000         	goto	start
   345   0011FC                     __end_of_main:
   346                           	callstack 0
   347                           
   348 ;; *************** function _application_initializ *****************
   349 ;; Defined at:
   350 ;;		line 16 in file "application.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		None
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; Hardware stack levels required when called: 2
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text1
   379   00121C                     __ptext1:
   380                           	callstack 0
   381   00121C                     _application_initializ:
   382                           	callstack 28
   383   00121C  0012               	return		;funcret
   384   00121E                     __end_of_application_initializ:
   385                           	callstack 0
   386                           
   387 ;; *************** function _Interrupt_Manager *****************
   388 ;; Defined at:
   389 ;;		line 52 in file "MCAL_layer/Interrupt/interrupt_manager.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 1
   410 ;; This function calls:
   411 ;;		_ADC_ISR
   412 ;;		_INT0_ISR
   413 ;;		_INT1_ISR
   414 ;;		_INT2_ISR
   415 ;;		_RB4_ISR
   416 ;;		_RB5_ISR
   417 ;;		_RB6_ISR
   418 ;;		_RB7_ISR
   419 ;; This function is called by:
   420 ;;		Interrupt level 2
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	intcode
   425   000008                     __pintcode:
   426                           	callstack 0
   427   000008                     _Interrupt_Manager:
   428                           	callstack 28
   429                           
   430                           ;incstack = 0
   431   000008  823F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   432   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   433                           
   434                           	psect	intcode_body
   435   001016                     __pintcode_body:
   436                           	callstack 28
   437   001016                     int_func:
   438                           	callstack 28
   439   001016  0006               	pop		; remove dummy address from shadow register refresh
   440   001018                     
   441                           ;MCAL_layer/Interrupt/interrupt_manager.c: 55:     if((1 == PIE1bits.ADIE ) && (1 == PIR
      +                          1bits.ADIF))
   442   001018  AC9D               	btfss	157,6,c	;volatile
   443   00101A  EF11  F008         	goto	i2u161_41
   444   00101E  EF13  F008         	goto	i2u161_40
   445   001022                     i2u161_41:
   446   001022  EF1C  F008         	goto	i2l3184
   447   001026                     i2u161_40:
   448   001026  AC9E               	btfss	158,6,c	;volatile
   449   001028  EF18  F008         	goto	i2u162_41
   450   00102C  EF1A  F008         	goto	i2u162_40
   451   001030                     i2u162_41:
   452   001030  EF1C  F008         	goto	i2l3184
   453   001034                     i2u162_40:
   454   001034                     
   455                           ;MCAL_layer/Interrupt/interrupt_manager.c: 56:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 57:         ADC_ISR();
   456   001034  EC0C  F009         	call	_ADC_ISR	;wreg free
   457   001038                     i2l3184:
   458                           
   459                           ;MCAL_layer/Interrupt/interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
   460   001038  A6F2               	btfss	242,3,c	;volatile
   461   00103A  EF21  F008         	goto	i2u163_41
   462   00103E  EF23  F008         	goto	i2u163_40
   463   001042                     i2u163_41:
   464   001042  EF3C  F008         	goto	i2l3196
   465   001046                     i2u163_40:
   466   001046  A0F2               	btfss	242,0,c	;volatile
   467   001048  EF28  F008         	goto	i2u164_41
   468   00104C  EF2A  F008         	goto	i2u164_40
   469   001050                     i2u164_41:
   470   001050  EF3C  F008         	goto	i2l3196
   471   001054                     i2u164_40:
   472   001054                     
   473                           ;MCAL_layer/Interrupt/interrupt_manager.c: 62:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 63:         if(PORTBbits.RB5 == GPIO_HIGH)
   474   001054  AA81               	btfss	129,5,c	;volatile
   475   001056  EF2F  F008         	goto	i2u165_41
   476   00105A  EF31  F008         	goto	i2u165_40
   477   00105E                     i2u165_41:
   478   00105E  EF33  F008         	goto	i2l3192
   479   001062                     i2u165_40:
   480   001062                     
   481                           ;MCAL_layer/Interrupt/interrupt_manager.c: 64:         RB5_ISR();
   482   001062  EC02  F009         	call	_RB5_ISR	;wreg free
   483   001066                     i2l3192:
   484                           
   485                           ;MCAL_layer/Interrupt/interrupt_manager.c: 65:         if(PORTBbits.RB5 == GPIO_LOW)
   486   001066  BA81               	btfsc	129,5,c	;volatile
   487   001068  EF38  F008         	goto	i2u166_41
   488   00106C  EF3A  F008         	goto	i2u166_40
   489   001070                     i2u166_41:
   490   001070  EF3C  F008         	goto	i2l3196
   491   001074                     i2u166_40:
   492   001074                     
   493                           ;MCAL_layer/Interrupt/interrupt_manager.c: 66:         RB5_ISR();
   494   001074  EC02  F009         	call	_RB5_ISR	;wreg free
   495   001078                     i2l3196:
   496                           
   497                           ;MCAL_layer/Interrupt/interrupt_manager.c: 69:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
   498   001078  A6F2               	btfss	242,3,c	;volatile
   499   00107A  EF41  F008         	goto	i2u167_41
   500   00107E  EF43  F008         	goto	i2u167_40
   501   001082                     i2u167_41:
   502   001082  EF5C  F008         	goto	i2l3208
   503   001086                     i2u167_40:
   504   001086  A0F2               	btfss	242,0,c	;volatile
   505   001088  EF48  F008         	goto	i2u168_41
   506   00108C  EF4A  F008         	goto	i2u168_40
   507   001090                     i2u168_41:
   508   001090  EF5C  F008         	goto	i2l3208
   509   001094                     i2u168_40:
   510   001094                     
   511                           ;MCAL_layer/Interrupt/interrupt_manager.c: 70:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 71:         if(PORTBbits.RB4 == GPIO_HIGH)
   512   001094  A881               	btfss	129,4,c	;volatile
   513   001096  EF4F  F008         	goto	i2u169_41
   514   00109A  EF51  F008         	goto	i2u169_40
   515   00109E                     i2u169_41:
   516   00109E  EF53  F008         	goto	i2l3204
   517   0010A2                     i2u169_40:
   518   0010A2                     
   519                           ;MCAL_layer/Interrupt/interrupt_manager.c: 72:         RB4_ISR();
   520   0010A2  EC04  F009         	call	_RB4_ISR	;wreg free
   521   0010A6                     i2l3204:
   522                           
   523                           ;MCAL_layer/Interrupt/interrupt_manager.c: 73:         if(PORTBbits.RB4 == GPIO_LOW)
   524   0010A6  B881               	btfsc	129,4,c	;volatile
   525   0010A8  EF58  F008         	goto	i2u170_41
   526   0010AC  EF5A  F008         	goto	i2u170_40
   527   0010B0                     i2u170_41:
   528   0010B0  EF5C  F008         	goto	i2l3208
   529   0010B4                     i2u170_40:
   530   0010B4                     
   531                           ;MCAL_layer/Interrupt/interrupt_manager.c: 74:         RB4_ISR();
   532   0010B4  EC04  F009         	call	_RB4_ISR	;wreg free
   533   0010B8                     i2l3208:
   534                           
   535                           ;MCAL_layer/Interrupt/interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
   536   0010B8  A6F2               	btfss	242,3,c	;volatile
   537   0010BA  EF61  F008         	goto	i2u171_41
   538   0010BE  EF63  F008         	goto	i2u171_40
   539   0010C2                     i2u171_41:
   540   0010C2  EF7C  F008         	goto	i2l3220
   541   0010C6                     i2u171_40:
   542   0010C6  A0F2               	btfss	242,0,c	;volatile
   543   0010C8  EF68  F008         	goto	i2u172_41
   544   0010CC  EF6A  F008         	goto	i2u172_40
   545   0010D0                     i2u172_41:
   546   0010D0  EF7C  F008         	goto	i2l3220
   547   0010D4                     i2u172_40:
   548   0010D4                     
   549                           ;MCAL_layer/Interrupt/interrupt_manager.c: 79:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 80:         if(PORTBbits.RB6 == GPIO_HIGH)
   550   0010D4  AC81               	btfss	129,6,c	;volatile
   551   0010D6  EF6F  F008         	goto	i2u173_41
   552   0010DA  EF71  F008         	goto	i2u173_40
   553   0010DE                     i2u173_41:
   554   0010DE  EF73  F008         	goto	i2l3216
   555   0010E2                     i2u173_40:
   556   0010E2                     
   557                           ;MCAL_layer/Interrupt/interrupt_manager.c: 81:         RB6_ISR();
   558   0010E2  EC00  F009         	call	_RB6_ISR	;wreg free
   559   0010E6                     i2l3216:
   560                           
   561                           ;MCAL_layer/Interrupt/interrupt_manager.c: 82:         if(PORTBbits.RB6== GPIO_LOW)
   562   0010E6  BC81               	btfsc	129,6,c	;volatile
   563   0010E8  EF78  F008         	goto	i2u174_41
   564   0010EC  EF7A  F008         	goto	i2u174_40
   565   0010F0                     i2u174_41:
   566   0010F0  EF7C  F008         	goto	i2l3220
   567   0010F4                     i2u174_40:
   568   0010F4                     
   569                           ;MCAL_layer/Interrupt/interrupt_manager.c: 83:         RB6_ISR();
   570   0010F4  EC00  F009         	call	_RB6_ISR	;wreg free
   571   0010F8                     i2l3220:
   572                           
   573                           ;MCAL_layer/Interrupt/interrupt_manager.c: 86:     if((1 == INTCONbits.RBIE) && (1 == IN
      +                          TCONbits.RBIF ))
   574   0010F8  A6F2               	btfss	242,3,c	;volatile
   575   0010FA  EF81  F008         	goto	i2u175_41
   576   0010FE  EF83  F008         	goto	i2u175_40
   577   001102                     i2u175_41:
   578   001102  EF9C  F008         	goto	i2l3232
   579   001106                     i2u175_40:
   580   001106  A0F2               	btfss	242,0,c	;volatile
   581   001108  EF88  F008         	goto	i2u176_41
   582   00110C  EF8A  F008         	goto	i2u176_40
   583   001110                     i2u176_41:
   584   001110  EF9C  F008         	goto	i2l3232
   585   001114                     i2u176_40:
   586   001114                     
   587                           ;MCAL_layer/Interrupt/interrupt_manager.c: 87:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 88:         if(PORTBbits.RB7 == GPIO_HIGH)
   588   001114  AE81               	btfss	129,7,c	;volatile
   589   001116  EF8F  F008         	goto	i2u177_41
   590   00111A  EF91  F008         	goto	i2u177_40
   591   00111E                     i2u177_41:
   592   00111E  EF93  F008         	goto	i2l3228
   593   001122                     i2u177_40:
   594   001122                     
   595                           ;MCAL_layer/Interrupt/interrupt_manager.c: 89:         RB7_ISR();
   596   001122  ECFE  F008         	call	_RB7_ISR	;wreg free
   597   001126                     i2l3228:
   598                           
   599                           ;MCAL_layer/Interrupt/interrupt_manager.c: 90:         if(PORTBbits.RB7 == GPIO_LOW)
   600   001126  BE81               	btfsc	129,7,c	;volatile
   601   001128  EF98  F008         	goto	i2u178_41
   602   00112C  EF9A  F008         	goto	i2u178_40
   603   001130                     i2u178_41:
   604   001130  EF9C  F008         	goto	i2l3232
   605   001134                     i2u178_40:
   606   001134                     
   607                           ;MCAL_layer/Interrupt/interrupt_manager.c: 91:         RB7_ISR();
   608   001134  ECFE  F008         	call	_RB7_ISR	;wreg free
   609   001138                     i2l3232:
   610                           
   611                           ;MCAL_layer/Interrupt/interrupt_manager.c: 94:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF ))
   612   001138  A8F2               	btfss	242,4,c	;volatile
   613   00113A  EFA1  F008         	goto	i2u179_41
   614   00113E  EFA3  F008         	goto	i2u179_40
   615   001142                     i2u179_41:
   616   001142  EFAC  F008         	goto	i2l3238
   617   001146                     i2u179_40:
   618   001146  A2F2               	btfss	242,1,c	;volatile
   619   001148  EFA8  F008         	goto	i2u180_41
   620   00114C  EFAA  F008         	goto	i2u180_40
   621   001150                     i2u180_41:
   622   001150  EFAC  F008         	goto	i2l3238
   623   001154                     i2u180_40:
   624   001154                     
   625                           ;MCAL_layer/Interrupt/interrupt_manager.c: 95:     {;MCAL_layer/Interrupt/interrupt_mana
      +                          ger.c: 96:         INT0_ISR();
   626   001154  EC0A  F009         	call	_INT0_ISR	;wreg free
   627   001158                     i2l3238:
   628                           
   629                           ;MCAL_layer/Interrupt/interrupt_manager.c: 99:     if((1 == INTCON3bits.INT1IE) && (1 ==
      +                           INTCON3bits.INT1IF ))
   630   001158  A6F0               	btfss	240,3,c	;volatile
   631   00115A  EFB1  F008         	goto	i2u181_41
   632   00115E  EFB3  F008         	goto	i2u181_40
   633   001162                     i2u181_41:
   634   001162  EFBC  F008         	goto	i2l3244
   635   001166                     i2u181_40:
   636   001166  A0F0               	btfss	240,0,c	;volatile
   637   001168  EFB8  F008         	goto	i2u182_41
   638   00116C  EFBA  F008         	goto	i2u182_40
   639   001170                     i2u182_41:
   640   001170  EFBC  F008         	goto	i2l3244
   641   001174                     i2u182_40:
   642   001174                     
   643                           ;MCAL_layer/Interrupt/interrupt_manager.c: 100:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 101:         INT1_ISR();
   644   001174  EC08  F009         	call	_INT1_ISR	;wreg free
   645   001178                     i2l3244:
   646                           
   647                           ;MCAL_layer/Interrupt/interrupt_manager.c: 104:     if((1 == INTCON3bits.INT2IE) && (1 =
      +                          = INTCON3bits.INT2IF ))
   648   001178  A8F0               	btfss	240,4,c	;volatile
   649   00117A  EFC1  F008         	goto	i2u183_41
   650   00117E  EFC3  F008         	goto	i2u183_40
   651   001182                     i2u183_41:
   652   001182  EFCC  F008         	goto	i2l924
   653   001186                     i2u183_40:
   654   001186  A2F0               	btfss	240,1,c	;volatile
   655   001188  EFC8  F008         	goto	i2u184_41
   656   00118C  EFCA  F008         	goto	i2u184_40
   657   001190                     i2u184_41:
   658   001190  EFCC  F008         	goto	i2l924
   659   001194                     i2u184_40:
   660   001194                     
   661                           ;MCAL_layer/Interrupt/interrupt_manager.c: 105:     {;MCAL_layer/Interrupt/interrupt_man
      +                          ager.c: 106:         INT2_ISR();
   662   001194  EC06  F009         	call	_INT2_ISR	;wreg free
   663   001198                     i2l924:
   664   001198  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   665   00119A  0011               	retfie		f
   666   00119C                     __end_of_Interrupt_Manager:
   667                           	callstack 0
   668                           
   669 ;; *************** function _RB7_ISR *****************
   670 ;; Defined at:
   671 ;;		line 764 in file "MCAL_layer/Interrupt/external_interrupt.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		None
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_Interrupt_Manager
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text3
   699   0011FC                     __ptext3:
   700                           	callstack 0
   701   0011FC                     _RB7_ISR:
   702                           	callstack 28
   703   0011FC                     
   704                           ;MCAL_layer/Interrupt/external_interrupt.c: 767:     (INTCONbits.RBIF = 0);
   705   0011FC  90F2               	bcf	242,0,c	;volatile
   706   0011FE  0012               	return		;funcret
   707   001200                     __end_of_RB7_ISR:
   708                           	callstack 0
   709                           
   710 ;; *************** function _RB6_ISR *****************
   711 ;; Defined at:
   712 ;;		line 749 in file "MCAL_layer/Interrupt/external_interrupt.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		None
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_Interrupt_Manager
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text4
   740   001200                     __ptext4:
   741                           	callstack 0
   742   001200                     _RB6_ISR:
   743                           	callstack 28
   744   001200                     
   745                           ;MCAL_layer/Interrupt/external_interrupt.c: 752:     (INTCONbits.RBIF = 0);
   746   001200  90F2               	bcf	242,0,c	;volatile
   747   001202  0012               	return		;funcret
   748   001204                     __end_of_RB6_ISR:
   749                           	callstack 0
   750                           
   751 ;; *************** function _RB5_ISR *****************
   752 ;; Defined at:
   753 ;;		line 734 in file "MCAL_layer/Interrupt/external_interrupt.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		None
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_Interrupt_Manager
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text5
   781   001204                     __ptext5:
   782                           	callstack 0
   783   001204                     _RB5_ISR:
   784                           	callstack 28
   785   001204                     
   786                           ;MCAL_layer/Interrupt/external_interrupt.c: 737:     (INTCONbits.RBIF = 0);
   787   001204  90F2               	bcf	242,0,c	;volatile
   788   001206  0012               	return		;funcret
   789   001208                     __end_of_RB5_ISR:
   790                           	callstack 0
   791                           
   792 ;; *************** function _RB4_ISR *****************
   793 ;; Defined at:
   794 ;;		line 720 in file "MCAL_layer/Interrupt/external_interrupt.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		None
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_Interrupt_Manager
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text6
   822   001208                     __ptext6:
   823                           	callstack 0
   824   001208                     _RB4_ISR:
   825                           	callstack 28
   826   001208                     
   827                           ;MCAL_layer/Interrupt/external_interrupt.c: 723:     (INTCONbits.RBIF = 0);
   828   001208  90F2               	bcf	242,0,c	;volatile
   829   00120A  0012               	return		;funcret
   830   00120C                     __end_of_RB4_ISR:
   831                           	callstack 0
   832                           
   833 ;; *************** function _INT2_ISR *****************
   834 ;; Defined at:
   835 ;;		line 706 in file "MCAL_layer/Interrupt/external_interrupt.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		None
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_Interrupt_Manager
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text7
   863   00120C                     __ptext7:
   864                           	callstack 0
   865   00120C                     _INT2_ISR:
   866                           	callstack 28
   867   00120C                     
   868                           ;MCAL_layer/Interrupt/external_interrupt.c: 709:     (INTCON3bits.INT2IF = 0);
   869   00120C  92F0               	bcf	240,1,c	;volatile
   870   00120E  0012               	return		;funcret
   871   001210                     __end_of_INT2_ISR:
   872                           	callstack 0
   873                           
   874 ;; *************** function _INT1_ISR *****************
   875 ;; Defined at:
   876 ;;		line 692 in file "MCAL_layer/Interrupt/external_interrupt.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		None
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_Interrupt_Manager
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text8
   904   001210                     __ptext8:
   905                           	callstack 0
   906   001210                     _INT1_ISR:
   907                           	callstack 28
   908   001210                     
   909                           ;MCAL_layer/Interrupt/external_interrupt.c: 695:     (INTCON3bits.INT1IF = 0);
   910   001210  90F0               	bcf	240,0,c	;volatile
   911   001212  0012               	return		;funcret
   912   001214                     __end_of_INT1_ISR:
   913                           	callstack 0
   914                           
   915 ;; *************** function _INT0_ISR *****************
   916 ;; Defined at:
   917 ;;		line 678 in file "MCAL_layer/Interrupt/external_interrupt.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		None
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels used: 1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_Interrupt_Manager
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text9
   945   001214                     __ptext9:
   946                           	callstack 0
   947   001214                     _INT0_ISR:
   948                           	callstack 28
   949   001214                     
   950                           ;MCAL_layer/Interrupt/external_interrupt.c: 681:     (INTCONbits.INT0IF = 0);
   951   001214  92F2               	bcf	242,1,c	;volatile
   952   001216  0012               	return		;funcret
   953   001218                     __end_of_INT0_ISR:
   954                           	callstack 0
   955                           
   956 ;; *************** function _ADC_ISR *****************
   957 ;; Defined at:
   958 ;;		line 319 in file "MCAL_layer/ADC/adc.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		None
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_Interrupt_Manager
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text10
   986   001218                     __ptext10:
   987                           	callstack 0
   988   001218                     _ADC_ISR:
   989                           	callstack 28
   990   001218                     
   991                           ;MCAL_layer/ADC/adc.c: 321:     (PIR1bits.ADIF = 0);
   992   001218  9C9E               	bcf	158,6,c	;volatile
   993   00121A  0012               	return		;funcret
   994   00121C                     __end_of_ADC_ISR:
   995                           	callstack 0
   996                           
   997                           	psect	rparam
   998   000000                     
   999                           	psect	temp
  1000   00003F                     btemp:
  1001                           	callstack 0
  1002   00003F                     	ds	1
  1003   000000                     int$flags	set	btemp
  1004   000000                     wtemp8	set	btemp+1
  1005   000000                     ttemp5	set	btemp+1
  1006   000000                     ttemp6	set	btemp+4
  1007   000000                     ttemp7	set	btemp+8
  1008                           
  1009                           	psect	config
  1010                           
  1011                           ; Padding undefined space
  1012   300000                     	org	3145728
  1013   300000  FF                 	db	255
  1014                           
  1015                           ;Config register CONFIG1H @ 0x300001
  1016                           ;	Oscillator Selection bits
  1017                           ;	OSC = HS, HS oscillator
  1018                           ;	Fail-Safe Clock Monitor Enable bit
  1019                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1020                           ;	Internal/External Oscillator Switchover bit
  1021                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1022   300001                     	org	3145729
  1023   300001  02                 	db	2
  1024                           
  1025                           ;Config register CONFIG2L @ 0x300002
  1026                           ;	Power-up Timer Enable bit
  1027                           ;	PWRT = OFF, PWRT disabled
  1028                           ;	Brown-out Reset Enable bits
  1029                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1030                           ;	Brown Out Reset Voltage bits
  1031                           ;	BORV = 3, Minimum setting
  1032   300002                     	org	3145730
  1033   300002  1F                 	db	31
  1034                           
  1035                           ;Config register CONFIG2H @ 0x300003
  1036                           ;	Watchdog Timer Enable bit
  1037                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1038                           ;	Watchdog Timer Postscale Select bits
  1039                           ;	WDTPS = 32768, 1:32768
  1040   300003                     	org	3145731
  1041   300003  1E                 	db	30
  1042                           
  1043                           ; Padding undefined space
  1044   300004                     	org	3145732
  1045   300004  FF                 	db	255
  1046                           
  1047                           ;Config register CONFIG3H @ 0x300005
  1048                           ;	CCP2 MUX bit
  1049                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1050                           ;	PORTB A/D Enable bit
  1051                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1052                           ;	Low-Power Timer1 Oscillator Enable bit
  1053                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1054                           ;	MCLR Pin Enable bit
  1055                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1056   300005                     	org	3145733
  1057   300005  81                 	db	129
  1058                           
  1059                           ;Config register CONFIG4L @ 0x300006
  1060                           ;	Stack Full/Underflow Reset Enable bit
  1061                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1062                           ;	Single-Supply ICSP Enable bit
  1063                           ;	LVP = OFF, Single-Supply ICSP disabled
  1064                           ;	Extended Instruction Set Enable bit
  1065                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1066                           ;	Background Debugger Enable bit
  1067                           ;	DEBUG = 0x1, unprogrammed default
  1068   300006                     	org	3145734
  1069   300006  81                 	db	129
  1070                           
  1071                           ; Padding undefined space
  1072   300007                     	org	3145735
  1073   300007  FF                 	db	255
  1074                           
  1075                           ;Config register CONFIG5L @ 0x300008
  1076                           ;	Code Protection bit
  1077                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1078                           ;	Code Protection bit
  1079                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1080                           ;	Code Protection bit
  1081                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1082                           ;	Code Protection bit
  1083                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1084   300008                     	org	3145736
  1085   300008  0F                 	db	15
  1086                           
  1087                           ;Config register CONFIG5H @ 0x300009
  1088                           ;	Boot Block Code Protection bit
  1089                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1090                           ;	Data EEPROM Code Protection bit
  1091                           ;	CPD = OFF, Data EEPROM not code-protected
  1092   300009                     	org	3145737
  1093   300009  C0                 	db	192
  1094                           
  1095                           ;Config register CONFIG6L @ 0x30000A
  1096                           ;	Write Protection bit
  1097                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1098                           ;	Write Protection bit
  1099                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1100                           ;	Write Protection bit
  1101                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1102                           ;	Write Protection bit
  1103                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1104   30000A                     	org	3145738
  1105   30000A  0F                 	db	15
  1106                           
  1107                           ;Config register CONFIG6H @ 0x30000B
  1108                           ;	Configuration Register Write Protection bit
  1109                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1110                           ;	Boot Block Write Protection bit
  1111                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1112                           ;	Data EEPROM Write Protection bit
  1113                           ;	WRTD = OFF, Data EEPROM not write-protected
  1114   30000B                     	org	3145739
  1115   30000B  E0                 	db	224
  1116                           
  1117                           ;Config register CONFIG7L @ 0x30000C
  1118                           ;	Table Read Protection bit
  1119                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1120                           ;	Table Read Protection bit
  1121                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1122                           ;	Table Read Protection bit
  1123                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1124                           ;	Table Read Protection bit
  1125                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1126   30000C                     	org	3145740
  1127   30000C  0F                 	db	15
  1128                           
  1129                           ;Config register CONFIG7H @ 0x30000D
  1130                           ;	Boot Block Table Read Protection bit
  1131                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1132   30000D                     	org	3145741
  1133   30000D  40                 	db	64
  1134                           tosu	equ	0xFFF
  1135                           tosh	equ	0xFFE
  1136                           tosl	equ	0xFFD
  1137                           stkptr	equ	0xFFC
  1138                           pclatu	equ	0xFFB
  1139                           pclath	equ	0xFFA
  1140                           pcl	equ	0xFF9
  1141                           tblptru	equ	0xFF8
  1142                           tblptrh	equ	0xFF7
  1143                           tblptrl	equ	0xFF6
  1144                           tablat	equ	0xFF5
  1145                           prodh	equ	0xFF4
  1146                           prodl	equ	0xFF3
  1147                           indf0	equ	0xFEF
  1148                           postinc0	equ	0xFEE
  1149                           postdec0	equ	0xFED
  1150                           preinc0	equ	0xFEC
  1151                           plusw0	equ	0xFEB
  1152                           fsr0h	equ	0xFEA
  1153                           fsr0l	equ	0xFE9
  1154                           wreg	equ	0xFE8
  1155                           indf1	equ	0xFE7
  1156                           postinc1	equ	0xFE6
  1157                           postdec1	equ	0xFE5
  1158                           preinc1	equ	0xFE4
  1159                           plusw1	equ	0xFE3
  1160                           fsr1h	equ	0xFE2
  1161                           fsr1l	equ	0xFE1
  1162                           bsr	equ	0xFE0
  1163                           indf2	equ	0xFDF
  1164                           postinc2	equ	0xFDE
  1165                           postdec2	equ	0xFDD
  1166                           preinc2	equ	0xFDC
  1167                           plusw2	equ	0xFDB
  1168                           fsr2h	equ	0xFDA
  1169                           fsr2l	equ	0xFD9
  1170                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        30
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Result_Format_Configuration@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_Voltage_Reference_Configuration@adc_config$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_init@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@_interrupt_RBx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    INTx_Set_Interrupt_Handler@_interrupt_INTx$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1422$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S1464$EXTERNAL_INTERRUPT_CALLBACK	PTR FTN()void  size(2) Largest target is 0

    S2429$buffer	PTR unsigned char  size(2) Largest target is 0

    S2429$source	PTR const unsigned char  size(2) Largest target is 0

    S784$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_Manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
              _application_initializ
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Manager                                    0     0      0       0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (3) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ

 _Interrupt_Manager (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0      3E       1       49.2%
BITBIGSFRhlhl       2B      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllhll       6      0       0      40        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      12        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 16 02:56:16 2024

          ??_Interrupt_Manager 0000                            l931 11F4                            l932 11F4  
                          l937 121C                __end_of_ADC_ISR 121C                            wreg 0FE8  
              __end_of_RB4_ISR 120C                __end_of_RB5_ISR 1208                __end_of_RB6_ISR 1204  
              __end_of_RB7_ISR 1200                           l3250 11F0        ??_application_initializ 0000  
                         STR_1 1011                           _LATA 0F89                           _LATB 0F8A  
                         _LATC 0F8B                           _LATD 0F8C                           _LATE 0F8D  
    __end_of_Interrupt_Manager 119C                           _main 11F0                           fsr1l 0FE1  
                         btemp 003F                           start 000E           _RB7_InterruptHandler 0001  
                 ___param_bank 0000               __end_of_INT0_ISR 1218               __end_of_INT1_ISR 1214  
             __end_of_INT2_ISR 1210                          ?_main 0000                          _EEADR 0FA9  
                        i2l501 121A                          i2l924 1198                          i2l853 1216  
                        i2l861 120E                          i2l857 1212                          i2l865 120A  
                        i2l873 1202                          i2l869 1206                          i2l877 11FE  
  ecu_dc_motor_initializ@F3064 0020    ecu_dc_motor_initializ@F3066 001F                          _PORTA 0F80  
                        _PORTB 0F81                          _PORTC 0F82                          _PORTD 0F83  
                        _PORTE 0F84                          _TRISA 0F92                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _TRISE 0F96  
                        tablat 0FF5                          ttemp5 0040                          ttemp6 0043  
                        ttemp7 0047                          wtemp8 0040                __initialization 119C  
                 __end_of_main 11FC            ecu_led_toggle@F3076 0015                      ??_ADC_ISR 0000  
                _lat_registers 002B                         ??_main 0000                  __activetblptr 0003  
                    ??_RB4_ISR 0000                      ??_RB5_ISR 0000                      ??_RB6_ISR 0000  
                    ??_RB7_ISR 0000                         _ADRESH 0FC4                         _EEADRH 0FAA  
                       _ADRESL 0FC3                         _EEDATA 0FA8                         _EECON2 0FA7  
                       i2l3200 1094                         i2l3210 10C6                         i2l3202 10A2  
                       i2l3212 10D4                         i2l3220 10F8                         i2l3204 10A6  
                       i2l3230 1134                         i2l3222 1106                         i2l3214 10E2  
                       i2l3206 10B4                         i2l3240 1166                         i2l3224 1114  
                       i2l3232 1138                         i2l3216 10E6                         i2l3208 10B8  
                       i2l3242 1174                         i2l3234 1146                         i2l3226 1122  
                       i2l3218 10F4                         i2l3244 1178                         i2l3236 1154  
                       i2l3228 1126                         i2l3180 1026                         i2l3246 1186  
                       i2l3238 1158                         i2l3190 1062                         i2l3182 1034  
                       i2l1912 1214                         i2l1920 120C                         i2l3248 1194  
                       i2l3192 1066                         i2l3184 1038                         i2l3194 1074  
                       i2l3186 1046                         i2l3178 1018                         i2l1916 1210  
                       i2l1924 1208                         i2l1932 1200                         i2l3188 1054  
                       i2l3196 1078                         i2l3198 1086                         i2l1872 1218  
                       i2l1928 1204                         i2l1936 11FC                         clear_0 11C2  
                       isa$std 0001                   __pdataCOMRAM 0021                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
                   __accesstop 0080        __end_of__initialization 11C8                      ?_INT0_ISR 0000  
                    ?_INT1_ISR 0000                      ?_INT2_ISR 0000                  ___rparam_used 0001  
               __pcstackCOMRAM 0000   ecu_dc_motor_move_right@F3071 001E   ecu_dc_motor_move_right@F3073 001D  
__end_of_application_initializ 121E          _INT0_InterruptHandler 000D                     ??_INT0_ISR 0000  
                   ??_INT1_ISR 0000                     ??_INT2_ISR 0000                        _ADC_ISR 1218  
                      _RB4_ISR 1208                        _RB5_ISR 1204                        _RB6_ISR 1200  
                      _RB7_ISR 11FC                 _tris_registers 0035           _ADC_InterruptHandler 000F  
                      __Hparam 0000                        __Lparam 0000                   __psmallconst 1000  
                      __pcinit 119C                        __ramtop 1000                        __ptext0 11F0  
                      __ptext1 121C                        __ptext3 11FC                        __ptext4 1200  
                      __ptext5 1204                        __ptext6 1208                        __ptext7 120C  
                      __ptext8 1210                        __ptext9 1214                 __pintcode_body 1016  
         end_of_initialization 11C8                        int_func 1016                        postdec1 0FE5  
                      postinc0 0FEE          _INT1_InterruptHandler 000B                      _PORTBbits 0F81  
        ecu_led_turn_off@F3071 0016                  __pidataCOMRAM 11D2       ecu_relay_initializ@F3061 0014  
          start_initialization 119C    ecu_dc_motor_move_left@F3080 001B    ecu_dc_motor_move_left@F3078 001C  
         _RB4_InterruptHandler 0007                       ?_ADC_ISR 0000                       ?_RB4_ISR 0000  
                     ?_RB5_ISR 0000                       ?_RB6_ISR 0000                       ?_RB7_ISR 0000  
                  __pbssCOMRAM 0001          _INT2_InterruptHandler 0009          _application_initializ 121C  
                    __pintcode 0008                    __smallconst 1000                       _INT0_ISR 1214  
                     _INT1_ISR 1210                       _INT2_ISR 120C                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                 _keypad_sampels 1001          ecu_relay_toggle@F3076 0011  
                     i2u161_40 1026                       i2u161_41 1022                       i2u170_40 10B4  
                     i2u162_40 1034                       i2u170_41 10B0                       i2u162_41 1030  
                     i2u171_40 10C6                       i2u163_40 1046                       i2u171_41 10C2  
                     i2u163_41 1042                       i2u180_40 1154                       i2u172_40 10D4  
                     i2u164_40 1054                       i2u180_41 1150                       i2u172_41 10D0  
                     i2u164_41 1050                       i2u181_40 1166                       i2u173_40 10E2  
                     i2u165_40 1062                       i2u181_41 1162                       i2u173_41 10DE  
                     i2u165_41 105E                       i2u182_40 1174                       i2u174_40 10F4  
                     i2u166_40 1074                       i2u182_41 1170                       i2u174_41 10F0  
                     i2u166_41 1070                       i2u183_40 1186                       i2u175_40 1106  
                     i2u167_40 1086                       i2u183_41 1182                       i2u175_41 1102  
                     i2u167_41 1082                       i2u184_40 1194                       i2u176_40 1114  
                     i2u168_40 1094                       i2u184_41 1190                       i2u176_41 1110  
                     i2u168_41 1090                       i2u177_40 1122                       i2u169_40 10A2  
                     i2u177_41 111E                       i2u169_41 109E                       _PIR1bits 0F9E  
                     i2u178_40 1134                       i2u178_41 1130                       i2u179_40 1146  
                     i2u179_41 1142           _RB5_InterruptHandler 0005                     _ADCON0bits 0FC2  
                   _ADCON1bits 0FC1                     _ADCON2bits 0FC0           ecu_led_turn_on@F3066 0017  
                  _INTCON2bits 0FF1                    _INTCON3bits 0FF0                      copy_data0 11B0  
       __end_of_keypad_sampels 1011         ?_application_initializ 0000                     _EECON1bits 0FA6  
                     __Hrparam 0000                       __Lrparam 0000                       __ptext10 1218  
       ecu_dc_motor_stop@F3085 001A         ecu_dc_motor_stop@F3087 0019        ecu_relay_turn_off@F3071 0012  
                     isa$xinst 0000                       int$flags 003F         ecu_led_initializ@F3061 0018  
                   _INTCONbits 0FF2           _RB6_InterruptHandler 0003                       intlevel2 0000  
       ecu_relay_turn_on@F3066 0013                 _port_registers 0021              _Interrupt_Manager 0008  
           ?_Interrupt_Manager 0000  
