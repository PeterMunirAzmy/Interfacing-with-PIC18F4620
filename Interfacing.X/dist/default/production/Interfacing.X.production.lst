

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 25 07:21:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 17/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   00193E                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _port_registers
    71   00193E  80                 	db	128
    72   00193F  0F                 	db	15
    73   001940  81                 	db	129
    74   001941  0F                 	db	15
    75   001942  82                 	db	130
    76   001943  0F                 	db	15
    77   001944  83                 	db	131
    78   001945  0F                 	db	15
    79   001946  84                 	db	132
    80   001947  0F                 	db	15
    81                           
    82                           ;initializer for _lat_registers
    83   001948  89                 	db	137
    84   001949  0F                 	db	15
    85   00194A  8A                 	db	138
    86   00194B  0F                 	db	15
    87   00194C  8B                 	db	139
    88   00194D  0F                 	db	15
    89   00194E  8C                 	db	140
    90   00194F  0F                 	db	15
    91   001950  8D                 	db	141
    92   001951  0F                 	db	15
    93                           
    94                           ;initializer for _tris_registers
    95   001952  92                 	db	146
    96   001953  0F                 	db	15
    97   001954  93                 	db	147
    98   001955  0F                 	db	15
    99   001956  94                 	db	148
   100   001957  0F                 	db	15
   101   001958  95                 	db	149
   102   001959  0F                 	db	15
   103   00195A  96                 	db	150
   104   00195B  0F                 	db	15
   105                           
   106                           ;initializer for _keypad
   107   00195C  03                 	db	3
   108   00195D  0B                 	db	11
   109   00195E  13                 	db	19
   110   00195F  1B                 	db	27
   111   001960  63                 	db	99
   112   001961  6B                 	db	107
   113   001962  73                 	db	115
   114   001963  7B                 	db	123
   115                           
   116                           ;initializer for _lcd2
   117   001964  1A                 	db	26
   118   001965  12                 	db	18
   119   001966  22                 	db	34
   120   001967  2A                 	db	42
   121   001968  32                 	db	50
   122   001969  3A                 	db	58
   123                           
   124                           	psect	smallconst
   125   001000                     __psmallconst:
   126                           	callstack 0
   127   001000  00                 	db	0
   128   001001                     _keypad_sampels:
   129                           	callstack 0
   130   001001  37                 	db	55
   131   001002  38                 	db	56
   132   001003  39                 	db	57
   133   001004  2F                 	db	47
   134   001005  34                 	db	52
   135   001006  35                 	db	53
   136   001007  36                 	db	54
   137   001008  2A                 	db	42
   138   001009  31                 	db	49
   139   00100A  32                 	db	50
   140   00100B  33                 	db	51
   141   00100C  2D                 	db	45
   142   00100D  23                 	db	35
   143   00100E  30                 	db	48
   144   00100F  3D                 	db	61
   145   001010  2B                 	db	43
   146   001011                     __end_of_keypad_sampels:
   147                           	callstack 0
   148   001011                     STR_4:
   149   001011  52                 	db	82	;'R'
   150   001012  65                 	db	101	;'e'
   151   001013  61                 	db	97	;'a'
   152   001014  64                 	db	100	;'d'
   153   001015  69                 	db	105	;'i'
   154   001016  6E                 	db	110	;'n'
   155   001017  67                 	db	103	;'g'
   156   001018  00                 	db	0
   157   001019                     STR_1:
   158   001019  25                 	db	37
   159   00101A  69                 	db	105	;'i'
   160   00101B  00                 	db	0
   161   00101C  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           	psect	nvCOMRAM
   164   00005A                     __pnvCOMRAM:
   165                           	callstack 0
   166   00005A                     _ret:
   167                           	callstack 0
   168   00005A                     	ds	1
   169   000000                     _PORTE	set	3972
   170   000000                     _PORTD	set	3971
   171   000000                     _PORTC	set	3970
   172   000000                     _PORTB	set	3969
   173   000000                     _PORTA	set	3968
   174   000000                     _LATA	set	3977
   175   000000                     _TRISA	set	3986
   176   000000                     _TRISE	set	3990
   177   000000                     _TRISD	set	3989
   178   000000                     _TRISC	set	3988
   179   000000                     _TRISB	set	3987
   180   000000                     _LATE	set	3981
   181   000000                     _LATD	set	3980
   182   000000                     _LATC	set	3979
   183   000000                     _LATB	set	3978
   184                           
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188   001908                     __pcinit:
   189                           	callstack 0
   190   001908                     start_initialization:
   191                           	callstack 0
   192   001908                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Initialize objects allocated to COMRAM (44 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   001908  0E3E               	movlw	low __pidataCOMRAM
   198   00190A  6EF6               	movwf	tblptrl,c
   199   00190C  0E19               	movlw	high __pidataCOMRAM
   200   00190E  6EF7               	movwf	tblptrh,c
   201   001910  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   001912  6EF8               	movwf	tblptru,c
   203   001914  EE00  F001         	lfsr	0,__pdataCOMRAM
   204   001918  EE10 F02C          	lfsr	1,44
   205   00191C                     copy_data0:
   206   00191C  0009               	tblrd		*+
   207   00191E  CFF5 FFEE          	movff	tablat,postinc0
   208   001922  50E5               	movf	postdec1,w,c
   209   001924  50E1               	movf	fsr1l,w,c
   210   001926  E1FA               	bnz	copy_data0
   211                           
   212                           ; Clear objects allocated to COMRAM (17 bytes)
   213   001928  EE00  F049         	lfsr	0,__pbssCOMRAM
   214   00192C  0E11               	movlw	17
   215   00192E                     clear_0:
   216   00192E  6AEE               	clrf	postinc0,c
   217   001930  06E8               	decf	wreg,f,c
   218   001932  E1FD               	bnz	clear_0
   219   001934                     end_of_initialization:
   220                           	callstack 0
   221   001934                     __end_of__initialization:
   222                           	callstack 0
   223   001934  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224   001936  6EF8               	movwf	tblptru,c
   225   001938  0100               	movlb	0
   226   00193A  EF62  F00B         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   000049                     __pbssCOMRAM:
   230                           	callstack 0
   231   000049                     ecu_relay_toggle@F3076:
   232                           	callstack 0
   233   000049                     	ds	1
   234   00004A                     ecu_relay_turn_off@F3071:
   235                           	callstack 0
   236   00004A                     	ds	1
   237   00004B                     ecu_relay_turn_on@F3066:
   238                           	callstack 0
   239   00004B                     	ds	1
   240   00004C                     ecu_relay_initializ@F3061:
   241                           	callstack 0
   242   00004C                     	ds	1
   243   00004D                     ecu_led_toggle@F3076:
   244                           	callstack 0
   245   00004D                     	ds	1
   246   00004E                     ecu_led_turn_off@F3071:
   247                           	callstack 0
   248   00004E                     	ds	1
   249   00004F                     ecu_led_turn_on@F3066:
   250                           	callstack 0
   251   00004F                     	ds	1
   252   000050                     ecu_led_initializ@F3061:
   253                           	callstack 0
   254   000050                     	ds	1
   255   000051                     ecu_dc_motor_stop@F3087:
   256                           	callstack 0
   257   000051                     	ds	1
   258   000052                     ecu_dc_motor_stop@F3085:
   259                           	callstack 0
   260   000052                     	ds	1
   261   000053                     ecu_dc_motor_move_left@F3080:
   262                           	callstack 0
   263   000053                     	ds	1
   264   000054                     ecu_dc_motor_move_left@F3078:
   265                           	callstack 0
   266   000054                     	ds	1
   267   000055                     ecu_dc_motor_move_right@F3073:
   268                           	callstack 0
   269   000055                     	ds	1
   270   000056                     ecu_dc_motor_move_right@F3071:
   271                           	callstack 0
   272   000056                     	ds	1
   273   000057                     ecu_dc_motor_initializ@F3066:
   274                           	callstack 0
   275   000057                     	ds	1
   276   000058                     ecu_dc_motor_initializ@F3064:
   277                           	callstack 0
   278   000058                     	ds	1
   279   000059                     _value:
   280                           	callstack 0
   281   000059                     	ds	1
   282                           
   283                           	psect	dataCOMRAM
   284   000001                     __pdataCOMRAM:
   285                           	callstack 0
   286   000001                     _port_registers:
   287                           	callstack 0
   288   000001                     	ds	10
   289   00000B                     _lat_registers:
   290                           	callstack 0
   291   00000B                     	ds	10
   292   000015                     _tris_registers:
   293                           	callstack 0
   294   000015                     	ds	10
   295   00001F                     _keypad:
   296                           	callstack 0
   297   00001F                     	ds	8
   298   000027                     _lcd2:
   299                           	callstack 0
   300   000027                     	ds	6
   301                           
   302                           	psect	cstackCOMRAM
   303   00002D                     __pcstackCOMRAM:
   304                           	callstack 0
   305   00002D                     gpio_pin_direction_init@_pin_config:
   306                           	callstack 0
   307   00002D                     gpio_pin_write_logic@_pin_config:
   308                           	callstack 0
   309   00002D                     gpio_pin_read_logic@_pin_config:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x0
   313   00002D                     	ds	1
   314   00002E                     ??_gpio_pin_direction_init:
   315   00002E                     gpio_pin_write_logic@logic:
   316                           	callstack 0
   317   00002E                     gpio_pin_read_logic@logic:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321   00002E                     	ds	1
   322   00002F                     ??_gpio_pin_write_logic:
   323   00002F                     ??_gpio_pin_read_logic:
   324                           
   325                           ; 1 bytes @ 0x2
   326   00002F                     	ds	4
   327   000033                     gpio_pin_direction_init@ret:
   328                           	callstack 0
   329   000033                     gpio_pin_read_logic@ret:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x6
   333   000033                     	ds	1
   334   000034                     gpio_pin_write_logic@ret:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x7
   338   000034                     	ds	1
   339   000035                     keypad_get_value@_keypad_config:
   340                           	callstack 0
   341   000035                     lcd_send_4bits@lcd:
   342                           	callstack 0
   343   000035                     lcd_send_4bit_enable_signal@lcd:
   344                           	callstack 0
   345   000035                     gpio_pin_Initialization@_pin_config:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x8
   349   000035                     	ds	1
   350   000036                     ??_gpio_pin_Initialization:
   351   000036                     ??_lcd_send_4bit_enable_signal:
   352   000036                     keypad_get_value@value:
   353                           	callstack 0
   354   000036                     lcd_send_4bits@data_command:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x9
   358   000036                     	ds	1
   359   000037                     ??_lcd_send_4bits:
   360   000037                     ??_keypad_get_value:
   361   000037                     lcd_send_4bit_enable_signal@ret:
   362                           	callstack 0
   363   000037                     gpio_pin_Initialization@ret:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xA
   367   000037                     	ds	1
   368   000038                     keypad_initialize@_keypad_config:
   369                           	callstack 0
   370   000038                     keypad_get_value@ret:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xB
   374   000038                     	ds	1
   375   000039                     keypad_initialize@ret:
   376                           	callstack 0
   377   000039                     keypad_get_value@colum_logic:
   378                           	callstack 0
   379   000039                     lcd_send_4bits@ret:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0xC
   383   000039                     	ds	1
   384   00003A                     keypad_initialize@i:
   385                           	callstack 0
   386   00003A                     keypad_get_value@j:
   387                           	callstack 0
   388   00003A                     lcd_send_4bits@i:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xD
   392   00003A                     	ds	2
   393   00003C                     lcd_4bit_send_command@lcd:
   394                           	callstack 0
   395   00003C                     lcd_4bit_send_data@lcd:
   396                           	callstack 0
   397   00003C                     keypad_initialize@j:
   398                           	callstack 0
   399   00003C                     keypad_get_value@i:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xF
   403   00003C                     	ds	1
   404   00003D                     lcd_4bit_send_command@command:
   405                           	callstack 0
   406   00003D                     lcd_4bit_send_data@data:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x10
   410   00003D                     	ds	1
   411   00003E                     lcd_4bit_send_command@ret:
   412                           	callstack 0
   413   00003E                     lcd_4bit_send_data@ret:
   414                           	callstack 0
   415   00003E                     keypad_get_value@k:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x11
   419   00003E                     	ds	1
   420   00003F                     lcd_4bit_init@lcd:
   421                           	callstack 0
   422   00003F                     lcd_4bit_set_cursor@lcd:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x12
   426   00003F                     	ds	1
   427   000040                     ??_lcd_4bit_init:
   428   000040                     lcd_4bit_set_cursor@row:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x13
   432   000040                     	ds	1
   433   000041                     lcd_4bit_set_cursor@colum:
   434                           	callstack 0
   435   000041                     lcd_4bit_init@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x14
   439   000041                     	ds	1
   440   000042                     lcd_4bit_set_cursor@ret:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x15
   444   000042                     	ds	1
   445   000043                     lcd_4bit_init@ret:
   446                           	callstack 0
   447   000043                     lcd_4bit_send_string_pos@lcd:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x16
   451   000043                     	ds	1
   452   000044                     lcd_4bit_send_string_pos@row:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x17
   456   000044                     	ds	1
   457   000045                     lcd_4bit_send_string_pos@colum:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x18
   461   000045                     	ds	1
   462   000046                     lcd_4bit_send_string_pos@str:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x19
   466   000046                     	ds	2
   467   000048                     lcd_4bit_send_string_pos@ret:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x1B
   471   000048                     	ds	1
   472   000049                     
   473                           ; 1 bytes @ 0x1C
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 39 in file "application.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  2  500[None  ] int 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels required when called: 5
   499 ;; This function calls:
   500 ;;		_application_initializ
   501 ;;		_keypad_get_value
   502 ;;		_lcd_4bit_send_string_pos
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text0
   509   0016C4                     __ptext0:
   510                           	callstack 0
   511   0016C4                     _main:
   512                           	callstack 26
   513   0016C4                     
   514                           ;application.c: 41:     application_initializ();
   515   0016C4  ECB5  F00C         	call	_application_initializ	;wreg free
   516   0016C8                     
   517                           ;application.c: 42:     keypad_get_value(&keypad , &value);
   518   0016C8  0E1F               	movlw	low _keypad
   519   0016CA  6E35               	movwf	keypad_get_value@_keypad_config^0,c
   520   0016CC  0E59               	movlw	low _value
   521   0016CE  6E36               	movwf	keypad_get_value@value^0,c
   522   0016D0  EC20  F009         	call	_keypad_get_value	;wreg free
   523   0016D4                     
   524                           ;application.c: 44:     ret = lcd_4bit_send_string_pos(&lcd2 , 1 , 1 , "Reading");
   525   0016D4  0E27               	movlw	low _lcd2
   526   0016D6  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   527   0016D8  0E01               	movlw	1
   528   0016DA  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   529   0016DC  0E01               	movlw	1
   530   0016DE  6E45               	movwf	lcd_4bit_send_string_pos@colum^0,c
   531   0016E0  0E11               	movlw	low STR_4
   532   0016E2  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   533   0016E4  5046               	movf	lcd_4bit_send_string_pos@str^0,w,c
   534   0016E6  A4D8               	btfss	status,2,c
   535   0016E8  0E10               	movlw	high __smallconst
   536   0016EA  6E47               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   537   0016EC  EC1D  F00A         	call	_lcd_4bit_send_string_pos	;wreg free
   538   0016F0  6E5A               	movwf	_ret^0,c
   539   0016F2                     l2932:
   540                           
   541                           ;application.c: 45:     ret = lcd_4bit_send_string_pos(&lcd2 , 2 , 1 , &value);
   542   0016F2  0E27               	movlw	low _lcd2
   543   0016F4  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   544   0016F6  0E02               	movlw	2
   545   0016F8  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   546   0016FA  0E01               	movlw	1
   547   0016FC  6E45               	movwf	lcd_4bit_send_string_pos@colum^0,c
   548   0016FE  0E59               	movlw	low _value
   549   001700  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   550   001702  6A47               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
   551   001704  EC1D  F00A         	call	_lcd_4bit_send_string_pos	;wreg free
   552   001708  6E5A               	movwf	_ret^0,c
   553   00170A                     
   554                           ;application.c: 47:     {;application.c: 48:         ret = keypad_get_value(&keypad , &v
      +                          alue);
   555   00170A  0E1F               	movlw	low _keypad
   556   00170C  6E35               	movwf	keypad_get_value@_keypad_config^0,c
   557   00170E  0E59               	movlw	low _value
   558   001710  6E36               	movwf	keypad_get_value@value^0,c
   559   001712  EC20  F009         	call	_keypad_get_value	;wreg free
   560   001716  6E5A               	movwf	_ret^0,c
   561   001718                     
   562                           ;application.c: 50:         ret = lcd_4bit_send_string_pos(&lcd2 , 1 , 1 , "Reading");
   563   001718  0E27               	movlw	low _lcd2
   564   00171A  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   565   00171C  0E01               	movlw	1
   566   00171E  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   567   001720  0E01               	movlw	1
   568   001722  6E45               	movwf	lcd_4bit_send_string_pos@colum^0,c
   569   001724  0E11               	movlw	low STR_4
   570   001726  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   571   001728  5046               	movf	lcd_4bit_send_string_pos@str^0,w,c
   572   00172A  A4D8               	btfss	status,2,c
   573   00172C  0E10               	movlw	high __smallconst
   574   00172E  6E47               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   575   001730  EC1D  F00A         	call	_lcd_4bit_send_string_pos	;wreg free
   576   001734  6E5A               	movwf	_ret^0,c
   577   001736  EF79  F00B         	goto	l2932
   578   00173A  EF00  F000         	goto	start
   579   00173E                     __end_of_main:
   580                           	callstack 0
   581                           
   582 ;; *************** function _lcd_4bit_send_string_pos *****************
   583 ;; Defined at:
   584 ;;		line 165 in file "ECU_layer/lcd/lcd.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  lcd             1   22[COMRAM] PTR const struct .
   587 ;;		 -> lcd2(6), 
   588 ;;  row             1   23[COMRAM] unsigned char 
   589 ;;  colum           1   24[COMRAM] unsigned char 
   590 ;;  str             2   25[COMRAM] PTR unsigned char 
   591 ;;		 -> STR_5(8), STR_4(8), value(1), 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  ret             1   27[COMRAM] unsigned char 
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      unsigned char 
   596 ;; Registers used:
   597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   603 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;Total ram usage:        6 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 4
   610 ;; This function calls:
   611 ;;		_lcd_4bit_send_data
   612 ;;		_lcd_4bit_set_cursor
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text1
   619   00143A                     __ptext1:
   620                           	callstack 0
   621   00143A                     _lcd_4bit_send_string_pos:
   622                           	callstack 26
   623   00143A                     
   624                           ;ECU_layer/lcd/lcd.c: 169:     if ((((void*)0) == lcd) || (((void*)0) == str))
   625   00143A  5043               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
   626   00143C  B4D8               	btfsc	status,2,c
   627   00143E  EF23  F00A         	goto	u1551
   628   001442  EF25  F00A         	goto	u1550
   629   001446                     u1551:
   630   001446  EF2E  F00A         	goto	l2438
   631   00144A                     u1550:
   632   00144A  5046               	movf	lcd_4bit_send_string_pos@str^0,w,c
   633   00144C  1047               	iorwf	(lcd_4bit_send_string_pos@str+1)^0,w,c
   634   00144E  A4D8               	btfss	status,2,c
   635   001450  EF2C  F00A         	goto	u1561
   636   001454  EF2E  F00A         	goto	u1560
   637   001458                     u1561:
   638   001458  EF32  F00A         	goto	l2440
   639   00145C                     u1560:
   640   00145C                     l2438:
   641                           
   642                           ;ECU_layer/lcd/lcd.c: 170:     {;ECU_layer/lcd/lcd.c: 171:         ret = (STD_ReturnType
      +                          )0x00;
   643   00145C  0E00               	movlw	0
   644   00145E  6E48               	movwf	lcd_4bit_send_string_pos@ret^0,c
   645                           
   646                           ;ECU_layer/lcd/lcd.c: 172:     }
   647   001460  EF79  F00A         	goto	l2452
   648   001464                     l2440:
   649                           
   650                           ;ECU_layer/lcd/lcd.c: 174:     {;ECU_layer/lcd/lcd.c: 175:         ret = lcd_4bit_set_cu
      +                          rsor(lcd , row , colum);
   651   001464  C043  F03F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
   652   001468  C044  F040         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
   653   00146C  C045  F041         	movff	lcd_4bit_send_string_pos@colum,lcd_4bit_set_cursor@colum
   654   001470  EC7B  F00A         	call	_lcd_4bit_set_cursor	;wreg free
   655   001474  6E48               	movwf	lcd_4bit_send_string_pos@ret^0,c
   656                           
   657                           ;ECU_layer/lcd/lcd.c: 176:         while(*str)
   658   001476  EF60  F00A         	goto	l2450
   659   00147A                     l2442:
   660                           
   661                           ;ECU_layer/lcd/lcd.c: 177:         {;ECU_layer/lcd/lcd.c: 178:             ret = lcd_4bi
      +                          t_send_data(lcd , *str++);
   662   00147A  C043  F03C         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_data@lcd
   663   00147E  C046  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   664   001482  C047  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
   665   001486  0E00               	movlw	low (__smallconst shr (0+16))
   666   001488  6EF8               	movwf	tblptru,c
   667   00148A  0E0F               	movlw	(high __ramtop+-1)
   668   00148C  64F7               	cpfsgt	tblptrh,c
   669   00148E  D003               	bra	u1577
   670   001490  0008               	tblrd		*
   671   001492  50F5               	movf	tablat,w,c
   672   001494  D005               	bra	u1570
   673   001496                     u1577:
   674   001496  CFF6 FFE9          	movff	tblptrl,fsr0l
   675   00149A  CFF7 FFEA          	movff	tblptrh,fsr0h
   676   00149E  50EF               	movf	indf0,w,c
   677   0014A0                     u1570:
   678   0014A0  6E3D               	movwf	lcd_4bit_send_data@data^0,c
   679   0014A2  EC06  F00C         	call	_lcd_4bit_send_data	;wreg free
   680   0014A6  6E48               	movwf	lcd_4bit_send_string_pos@ret^0,c
   681   0014A8  4A46               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
   682   0014AA  2A47               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
   683   0014AC                     
   684                           ;ECU_layer/lcd/lcd.c: 180:             if (ret != (STD_ReturnType)0x01)
   685   0014AC  0448               	decf	lcd_4bit_send_string_pos@ret^0,w,c
   686   0014AE  B4D8               	btfsc	status,2,c
   687   0014B0  EF5C  F00A         	goto	u1581
   688   0014B4  EF5E  F00A         	goto	u1580
   689   0014B8                     u1581:
   690   0014B8  EF60  F00A         	goto	l2450
   691   0014BC                     u1580:
   692   0014BC  EF79  F00A         	goto	l2452
   693   0014C0                     l2450:
   694                           
   695                           ;ECU_layer/lcd/lcd.c: 176:         while(*str)
   696   0014C0  C046  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   697   0014C4  C047  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
   698   0014C8  0E00               	movlw	low (__smallconst shr (0+16))
   699   0014CA  6EF8               	movwf	tblptru,c
   700   0014CC  0E0F               	movlw	(high __ramtop+-1)
   701   0014CE  64F7               	cpfsgt	tblptrh,c
   702   0014D0  D003               	bra	u1597
   703   0014D2  0008               	tblrd		*
   704   0014D4  50F5               	movf	tablat,w,c
   705   0014D6  D005               	bra	u1590
   706   0014D8                     u1597:
   707   0014D8  CFF6 FFE9          	movff	tblptrl,fsr0l
   708   0014DC  CFF7 FFEA          	movff	tblptrh,fsr0h
   709   0014E0  50EF               	movf	indf0,w,c
   710   0014E2                     u1590:
   711   0014E2  0900               	iorlw	0
   712   0014E4  A4D8               	btfss	status,2,c
   713   0014E6  EF77  F00A         	goto	u1601
   714   0014EA  EF79  F00A         	goto	u1600
   715   0014EE                     u1601:
   716   0014EE  EF3D  F00A         	goto	l2442
   717   0014F2                     u1600:
   718   0014F2                     l2452:
   719                           
   720                           ;ECU_layer/lcd/lcd.c: 186:     return ret;
   721   0014F2  5048               	movf	lcd_4bit_send_string_pos@ret^0,w,c
   722   0014F4  0012               	return		;funcret
   723   0014F6                     __end_of_lcd_4bit_send_string_pos:
   724                           	callstack 0
   725                           
   726 ;; *************** function _lcd_4bit_set_cursor *****************
   727 ;; Defined at:
   728 ;;		line 261 in file "ECU_layer/lcd/lcd.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  lcd             1   18[COMRAM] PTR const struct .
   731 ;;		 -> lcd2(6), 
   732 ;;  row             1   19[COMRAM] unsigned char 
   733 ;;  colum           1   20[COMRAM] unsigned char 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  ret             1   21[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      unsigned char 
   738 ;; Registers used:
   739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:        4 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 3
   752 ;; This function calls:
   753 ;;		_lcd_4bit_send_command
   754 ;; This function is called by:
   755 ;;		_lcd_4bit_send_string_pos
   756 ;;		_lcd_4bit_send_data_pos
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761   0014F6                     __ptext2:
   762                           	callstack 0
   763   0014F6                     _lcd_4bit_set_cursor:
   764                           	callstack 26
   765   0014F6                     
   766                           ;ECU_layer/lcd/lcd.c: 264:     colum--;
   767   0014F6  0641               	decf	lcd_4bit_set_cursor@colum^0,f,c
   768   0014F8                     
   769                           ;ECU_layer/lcd/lcd.c: 266:     if (((void*)0) == lcd)
   770   0014F8  503F               	movf	lcd_4bit_set_cursor@lcd^0,w,c
   771   0014FA  A4D8               	btfss	status,2,c
   772   0014FC  EF82  F00A         	goto	u1471
   773   001500  EF84  F00A         	goto	u1470
   774   001504                     u1471:
   775   001504  EFB9  F00A         	goto	l2364
   776   001508                     u1470:
   777   001508                     
   778                           ;ECU_layer/lcd/lcd.c: 267:     {;ECU_layer/lcd/lcd.c: 268:         ret = (STD_ReturnType
      +                          )0x00;
   779   001508  0E00               	movlw	0
   780   00150A  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   781                           
   782                           ;ECU_layer/lcd/lcd.c: 269:     }
   783   00150C  EFCC  F00A         	goto	l2366
   784   001510                     l2352:
   785                           
   786                           ;ECU_layer/lcd/lcd.c: 275:                 ret = lcd_4bit_send_command(lcd , (0x80 + col
      +                          um));
   787   001510  C03F  F03C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   788   001514  5041               	movf	lcd_4bit_set_cursor@colum^0,w,c
   789   001516  0F80               	addlw	128
   790   001518  6E3D               	movwf	lcd_4bit_send_command@command^0,c
   791   00151A  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
   792   00151E  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   793                           
   794                           ;ECU_layer/lcd/lcd.c: 276:                 break;
   795   001520  EFCC  F00A         	goto	l2366
   796   001524                     l2354:
   797                           
   798                           ;ECU_layer/lcd/lcd.c: 278:                 ret = lcd_4bit_send_command(lcd , (0xC0 + col
      +                          um));
   799   001524  C03F  F03C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   800   001528  5041               	movf	lcd_4bit_set_cursor@colum^0,w,c
   801   00152A  0FC0               	addlw	192
   802   00152C  6E3D               	movwf	lcd_4bit_send_command@command^0,c
   803   00152E  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
   804   001532  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   805                           
   806                           ;ECU_layer/lcd/lcd.c: 279:                 break;
   807   001534  EFCC  F00A         	goto	l2366
   808   001538                     l2356:
   809                           
   810                           ;ECU_layer/lcd/lcd.c: 281:                 ret = lcd_4bit_send_command(lcd , (0x94 + col
      +                          um));
   811   001538  C03F  F03C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   812   00153C  5041               	movf	lcd_4bit_set_cursor@colum^0,w,c
   813   00153E  0F94               	addlw	148
   814   001540  6E3D               	movwf	lcd_4bit_send_command@command^0,c
   815   001542  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
   816   001546  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   817                           
   818                           ;ECU_layer/lcd/lcd.c: 282:                 break;
   819   001548  EFCC  F00A         	goto	l2366
   820   00154C                     l2358:
   821                           
   822                           ;ECU_layer/lcd/lcd.c: 284:                 ret = lcd_4bit_send_command(lcd , (0xD4 + col
      +                          um));
   823   00154C  C03F  F03C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   824   001550  5041               	movf	lcd_4bit_set_cursor@colum^0,w,c
   825   001552  0FD4               	addlw	212
   826   001554  6E3D               	movwf	lcd_4bit_send_command@command^0,c
   827   001556  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
   828   00155A  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   829                           
   830                           ;ECU_layer/lcd/lcd.c: 285:                 break;
   831   00155C  EFCC  F00A         	goto	l2366
   832   001560                     l2360:
   833                           
   834                           ;ECU_layer/lcd/lcd.c: 287:                 ret = lcd_4bit_send_command(lcd , 0x02);
   835   001560  C03F  F03C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   836   001564  0E02               	movlw	2
   837   001566  6E3D               	movwf	lcd_4bit_send_command@command^0,c
   838   001568  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
   839   00156C  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   840                           
   841                           ;ECU_layer/lcd/lcd.c: 288:                 break;
   842   00156E  EFCC  F00A         	goto	l2366
   843   001572                     l2364:
   844   001572  5040               	movf	lcd_4bit_set_cursor@row^0,w,c
   845                           
   846                           ; Switch size 1, requested type "simple"
   847                           ; Number of cases is 4, Range of values is 1 to 4
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; simple_byte           13     7 (average)
   851                           ;	Chosen strategy is simple_byte
   852   001574  0A01               	xorlw	1	; case 1
   853   001576  B4D8               	btfsc	status,2,c
   854   001578  EF88  F00A         	goto	l2352
   855   00157C  0A03               	xorlw	3	; case 2
   856   00157E  B4D8               	btfsc	status,2,c
   857   001580  EF92  F00A         	goto	l2354
   858   001584  0A01               	xorlw	1	; case 3
   859   001586  B4D8               	btfsc	status,2,c
   860   001588  EF9C  F00A         	goto	l2356
   861   00158C  0A07               	xorlw	7	; case 4
   862   00158E  B4D8               	btfsc	status,2,c
   863   001590  EFA6  F00A         	goto	l2358
   864   001594  EFB0  F00A         	goto	l2360
   865   001598                     l2366:
   866                           
   867                           ;ECU_layer/lcd/lcd.c: 291:     return ret;
   868   001598  5042               	movf	lcd_4bit_set_cursor@ret^0,w,c
   869   00159A  0012               	return		;funcret
   870   00159C                     __end_of_lcd_4bit_set_cursor:
   871                           	callstack 0
   872                           
   873 ;; *************** function _lcd_4bit_send_data *****************
   874 ;; Defined at:
   875 ;;		line 82 in file "ECU_layer/lcd/lcd.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  lcd             1   15[COMRAM] PTR const struct .
   878 ;;		 -> lcd2(6), 
   879 ;;  data            1   16[COMRAM] unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  ret             1   17[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      unsigned char 
   884 ;; Registers used:
   885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:        3 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 2
   898 ;; This function calls:
   899 ;;		_gpio_pin_write_logic
   900 ;;		_lcd_send_4bit_enable_signal
   901 ;;		_lcd_send_4bits
   902 ;; This function is called by:
   903 ;;		_lcd_4bit_send_string_pos
   904 ;;		_lcd_4bit_send_data_pos
   905 ;;		_lcd_4bit_send_string
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text3
   910   00180C                     __ptext3:
   911                           	callstack 0
   912   00180C                     _lcd_4bit_send_data:
   913                           	callstack 27
   914   00180C                     
   915                           ;ECU_layer/lcd/lcd.c: 87:     if (((void*)0) == lcd)
   916   00180C  503C               	movf	lcd_4bit_send_data@lcd^0,w,c
   917   00180E  A4D8               	btfss	status,2,c
   918   001810  EF0C  F00C         	goto	u1461
   919   001814  EF0E  F00C         	goto	u1460
   920   001818                     u1461:
   921   001818  EF12  F00C         	goto	l2338
   922   00181C                     u1460:
   923   00181C                     
   924                           ;ECU_layer/lcd/lcd.c: 88:     {;ECU_layer/lcd/lcd.c: 89:         ret = (STD_ReturnType)0
      +                          x00;
   925   00181C  0E00               	movlw	0
   926   00181E  6E3E               	movwf	lcd_4bit_send_data@ret^0,c
   927                           
   928                           ;ECU_layer/lcd/lcd.c: 90:     }
   929   001820  EF32  F00C         	goto	l2340
   930   001824                     l2338:
   931                           
   932                           ;ECU_layer/lcd/lcd.c: 92:     {;ECU_layer/lcd/lcd.c: 93:         ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs),GPIO_HIGH);
   933   001824  C03C  F02D         	movff	lcd_4bit_send_data@lcd,gpio_pin_write_logic@_pin_config
   934   001828  0E01               	movlw	1
   935   00182A  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   936   00182C  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
   937   001830  6E3E               	movwf	lcd_4bit_send_data@ret^0,c
   938                           
   939                           ;ECU_layer/lcd/lcd.c: 94:         ret = lcd_send_4bits(lcd, data >> 4);
   940   001832  C03C  F035         	movff	lcd_4bit_send_data@lcd,lcd_send_4bits@lcd
   941   001836  383D               	swapf	lcd_4bit_send_data@data^0,w,c
   942   001838  0B0F               	andlw	15
   943   00183A  6E36               	movwf	lcd_send_4bits@data_command^0,c
   944   00183C  EC9F  F00B         	call	_lcd_send_4bits	;wreg free
   945   001840  6E3E               	movwf	lcd_4bit_send_data@ret^0,c
   946                           
   947                           ;ECU_layer/lcd/lcd.c: 95:         ret = lcd_send_4bit_enable_signal(lcd);
   948   001842  C03C  F035         	movff	lcd_4bit_send_data@lcd,lcd_send_4bit_enable_signal@lcd
   949   001846  EC62  F00C         	call	_lcd_send_4bit_enable_signal	;wreg free
   950   00184A  6E3E               	movwf	lcd_4bit_send_data@ret^0,c
   951                           
   952                           ;ECU_layer/lcd/lcd.c: 96:         ret = lcd_send_4bits(lcd, data);
   953   00184C  C03C  F035         	movff	lcd_4bit_send_data@lcd,lcd_send_4bits@lcd
   954   001850  C03D  F036         	movff	lcd_4bit_send_data@data,lcd_send_4bits@data_command
   955   001854  EC9F  F00B         	call	_lcd_send_4bits	;wreg free
   956   001858  6E3E               	movwf	lcd_4bit_send_data@ret^0,c
   957                           
   958                           ;ECU_layer/lcd/lcd.c: 97:         ret = lcd_send_4bit_enable_signal(lcd);
   959   00185A  C03C  F035         	movff	lcd_4bit_send_data@lcd,lcd_send_4bit_enable_signal@lcd
   960   00185E  EC62  F00C         	call	_lcd_send_4bit_enable_signal	;wreg free
   961   001862  6E3E               	movwf	lcd_4bit_send_data@ret^0,c
   962   001864                     l2340:
   963                           
   964                           ;ECU_layer/lcd/lcd.c: 99:     return ret;
   965   001864  503E               	movf	lcd_4bit_send_data@ret^0,w,c
   966   001866  0012               	return		;funcret
   967   001868                     __end_of_lcd_4bit_send_data:
   968                           	callstack 0
   969                           
   970 ;; *************** function _keypad_get_value *****************
   971 ;; Defined at:
   972 ;;		line 53 in file "ECU_layer/Keypad/keypad.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  _keypad_conf    1    8[COMRAM] PTR const struct .
   975 ;;		 -> keypad(8), 
   976 ;;  value           1    9[COMRAM] PTR unsigned char 
   977 ;;		 -> value(1), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  k               2   17[COMRAM] int 
   980 ;;  j               2   13[COMRAM] int 
   981 ;;  i               2   15[COMRAM] int 
   982 ;;  colum_logic     1   12[COMRAM] unsigned char 
   983 ;;  ret             1   11[COMRAM] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      unsigned char 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;Total ram usage:       11 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 1
  1000 ;; This function calls:
  1001 ;;		_gpio_pin_read_logic
  1002 ;;		_gpio_pin_write_logic
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text4
  1009   001240                     __ptext4:
  1010                           	callstack 0
  1011   001240                     _keypad_get_value:
  1012                           	callstack 29
  1013   001240                     
  1014                           ;ECU_layer/Keypad/keypad.c: 56:     uint8 colum_logic = 0;
  1015   001240  0E00               	movlw	0
  1016   001242  6E39               	movwf	keypad_get_value@colum_logic^0,c
  1017                           
  1018                           ;ECU_layer/Keypad/keypad.c: 58:     if ((((void*)0) == _keypad_config) || (((void*)0) ==
      +                           value))
  1019   001244  5035               	movf	keypad_get_value@_keypad_config^0,w,c
  1020   001246  B4D8               	btfsc	status,2,c
  1021   001248  EF28  F009         	goto	u1491
  1022   00124C  EF2A  F009         	goto	u1490
  1023   001250                     u1491:
  1024   001250  EF32  F009         	goto	l2388
  1025   001254                     u1490:
  1026   001254  5036               	movf	keypad_get_value@value^0,w,c
  1027   001256  A4D8               	btfss	status,2,c
  1028   001258  EF30  F009         	goto	u1501
  1029   00125C  EF32  F009         	goto	u1500
  1030   001260                     u1501:
  1031   001260  EF36  F009         	goto	l2390
  1032   001264                     u1500:
  1033   001264                     l2388:
  1034                           
  1035                           ;ECU_layer/Keypad/keypad.c: 59:     {;ECU_layer/Keypad/keypad.c: 60:         ret = (STD_
      +                          ReturnType)0x00;
  1036   001264  0E00               	movlw	0
  1037   001266  6E38               	movwf	keypad_get_value@ret^0,c
  1038                           
  1039                           ;ECU_layer/Keypad/keypad.c: 61:     }
  1040   001268  EFA1  F009         	goto	l2430
  1041   00126C                     l2390:
  1042                           
  1043                           ;ECU_layer/Keypad/keypad.c: 63:     {;ECU_layer/Keypad/keypad.c: 64:         for(int i =
      +                           0 ; i < 4 ; i++)
  1044   00126C  0E00               	movlw	0
  1045   00126E  6E3D               	movwf	(keypad_get_value@i+1)^0,c
  1046   001270  0E00               	movlw	0
  1047   001272  6E3C               	movwf	keypad_get_value@i^0,c
  1048   001274                     l2396:
  1049                           
  1050                           ;ECU_layer/Keypad/keypad.c: 65:         {;ECU_layer/Keypad/keypad.c: 66:             for
      +                          (int j = 0 ; j < 4 ; j++)
  1051   001274  0E00               	movlw	0
  1052   001276  6E3B               	movwf	(keypad_get_value@j+1)^0,c
  1053   001278  0E00               	movlw	0
  1054   00127A  6E3A               	movwf	keypad_get_value@j^0,c
  1055   00127C                     l2402:
  1056   00127C  5035               	movf	keypad_get_value@_keypad_config^0,w,c
  1057   00127E  243A               	addwf	keypad_get_value@j^0,w,c
  1058   001280  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1059   001282  0E00               	movlw	0
  1060   001284  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1061   001286  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  1062   00128A                     
  1063                           ;ECU_layer/Keypad/keypad.c: 69:             }
  1064   00128A  4A3A               	infsnz	keypad_get_value@j^0,f,c
  1065   00128C  2A3B               	incf	(keypad_get_value@j+1)^0,f,c
  1066   00128E  BE3B               	btfsc	(keypad_get_value@j+1)^0,7,c
  1067   001290  EF53  F009         	goto	u1511
  1068   001294  503B               	movf	(keypad_get_value@j+1)^0,w,c
  1069   001296  E109               	bnz	u1510
  1070   001298  0E04               	movlw	4
  1071   00129A  5C3A               	subwf	keypad_get_value@j^0,w,c
  1072   00129C  A0D8               	btfss	status,0,c
  1073   00129E  EF53  F009         	goto	u1511
  1074   0012A2  EF55  F009         	goto	u1510
  1075   0012A6                     u1511:
  1076   0012A6  EF3E  F009         	goto	l2402
  1077   0012AA                     u1510:
  1078   0012AA  5035               	movf	keypad_get_value@_keypad_config^0,w,c
  1079   0012AC  243C               	addwf	keypad_get_value@i^0,w,c
  1080   0012AE  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1081   0012B0  0E01               	movlw	1
  1082   0012B2  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1083   0012B4  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  1084   0012B8                     
  1085                           ;ECU_layer/Keypad/keypad.c: 73:             for(int k=0 ; k < 4 ; k++)
  1086   0012B8  0E00               	movlw	0
  1087   0012BA  6E3F               	movwf	(keypad_get_value@k+1)^0,c
  1088   0012BC  0E00               	movlw	0
  1089   0012BE  6E3E               	movwf	keypad_get_value@k^0,c
  1090   0012C0                     l2416:
  1091                           
  1092                           ;ECU_layer/Keypad/keypad.c: 74:             {;ECU_layer/Keypad/keypad.c: 75:            
      +                               ret = gpio_pin_read_logic(&(_keypad_config->keypad_colums[k]) , &colum_logic);
  1093   0012C0  5035               	movf	keypad_get_value@_keypad_config^0,w,c
  1094   0012C2  243E               	addwf	keypad_get_value@k^0,w,c
  1095   0012C4  0F04               	addlw	4
  1096   0012C6  6E2D               	movwf	gpio_pin_read_logic@_pin_config^0,c
  1097   0012C8  0E39               	movlw	low keypad_get_value@colum_logic
  1098   0012CA  6E2E               	movwf	gpio_pin_read_logic@logic^0,c
  1099   0012CC  ECCE  F00A         	call	_gpio_pin_read_logic	;wreg free
  1100   0012D0  6E38               	movwf	keypad_get_value@ret^0,c
  1101   0012D2                     
  1102                           ;ECU_layer/Keypad/keypad.c: 77:                 if(GPIO_HIGH == colum_logic)
  1103   0012D2  0439               	decf	keypad_get_value@colum_logic^0,w,c
  1104   0012D4  A4D8               	btfss	status,2,c
  1105   0012D6  EF6F  F009         	goto	u1521
  1106   0012DA  EF71  F009         	goto	u1520
  1107   0012DE                     u1521:
  1108   0012DE  EF81  F009         	goto	l2422
  1109   0012E2                     u1520:
  1110   0012E2                     
  1111                           ;ECU_layer/Keypad/keypad.c: 78:                 {;ECU_layer/Keypad/keypad.c: 79:        
      +                                       *value = keypad_sampels[i][k];
  1112   0012E2  503C               	movf	keypad_get_value@i^0,w,c
  1113   0012E4  0D04               	mullw	4
  1114   0012E6  50F3               	movf	243,w,c
  1115   0012E8  0F01               	addlw	low _keypad_sampels
  1116   0012EA  243E               	addwf	keypad_get_value@k^0,w,c
  1117   0012EC  6E37               	movwf	??_keypad_get_value^0,c
  1118   0012EE  C037  FFF6         	movff	??_keypad_get_value,tblptrl
  1119   0012F2                     	if	1	;There is more than 1 active tblptr byte
  1120   0012F2  0E10               	movlw	high __smallconst
  1121   0012F4  6EF7               	movwf	tblptrh,c
  1122   0012F6                     	endif
  1123   0012F6                     	if	0	;tblptru may be non-zero
  1124   0012F6                     	endif
  1125   0012F6                     	if	0	;tblptru may be non-zero
  1126   0012F6                     	endif
  1127   0012F6  5036               	movf	keypad_get_value@value^0,w,c
  1128   0012F8  6ED9               	movwf	fsr2l,c
  1129   0012FA  6ADA               	clrf	fsr2h,c
  1130   0012FC  0008               	tblrd		*
  1131   0012FE  CFF5 FFDF          	movff	tablat,indf2
  1132   001302                     l2422:
  1133                           
  1134                           ;ECU_layer/Keypad/keypad.c: 81:             }
  1135   001302  4A3E               	infsnz	keypad_get_value@k^0,f,c
  1136   001304  2A3F               	incf	(keypad_get_value@k+1)^0,f,c
  1137   001306  BE3F               	btfsc	(keypad_get_value@k+1)^0,7,c
  1138   001308  EF8F  F009         	goto	u1531
  1139   00130C  503F               	movf	(keypad_get_value@k+1)^0,w,c
  1140   00130E  E109               	bnz	u1530
  1141   001310  0E04               	movlw	4
  1142   001312  5C3E               	subwf	keypad_get_value@k^0,w,c
  1143   001314  A0D8               	btfss	status,0,c
  1144   001316  EF8F  F009         	goto	u1531
  1145   00131A  EF91  F009         	goto	u1530
  1146   00131E                     u1531:
  1147   00131E  EF60  F009         	goto	l2416
  1148   001322                     u1530:
  1149   001322                     
  1150                           ;ECU_layer/Keypad/keypad.c: 82:         }
  1151   001322  4A3C               	infsnz	keypad_get_value@i^0,f,c
  1152   001324  2A3D               	incf	(keypad_get_value@i+1)^0,f,c
  1153   001326  BE3D               	btfsc	(keypad_get_value@i+1)^0,7,c
  1154   001328  EF9F  F009         	goto	u1541
  1155   00132C  503D               	movf	(keypad_get_value@i+1)^0,w,c
  1156   00132E  E109               	bnz	u1540
  1157   001330  0E04               	movlw	4
  1158   001332  5C3C               	subwf	keypad_get_value@i^0,w,c
  1159   001334  A0D8               	btfss	status,0,c
  1160   001336  EF9F  F009         	goto	u1541
  1161   00133A  EFA1  F009         	goto	u1540
  1162   00133E                     u1541:
  1163   00133E  EF3A  F009         	goto	l2396
  1164   001342                     u1540:
  1165   001342                     l2430:
  1166                           
  1167                           ;ECU_layer/Keypad/keypad.c: 85:     return ret;
  1168   001342  5038               	movf	keypad_get_value@ret^0,w,c
  1169   001344  0012               	return		;funcret
  1170   001346                     __end_of_keypad_get_value:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _gpio_pin_read_logic *****************
  1174 ;; Defined at:
  1175 ;;		line 109 in file "MCAL_layer/GPIO/gpio.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1178 ;;		 -> keypad$keypad_colums(4), keypad(8), 
  1179 ;;  logic           1    1[COMRAM] PTR enum E2981
  1180 ;;		 -> keypad_get_value@colum_logic(1), ecu_button_read_state@pin_logic_status(1), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  ret             1    6[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      unsigned char 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        7 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_keypad_get_value
  1202 ;;		_ecu_button_read_state
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text5
  1207   00159C                     __ptext5:
  1208                           	callstack 0
  1209   00159C                     _gpio_pin_read_logic:
  1210                           	callstack 29
  1211   00159C                     
  1212                           ;MCAL_layer/GPIO/gpio.c: 109: STD_ReturnType gpio_pin_read_logic(const pin_config *_pin_
      +                          config, logic_t *logic);MCAL_layer/GPIO/gpio.c: 110: {;MCAL_layer/GPIO/gpio.c: 111:     
      +                          STD_ReturnType ret = (STD_ReturnType)0x01;
  1213   00159C  0E01               	movlw	1
  1214   00159E  6E33               	movwf	gpio_pin_read_logic@ret^0,c
  1215                           
  1216                           ;MCAL_layer/GPIO/gpio.c: 112:     if(((void*)0) == _pin_config || ((void*)0) == logic ||
      +                           _pin_config->pin > 8 -1)
  1217   0015A0  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1218   0015A2  B4D8               	btfsc	status,2,c
  1219   0015A4  EFD6  F00A         	goto	u1371
  1220   0015A8  EFD8  F00A         	goto	u1370
  1221   0015AC                     u1371:
  1222   0015AC  EFF0  F00A         	goto	l2250
  1223   0015B0                     u1370:
  1224   0015B0  502E               	movf	gpio_pin_read_logic@logic^0,w,c
  1225   0015B2  B4D8               	btfsc	status,2,c
  1226   0015B4  EFDE  F00A         	goto	u1381
  1227   0015B8  EFE0  F00A         	goto	u1380
  1228   0015BC                     u1381:
  1229   0015BC  EFF0  F00A         	goto	l2250
  1230   0015C0                     u1380:
  1231   0015C0  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1232   0015C2  6ED9               	movwf	fsr2l,c
  1233   0015C4  6ADA               	clrf	fsr2h,c
  1234   0015C6  30DF               	rrcf	223,w,c
  1235   0015C8  32E8               	rrcf	wreg,f,c
  1236   0015CA  32E8               	rrcf	wreg,f,c
  1237   0015CC  0B07               	andlw	7
  1238   0015CE  6E2F               	movwf	??_gpio_pin_read_logic^0,c
  1239   0015D0  0E07               	movlw	7
  1240   0015D2  642F               	cpfsgt	??_gpio_pin_read_logic^0,c
  1241   0015D4  EFEE  F00A         	goto	u1391
  1242   0015D8  EFF0  F00A         	goto	u1390
  1243   0015DC                     u1391:
  1244   0015DC  EFF4  F00A         	goto	l2252
  1245   0015E0                     u1390:
  1246   0015E0                     l2250:
  1247                           
  1248                           ;MCAL_layer/GPIO/gpio.c: 113:     {;MCAL_layer/GPIO/gpio.c: 114:         ret = (STD_Retu
      +                          rnType)0x00;
  1249   0015E0  0E00               	movlw	0
  1250   0015E2  6E33               	movwf	gpio_pin_read_logic@ret^0,c
  1251                           
  1252                           ;MCAL_layer/GPIO/gpio.c: 115:     }
  1253   0015E4  EF1E  F00B         	goto	l2254
  1254   0015E8                     l2252:
  1255                           
  1256                           ;MCAL_layer/GPIO/gpio.c: 117:     {;MCAL_layer/GPIO/gpio.c: 118:         *logic = ((*por
      +                          t_registers[_pin_config->port] >> _pin_config->pin)& (uint8)1);
  1257   0015E8  502E               	movf	gpio_pin_read_logic@logic^0,w,c
  1258   0015EA  6ED9               	movwf	fsr2l,c
  1259   0015EC  6ADA               	clrf	fsr2h,c
  1260   0015EE  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1261   0015F0  6EE1               	movwf	fsr1l,c
  1262   0015F2  6AE2               	clrf	fsr1h,c
  1263   0015F4  30E7               	rrcf	231,w,c
  1264   0015F6  32E8               	rrcf	wreg,f,c
  1265   0015F8  32E8               	rrcf	wreg,f,c
  1266   0015FA  0B07               	andlw	7
  1267   0015FC  6E2F               	movwf	??_gpio_pin_read_logic^0,c
  1268   0015FE  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1269   001600  6EE1               	movwf	fsr1l,c
  1270   001602  6AE2               	clrf	fsr1h,c
  1271   001604  50E7               	movf	231,w,c
  1272   001606  0B07               	andlw	7
  1273   001608  0D02               	mullw	2
  1274   00160A  50F3               	movf	243,w,c
  1275   00160C  0F01               	addlw	low _port_registers
  1276   00160E  6EE1               	movwf	fsr1l,c
  1277   001610  6AE2               	clrf	fsr1h,c
  1278   001612  CFE6 F030          	movff	postinc1,??_gpio_pin_read_logic+1
  1279   001616  CFE5 F031          	movff	postdec1,??_gpio_pin_read_logic+2
  1280   00161A  C030  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  1281   00161E  C031  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  1282   001622  50E7               	movf	indf1,w,c
  1283   001624  6E32               	movwf	(??_gpio_pin_read_logic+3)^0,c
  1284   001626  2A2F               	incf	??_gpio_pin_read_logic^0,f,c
  1285   001628  EF18  F00B         	goto	u1404
  1286   00162C                     u1405:
  1287   00162C  90D8               	bcf	status,0,c
  1288   00162E  3232               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  1289   001630                     u1404:
  1290   001630  2E2F               	decfsz	??_gpio_pin_read_logic^0,f,c
  1291   001632  EF16  F00B         	goto	u1405
  1292   001636  5032               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  1293   001638  0B01               	andlw	1
  1294   00163A  6EDF               	movwf	indf2,c
  1295   00163C                     l2254:
  1296                           
  1297                           ;MCAL_layer/GPIO/gpio.c: 121:     return ret;
  1298   00163C  5033               	movf	gpio_pin_read_logic@ret^0,w,c
  1299   00163E  0012               	return		;funcret
  1300   001640                     __end_of_gpio_pin_read_logic:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _application_initializ *****************
  1304 ;; Defined at:
  1305 ;;		line 58 in file "application.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 4
  1326 ;; This function calls:
  1327 ;;		_keypad_initialize
  1328 ;;		_lcd_4bit_init
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text6
  1335   00196A                     __ptext6:
  1336                           	callstack 0
  1337   00196A                     _application_initializ:
  1338                           	callstack 26
  1339   00196A                     
  1340                           ;application.c: 60:     ret = keypad_initialize(&keypad);
  1341   00196A  0E1F               	movlw	low _keypad
  1342   00196C  6E38               	movwf	keypad_initialize@_keypad_config^0,c
  1343   00196E  EC20  F00B         	call	_keypad_initialize	;wreg free
  1344   001972  6E5A               	movwf	_ret^0,c
  1345                           
  1346                           ;application.c: 61:     ret = lcd_4bit_init(&lcd2);
  1347   001974  0E27               	movlw	low _lcd2
  1348   001976  6E3F               	movwf	lcd_4bit_init@lcd^0,c
  1349   001978  ECA3  F009         	call	_lcd_4bit_init	;wreg free
  1350   00197C  6E5A               	movwf	_ret^0,c
  1351   00197E  0012               	return		;funcret
  1352   001980                     __end_of_application_initializ:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _lcd_4bit_init *****************
  1356 ;; Defined at:
  1357 ;;		line 17 in file "ECU_layer/lcd/lcd.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  lcd             1   18[COMRAM] PTR const struct .
  1360 ;;		 -> lcd2(6), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  i               2   20[COMRAM] int 
  1363 ;;  ret             1   22[COMRAM] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      unsigned char 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:        5 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 3
  1380 ;; This function calls:
  1381 ;;		_gpio_pin_Initialization
  1382 ;;		_lcd_4bit_send_command
  1383 ;; This function is called by:
  1384 ;;		_application_initializ
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text7
  1389   001346                     __ptext7:
  1390                           	callstack 0
  1391   001346                     _lcd_4bit_init:
  1392                           	callstack 26
  1393   001346                     
  1394                           ;ECU_layer/lcd/lcd.c: 21:     if (((void*)0) == lcd)
  1395   001346  503F               	movf	lcd_4bit_init@lcd^0,w,c
  1396   001348  A4D8               	btfss	status,2,c
  1397   00134A  EFA9  F009         	goto	u1441
  1398   00134E  EFAB  F009         	goto	u1440
  1399   001352                     u1441:
  1400   001352  EFAF  F009         	goto	l2294
  1401   001356                     u1440:
  1402   001356                     
  1403                           ;ECU_layer/lcd/lcd.c: 22:     {;ECU_layer/lcd/lcd.c: 23:         ret = (STD_ReturnType)0
      +                          x00;
  1404   001356  0E00               	movlw	0
  1405   001358  6E43               	movwf	lcd_4bit_init@ret^0,c
  1406                           
  1407                           ;ECU_layer/lcd/lcd.c: 24:     }
  1408   00135A  EF1B  F00A         	goto	l2330
  1409   00135E                     l2294:
  1410                           
  1411                           ;ECU_layer/lcd/lcd.c: 26:     {;ECU_layer/lcd/lcd.c: 27:         ret = gpio_pin_Initiali
      +                          zation(&(lcd->lcd_rs));
  1412   00135E  C03F  F035         	movff	lcd_4bit_init@lcd,gpio_pin_Initialization@_pin_config
  1413   001362  ECD7  F00B         	call	_gpio_pin_Initialization	;wreg free
  1414   001366  6E43               	movwf	lcd_4bit_init@ret^0,c
  1415                           
  1416                           ;ECU_layer/lcd/lcd.c: 28:         ret = gpio_pin_Initialization(&(lcd->lcd_en));
  1417   001368  283F               	incf	lcd_4bit_init@lcd^0,w,c
  1418   00136A  6E35               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1419   00136C  ECD7  F00B         	call	_gpio_pin_Initialization	;wreg free
  1420   001370  6E43               	movwf	lcd_4bit_init@ret^0,c
  1421   001372                     
  1422                           ;ECU_layer/lcd/lcd.c: 29:         for(int i=0 ; i<4 ; i++)
  1423   001372  0E00               	movlw	0
  1424   001374  6E42               	movwf	(lcd_4bit_init@i+1)^0,c
  1425   001376  0E00               	movlw	0
  1426   001378  6E41               	movwf	lcd_4bit_init@i^0,c
  1427   00137A                     l2302:
  1428   00137A  503F               	movf	lcd_4bit_init@lcd^0,w,c
  1429   00137C  2441               	addwf	lcd_4bit_init@i^0,w,c
  1430   00137E  0F02               	addlw	2
  1431   001380  6E35               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1432   001382  ECD7  F00B         	call	_gpio_pin_Initialization	;wreg free
  1433   001386                     
  1434                           ;ECU_layer/lcd/lcd.c: 32:         }
  1435   001386  4A41               	infsnz	lcd_4bit_init@i^0,f,c
  1436   001388  2A42               	incf	(lcd_4bit_init@i+1)^0,f,c
  1437   00138A  BE42               	btfsc	(lcd_4bit_init@i+1)^0,7,c
  1438   00138C  EFD1  F009         	goto	u1451
  1439   001390  5042               	movf	(lcd_4bit_init@i+1)^0,w,c
  1440   001392  E109               	bnz	u1450
  1441   001394  0E04               	movlw	4
  1442   001396  5C41               	subwf	lcd_4bit_init@i^0,w,c
  1443   001398  A0D8               	btfss	status,0,c
  1444   00139A  EFD1  F009         	goto	u1451
  1445   00139E  EFD3  F009         	goto	u1450
  1446   0013A2                     u1451:
  1447   0013A2  EFBD  F009         	goto	l2302
  1448   0013A6                     u1450:
  1449   0013A6                     
  1450                           ;ECU_layer/lcd/lcd.c: 33:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1451   0013A6  0E34               	movlw	52
  1452   0013A8  6E40               	movwf	??_lcd_4bit_init^0,c
  1453   0013AA  0EF2               	movlw	242
  1454   0013AC                     u2187:
  1455   0013AC  2EE8               	decfsz	wreg,f,c
  1456   0013AE  D7FE               	bra	u2187
  1457   0013B0  2E40               	decfsz	??_lcd_4bit_init^0,f,c
  1458   0013B2  D7FC               	bra	u2187
  1459   0013B4  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1460   0013B8  0E38               	movlw	56
  1461   0013BA  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1462   0013BC  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1463   0013C0                     
  1464                           ;ECU_layer/lcd/lcd.c: 35:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1465   0013C0  0E0D               	movlw	13
  1466   0013C2  6E40               	movwf	??_lcd_4bit_init^0,c
  1467   0013C4  0EFC               	movlw	252
  1468   0013C6                     u2197:
  1469   0013C6  2EE8               	decfsz	wreg,f,c
  1470   0013C8  D7FE               	bra	u2197
  1471   0013CA  2E40               	decfsz	??_lcd_4bit_init^0,f,c
  1472   0013CC  D7FC               	bra	u2197
  1473   0013CE  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1474   0013D2  0E38               	movlw	56
  1475   0013D4  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1476   0013D6  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1477   0013DA                     
  1478                           ;ECU_layer/lcd/lcd.c: 37:         _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  1479   0013DA  0E64               	movlw	100
  1480   0013DC                     u2207:
  1481   0013DC  2EE8               	decfsz	wreg,f,c
  1482   0013DE  D7FE               	bra	u2207
  1483   0013E0  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1484   0013E4  0E38               	movlw	56
  1485   0013E6  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1486   0013E8  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1487   0013EC  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1488   0013F0  0E01               	movlw	1
  1489   0013F2  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1490   0013F4  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1491   0013F8  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1492   0013FC  0E02               	movlw	2
  1493   0013FE  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1494   001400  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1495   001404  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1496   001408  0E06               	movlw	6
  1497   00140A  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1498   00140C  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1499   001410  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1500   001414  0E0C               	movlw	12
  1501   001416  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1502   001418  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1503   00141C  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1504   001420  0E28               	movlw	40
  1505   001422  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1506   001424  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1507   001428                     
  1508                           ;ECU_layer/lcd/lcd.c: 45:         ret = lcd_4bit_send_command(lcd , 0x80);
  1509   001428  C03F  F03C         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1510   00142C  0E80               	movlw	128
  1511   00142E  6E3D               	movwf	lcd_4bit_send_command@command^0,c
  1512   001430  EC34  F00C         	call	_lcd_4bit_send_command	;wreg free
  1513   001434  6E43               	movwf	lcd_4bit_init@ret^0,c
  1514   001436                     l2330:
  1515                           
  1516                           ;ECU_layer/lcd/lcd.c: 48:     return ret;
  1517   001436  5043               	movf	lcd_4bit_init@ret^0,w,c
  1518   001438  0012               	return		;funcret
  1519   00143A                     __end_of_lcd_4bit_init:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _lcd_4bit_send_command *****************
  1523 ;; Defined at:
  1524 ;;		line 57 in file "ECU_layer/lcd/lcd.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  lcd             1   15[COMRAM] PTR const struct .
  1527 ;;		 -> lcd2(6), 
  1528 ;;  command         1   16[COMRAM] unsigned char 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  ret             1   17[COMRAM] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      unsigned char 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:        3 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 2
  1547 ;; This function calls:
  1548 ;;		_gpio_pin_write_logic
  1549 ;;		_lcd_send_4bit_enable_signal
  1550 ;;		_lcd_send_4bits
  1551 ;; This function is called by:
  1552 ;;		_lcd_4bit_init
  1553 ;;		_lcd_4bit_set_cursor
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text8
  1558   001868                     __ptext8:
  1559                           	callstack 0
  1560   001868                     _lcd_4bit_send_command:
  1561                           	callstack 26
  1562   001868                     
  1563                           ;ECU_layer/lcd/lcd.c: 61:     if (((void*)0) == lcd)
  1564   001868  503C               	movf	lcd_4bit_send_command@lcd^0,w,c
  1565   00186A  A4D8               	btfss	status,2,c
  1566   00186C  EF3A  F00C         	goto	u1361
  1567   001870  EF3C  F00C         	goto	u1360
  1568   001874                     u1361:
  1569   001874  EF40  F00C         	goto	l2238
  1570   001878                     u1360:
  1571   001878                     
  1572                           ;ECU_layer/lcd/lcd.c: 62:     {;ECU_layer/lcd/lcd.c: 63:         ret = (STD_ReturnType)0
      +                          x00;
  1573   001878  0E00               	movlw	0
  1574   00187A  6E3E               	movwf	lcd_4bit_send_command@ret^0,c
  1575                           
  1576                           ;ECU_layer/lcd/lcd.c: 64:     }
  1577   00187C  EF60  F00C         	goto	l2240
  1578   001880                     l2238:
  1579                           
  1580                           ;ECU_layer/lcd/lcd.c: 66:     {;ECU_layer/lcd/lcd.c: 67:         ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs),GPIO_LOW);
  1581   001880  C03C  F02D         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1582   001884  0E00               	movlw	0
  1583   001886  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1584   001888  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  1585   00188C  6E3E               	movwf	lcd_4bit_send_command@ret^0,c
  1586                           
  1587                           ;ECU_layer/lcd/lcd.c: 68:         ret = lcd_send_4bits(lcd, command >> 4);
  1588   00188E  C03C  F035         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1589   001892  383D               	swapf	lcd_4bit_send_command@command^0,w,c
  1590   001894  0B0F               	andlw	15
  1591   001896  6E36               	movwf	lcd_send_4bits@data_command^0,c
  1592   001898  EC9F  F00B         	call	_lcd_send_4bits	;wreg free
  1593   00189C  6E3E               	movwf	lcd_4bit_send_command@ret^0,c
  1594                           
  1595                           ;ECU_layer/lcd/lcd.c: 69:         ret = lcd_send_4bit_enable_signal(lcd);
  1596   00189E  C03C  F035         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable_signal@lcd
  1597   0018A2  EC62  F00C         	call	_lcd_send_4bit_enable_signal	;wreg free
  1598   0018A6  6E3E               	movwf	lcd_4bit_send_command@ret^0,c
  1599                           
  1600                           ;ECU_layer/lcd/lcd.c: 70:         ret = lcd_send_4bits(lcd, command);
  1601   0018A8  C03C  F035         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1602   0018AC  C03D  F036         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  1603   0018B0  EC9F  F00B         	call	_lcd_send_4bits	;wreg free
  1604   0018B4  6E3E               	movwf	lcd_4bit_send_command@ret^0,c
  1605                           
  1606                           ;ECU_layer/lcd/lcd.c: 71:         ret = lcd_send_4bit_enable_signal(lcd);
  1607   0018B6  C03C  F035         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable_signal@lcd
  1608   0018BA  EC62  F00C         	call	_lcd_send_4bit_enable_signal	;wreg free
  1609   0018BE  6E3E               	movwf	lcd_4bit_send_command@ret^0,c
  1610   0018C0                     l2240:
  1611                           
  1612                           ;ECU_layer/lcd/lcd.c: 73:     return ret;
  1613   0018C0  503E               	movf	lcd_4bit_send_command@ret^0,w,c
  1614   0018C2  0012               	return		;funcret
  1615   0018C4                     __end_of_lcd_4bit_send_command:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _lcd_send_4bits *****************
  1619 ;; Defined at:
  1620 ;;		line 219 in file "ECU_layer/lcd/lcd.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  lcd             1    8[COMRAM] PTR const struct .
  1623 ;;		 -> lcd2(6), 
  1624 ;;  data_command    1    9[COMRAM] unsigned char 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  i               2   13[COMRAM] int 
  1627 ;;  ret             1   12[COMRAM] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      unsigned char 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        7 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 1
  1644 ;; This function calls:
  1645 ;;		_gpio_pin_write_logic
  1646 ;; This function is called by:
  1647 ;;		_lcd_4bit_send_command
  1648 ;;		_lcd_4bit_send_data
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text9
  1653   00173E                     __ptext9:
  1654                           	callstack 0
  1655   00173E                     _lcd_send_4bits:
  1656                           	callstack 26
  1657   00173E                     
  1658                           ;ECU_layer/lcd/lcd.c: 223:     if (((void*)0) == lcd)
  1659   00173E  5035               	movf	lcd_send_4bits@lcd^0,w,c
  1660   001740  A4D8               	btfss	status,2,c
  1661   001742  EFA5  F00B         	goto	u1301
  1662   001746  EFA7  F00B         	goto	u1300
  1663   00174A                     u1301:
  1664   00174A  EFAB  F00B         	goto	l2192
  1665   00174E                     u1300:
  1666   00174E                     
  1667                           ;ECU_layer/lcd/lcd.c: 224:     {;ECU_layer/lcd/lcd.c: 225:         ret = (STD_ReturnType
      +                          )0x00;
  1668   00174E  0E00               	movlw	0
  1669   001750  6E39               	movwf	lcd_send_4bits@ret^0,c
  1670                           
  1671                           ;ECU_layer/lcd/lcd.c: 226:     }
  1672   001752  EFD5  F00B         	goto	l2204
  1673   001756                     l2192:
  1674                           
  1675                           ;ECU_layer/lcd/lcd.c: 228:     {;ECU_layer/lcd/lcd.c: 229:         for(int i = 0 ; i < 4
      +                           ; i++)
  1676   001756  0E00               	movlw	0
  1677   001758  6E3B               	movwf	(lcd_send_4bits@i+1)^0,c
  1678   00175A  0E00               	movlw	0
  1679   00175C  6E3A               	movwf	lcd_send_4bits@i^0,c
  1680   00175E                     l2198:
  1681                           
  1682                           ;ECU_layer/lcd/lcd.c: 230:         {;ECU_layer/lcd/lcd.c: 231:             ret = gpio_pi
      +                          n_write_logic(&(lcd->lcd_data[i]) , (data_command >> i) & 0x01);
  1683   00175E  5035               	movf	lcd_send_4bits@lcd^0,w,c
  1684   001760  243A               	addwf	lcd_send_4bits@i^0,w,c
  1685   001762  0F02               	addlw	2
  1686   001764  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1687   001766  C03A  F037         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  1688   00176A  C036  F038         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  1689   00176E  2A37               	incf	??_lcd_send_4bits^0,f,c
  1690   001770  EFBC  F00B         	goto	u1314
  1691   001774                     u1315:
  1692   001774  90D8               	bcf	status,0,c
  1693   001776  3238               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  1694   001778                     u1314:
  1695   001778  2E37               	decfsz	??_lcd_send_4bits^0,f,c
  1696   00177A  EFBA  F00B         	goto	u1315
  1697   00177E  5038               	movf	(??_lcd_send_4bits+1)^0,w,c
  1698   001780  0B01               	andlw	1
  1699   001782  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1700   001784  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  1701   001788  6E39               	movwf	lcd_send_4bits@ret^0,c
  1702   00178A                     
  1703                           ;ECU_layer/lcd/lcd.c: 232:         }
  1704   00178A  4A3A               	infsnz	lcd_send_4bits@i^0,f,c
  1705   00178C  2A3B               	incf	(lcd_send_4bits@i+1)^0,f,c
  1706   00178E  BE3B               	btfsc	(lcd_send_4bits@i+1)^0,7,c
  1707   001790  EFD3  F00B         	goto	u1321
  1708   001794  503B               	movf	(lcd_send_4bits@i+1)^0,w,c
  1709   001796  E109               	bnz	u1320
  1710   001798  0E04               	movlw	4
  1711   00179A  5C3A               	subwf	lcd_send_4bits@i^0,w,c
  1712   00179C  A0D8               	btfss	status,0,c
  1713   00179E  EFD3  F00B         	goto	u1321
  1714   0017A2  EFD5  F00B         	goto	u1320
  1715   0017A6                     u1321:
  1716   0017A6  EFAF  F00B         	goto	l2198
  1717   0017AA                     u1320:
  1718   0017AA                     l2204:
  1719                           
  1720                           ;ECU_layer/lcd/lcd.c: 234:     return ret;
  1721   0017AA  5039               	movf	lcd_send_4bits@ret^0,w,c
  1722   0017AC  0012               	return		;funcret
  1723   0017AE                     __end_of_lcd_send_4bits:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _lcd_send_4bit_enable_signal *****************
  1727 ;; Defined at:
  1728 ;;		line 243 in file "ECU_layer/lcd/lcd.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  lcd             1    8[COMRAM] PTR const struct .
  1731 ;;		 -> lcd2(6), 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  ret             1   10[COMRAM] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        3 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 1
  1750 ;; This function calls:
  1751 ;;		_gpio_pin_write_logic
  1752 ;; This function is called by:
  1753 ;;		_lcd_4bit_send_command
  1754 ;;		_lcd_4bit_send_data
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text10
  1759   0018C4                     __ptext10:
  1760                           	callstack 0
  1761   0018C4                     _lcd_send_4bit_enable_signal:
  1762                           	callstack 26
  1763   0018C4                     
  1764                           ;ECU_layer/lcd/lcd.c: 247:     if (((void*)0) == lcd)
  1765   0018C4  5035               	movf	lcd_send_4bit_enable_signal@lcd^0,w,c
  1766   0018C6  A4D8               	btfss	status,2,c
  1767   0018C8  EF68  F00C         	goto	u1331
  1768   0018CC  EF6A  F00C         	goto	u1330
  1769   0018D0                     u1331:
  1770   0018D0  EF6E  F00C         	goto	l2212
  1771   0018D4                     u1330:
  1772   0018D4                     
  1773                           ;ECU_layer/lcd/lcd.c: 248:     {;ECU_layer/lcd/lcd.c: 249:         ret = (STD_ReturnType
      +                          )0x00;
  1774   0018D4  0E00               	movlw	0
  1775   0018D6  6E37               	movwf	lcd_send_4bit_enable_signal@ret^0,c
  1776                           
  1777                           ;ECU_layer/lcd/lcd.c: 250:     }
  1778   0018D8  EF82  F00C         	goto	l2218
  1779   0018DC                     l2212:
  1780   0018DC  2835               	incf	lcd_send_4bit_enable_signal@lcd^0,w,c
  1781   0018DE  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1782   0018E0  0E01               	movlw	1
  1783   0018E2  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1784   0018E4  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  1785   0018E8                     
  1786                           ;ECU_layer/lcd/lcd.c: 254:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1787   0018E8  0E03               	movlw	3
  1788   0018EA  6E36               	movwf	??_lcd_send_4bit_enable_signal^0,c
  1789   0018EC  0E98               	movlw	152
  1790   0018EE                     u2217:
  1791   0018EE  2EE8               	decfsz	wreg,f,c
  1792   0018F0  D7FE               	bra	u2217
  1793   0018F2  2E36               	decfsz	??_lcd_send_4bit_enable_signal^0,f,c
  1794   0018F4  D7FC               	bra	u2217
  1795   0018F6                     
  1796                           ;ECU_layer/lcd/lcd.c: 255:         ret = gpio_pin_write_logic(&(lcd->lcd_en) , GPIO_LOW)
      +                          ;
  1797   0018F6  2835               	incf	lcd_send_4bit_enable_signal@lcd^0,w,c
  1798   0018F8  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1799   0018FA  0E00               	movlw	0
  1800   0018FC  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1801   0018FE  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  1802   001902  6E37               	movwf	lcd_send_4bit_enable_signal@ret^0,c
  1803   001904                     l2218:
  1804                           
  1805                           ;ECU_layer/lcd/lcd.c: 257:     return ret;
  1806   001904  5037               	movf	lcd_send_4bit_enable_signal@ret^0,w,c
  1807   001906  0012               	return		;funcret
  1808   001908                     __end_of_lcd_send_4bit_enable_signal:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _keypad_initialize *****************
  1812 ;; Defined at:
  1813 ;;		line 23 in file "ECU_layer/Keypad/keypad.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  _keypad_conf    1   11[COMRAM] PTR const struct .
  1816 ;;		 -> keypad(8), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  j               2   15[COMRAM] int 
  1819 ;;  i               2   13[COMRAM] int 
  1820 ;;  ret             1   12[COMRAM] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        6 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 2
  1837 ;; This function calls:
  1838 ;;		_gpio_pin_Initialization
  1839 ;; This function is called by:
  1840 ;;		_application_initializ
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text11
  1845   001640                     __ptext11:
  1846                           	callstack 0
  1847   001640                     _keypad_initialize:
  1848                           	callstack 27
  1849   001640                     
  1850                           ;ECU_layer/Keypad/keypad.c: 27:     if (((void*)0) == _keypad_config)
  1851   001640  5038               	movf	keypad_initialize@_keypad_config^0,w,c
  1852   001642  A4D8               	btfss	status,2,c
  1853   001644  EF26  F00B         	goto	u1411
  1854   001648  EF28  F00B         	goto	u1410
  1855   00164C                     u1411:
  1856   00164C  EF2C  F00B         	goto	l2262
  1857   001650                     u1410:
  1858   001650                     
  1859                           ;ECU_layer/Keypad/keypad.c: 28:     {;ECU_layer/Keypad/keypad.c: 29:         ret = (STD_
      +                          ReturnType)0x00;
  1860   001650  0E00               	movlw	0
  1861   001652  6E39               	movwf	keypad_initialize@ret^0,c
  1862                           
  1863                           ;ECU_layer/Keypad/keypad.c: 30:     }
  1864   001654  EF60  F00B         	goto	l2286
  1865   001658                     l2262:
  1866                           
  1867                           ;ECU_layer/Keypad/keypad.c: 32:     {;ECU_layer/Keypad/keypad.c: 33:         for(int i =
      +                           0 ; i < 4 ; i++)
  1868   001658  0E00               	movlw	0
  1869   00165A  6E3B               	movwf	(keypad_initialize@i+1)^0,c
  1870   00165C  0E00               	movlw	0
  1871   00165E  6E3A               	movwf	keypad_initialize@i^0,c
  1872   001660                     l2268:
  1873   001660  5038               	movf	keypad_initialize@_keypad_config^0,w,c
  1874   001662  243A               	addwf	keypad_initialize@i^0,w,c
  1875   001664  6E35               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1876   001666  ECD7  F00B         	call	_gpio_pin_Initialization	;wreg free
  1877   00166A                     
  1878                           ;ECU_layer/Keypad/keypad.c: 36:         }
  1879   00166A  4A3A               	infsnz	keypad_initialize@i^0,f,c
  1880   00166C  2A3B               	incf	(keypad_initialize@i+1)^0,f,c
  1881   00166E  BE3B               	btfsc	(keypad_initialize@i+1)^0,7,c
  1882   001670  EF43  F00B         	goto	u1421
  1883   001674  503B               	movf	(keypad_initialize@i+1)^0,w,c
  1884   001676  E109               	bnz	u1420
  1885   001678  0E04               	movlw	4
  1886   00167A  5C3A               	subwf	keypad_initialize@i^0,w,c
  1887   00167C  A0D8               	btfss	status,0,c
  1888   00167E  EF43  F00B         	goto	u1421
  1889   001682  EF45  F00B         	goto	u1420
  1890   001686                     u1421:
  1891   001686  EF30  F00B         	goto	l2268
  1892   00168A                     u1420:
  1893   00168A                     
  1894                           ;ECU_layer/Keypad/keypad.c: 38:         for(int j = 0 ; j < 4 ; j++)
  1895   00168A  0E00               	movlw	0
  1896   00168C  6E3D               	movwf	(keypad_initialize@j+1)^0,c
  1897   00168E  0E00               	movlw	0
  1898   001690  6E3C               	movwf	keypad_initialize@j^0,c
  1899   001692                     l2280:
  1900                           
  1901                           ;ECU_layer/Keypad/keypad.c: 39:         {;ECU_layer/Keypad/keypad.c: 40:         ret = g
      +                          pio_pin_Initialization(&(_keypad_config->keypad_colums[j]));
  1902   001692  5038               	movf	keypad_initialize@_keypad_config^0,w,c
  1903   001694  243C               	addwf	keypad_initialize@j^0,w,c
  1904   001696  0F04               	addlw	4
  1905   001698  6E35               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1906   00169A  ECD7  F00B         	call	_gpio_pin_Initialization	;wreg free
  1907   00169E  6E39               	movwf	keypad_initialize@ret^0,c
  1908   0016A0                     
  1909                           ;ECU_layer/Keypad/keypad.c: 41:         }
  1910   0016A0  4A3C               	infsnz	keypad_initialize@j^0,f,c
  1911   0016A2  2A3D               	incf	(keypad_initialize@j+1)^0,f,c
  1912   0016A4  BE3D               	btfsc	(keypad_initialize@j+1)^0,7,c
  1913   0016A6  EF5E  F00B         	goto	u1431
  1914   0016AA  503D               	movf	(keypad_initialize@j+1)^0,w,c
  1915   0016AC  E109               	bnz	u1430
  1916   0016AE  0E04               	movlw	4
  1917   0016B0  5C3C               	subwf	keypad_initialize@j^0,w,c
  1918   0016B2  A0D8               	btfss	status,0,c
  1919   0016B4  EF5E  F00B         	goto	u1431
  1920   0016B8  EF60  F00B         	goto	u1430
  1921   0016BC                     u1431:
  1922   0016BC  EF49  F00B         	goto	l2280
  1923   0016C0                     u1430:
  1924   0016C0                     l2286:
  1925                           
  1926                           ;ECU_layer/Keypad/keypad.c: 44:     return ret;
  1927   0016C0  5039               	movf	keypad_initialize@ret^0,w,c
  1928   0016C2  0012               	return		;funcret
  1929   0016C4                     __end_of_keypad_initialize:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _gpio_pin_Initialization *****************
  1933 ;; Defined at:
  1934 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1937 ;;		 -> lcd2$lcd_data(4), lcd2(6), keypad$keypad_colums(4), keypad$keypad_rows(4), 
  1938 ;;		 -> keypad(8), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_
      +pin_2(1), 
  1939 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  ret             1   10[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      unsigned char 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        3 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 1
  1958 ;; This function calls:
  1959 ;;		_gpio_pin_direction_init
  1960 ;;		_gpio_pin_write_logic
  1961 ;; This function is called by:
  1962 ;;		_keypad_initialize
  1963 ;;		_lcd_4bit_init
  1964 ;;		_seg_initialization
  1965 ;;		_ecu_dc_motor_initializ
  1966 ;;		_lcd_8bit_init
  1967 ;;		_ecu_led_initializ
  1968 ;;		_ecu_relay_initializ
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text12
  1973   0017AE                     __ptext12:
  1974                           	callstack 0
  1975   0017AE                     _gpio_pin_Initialization:
  1976                           	callstack 27
  1977   0017AE                     
  1978                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
  1979   0017AE  5035               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1980   0017B0  B4D8               	btfsc	status,2,c
  1981   0017B2  EFDD  F00B         	goto	u1341
  1982   0017B6  EFDF  F00B         	goto	u1340
  1983   0017BA                     u1341:
  1984   0017BA  EFEF  F00B         	goto	l2226
  1985   0017BE                     u1340:
  1986   0017BE  5035               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1987   0017C0  6ED9               	movwf	fsr2l,c
  1988   0017C2  6ADA               	clrf	fsr2h,c
  1989   0017C4  30DF               	rrcf	223,w,c
  1990   0017C6  32E8               	rrcf	wreg,f,c
  1991   0017C8  32E8               	rrcf	wreg,f,c
  1992   0017CA  0B07               	andlw	7
  1993   0017CC  6E36               	movwf	??_gpio_pin_Initialization^0,c
  1994   0017CE  0E07               	movlw	7
  1995   0017D0  6436               	cpfsgt	??_gpio_pin_Initialization^0,c
  1996   0017D2  EFED  F00B         	goto	u1351
  1997   0017D6  EFEF  F00B         	goto	u1350
  1998   0017DA                     u1351:
  1999   0017DA  EFF3  F00B         	goto	l2228
  2000   0017DE                     u1350:
  2001   0017DE                     l2226:
  2002                           
  2003                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
  2004   0017DE  0E00               	movlw	0
  2005   0017E0  6E37               	movwf	gpio_pin_Initialization@ret^0,c
  2006                           
  2007                           ;MCAL_layer/GPIO/gpio.c: 154:     }
  2008   0017E2  EF04  F00C         	goto	l2230
  2009   0017E6                     l2228:
  2010                           
  2011                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
  2012   0017E6  C035  F02D         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
  2013   0017EA  EC0F  F008         	call	_gpio_pin_direction_init	;wreg free
  2014   0017EE  6E37               	movwf	gpio_pin_Initialization@ret^0,c
  2015                           
  2016                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
  2017   0017F0  C035  F02D         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
  2018   0017F4  5035               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  2019   0017F6  6ED9               	movwf	fsr2l,c
  2020   0017F8  6ADA               	clrf	fsr2h,c
  2021   0017FA  0E00               	movlw	0
  2022   0017FC  BEDF               	btfsc	indf2,7,c
  2023   0017FE  0E01               	movlw	1
  2024   001800  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  2025   001802  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
  2026   001806  6E37               	movwf	gpio_pin_Initialization@ret^0,c
  2027   001808                     l2230:
  2028                           
  2029                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
  2030   001808  5037               	movf	gpio_pin_Initialization@ret^0,w,c
  2031   00180A  0012               	return		;funcret
  2032   00180C                     __end_of_gpio_pin_Initialization:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _gpio_pin_write_logic *****************
  2036 ;; Defined at:
  2037 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2040 ;;		 -> lcd2$lcd_data(4), lcd2(6), keypad$keypad_colums(4), keypad$keypad_rows(4), 
  2041 ;;		 -> keypad(8), ecu_relay_turn_off@relay_init(1), ecu_relay_turn_on@relay_init(1), ecu_relay_initializ@relay_init(1),
      + 
  2042 ;;		 -> ecu_led_turn_off@_pin_config(1), ecu_led_turn_on@_pin_config(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_
      +stop@dc_motor_pin_2(1), 
  2043 ;;		 -> ecu_dc_motor_stop@dc_motor_pin_1(1), ecu_dc_motor_move_left@dc_motor_pin_2(1), ecu_dc_motor_move_left@dc_motor_p
      +in_1(1), ecu_dc_motor_move_right@dc_motor_pin_2(1), 
  2044 ;;		 -> ecu_dc_motor_move_right@dc_motor_pin_1(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_m
      +otor_pin_1(1), 
  2045 ;;  logic           1    1[COMRAM] enum E2981
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  ret             1    7[COMRAM] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      unsigned char 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_keypad_get_value
  2067 ;;		_lcd_4bit_send_command
  2068 ;;		_lcd_4bit_send_data
  2069 ;;		_lcd_send_4bits
  2070 ;;		_lcd_send_4bit_enable_signal
  2071 ;;		_gpio_pin_Initialization
  2072 ;;		_seg_write_number
  2073 ;;		_ecu_dc_motor_move_right
  2074 ;;		_ecu_dc_motor_move_left
  2075 ;;		_ecu_dc_motor_stop
  2076 ;;		_lcd_8bit_send_command
  2077 ;;		_lcd_8bit_send_data
  2078 ;;		_lcd_send_8bit_enable_signal
  2079 ;;		_ecu_led_turn_on
  2080 ;;		_ecu_led_turn_off
  2081 ;;		_ecu_relay_turn_on
  2082 ;;		_ecu_relay_turn_off
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text13
  2087   001130                     __ptext13:
  2088                           	callstack 0
  2089   001130                     _gpio_pin_write_logic:
  2090                           	callstack 26
  2091   001130                     
  2092                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
  2093   001130  0E01               	movlw	1
  2094   001132  6E34               	movwf	gpio_pin_write_logic@ret^0,c
  2095                           
  2096                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  2097   001134  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2098   001136  B4D8               	btfsc	status,2,c
  2099   001138  EFA0  F008         	goto	u1211
  2100   00113C  EFA2  F008         	goto	u1210
  2101   001140                     u1211:
  2102   001140  EFB2  F008         	goto	l2152
  2103   001144                     u1210:
  2104   001144  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2105   001146  6ED9               	movwf	fsr2l,c
  2106   001148  6ADA               	clrf	fsr2h,c
  2107   00114A  30DF               	rrcf	223,w,c
  2108   00114C  32E8               	rrcf	wreg,f,c
  2109   00114E  32E8               	rrcf	wreg,f,c
  2110   001150  0B07               	andlw	7
  2111   001152  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2112   001154  0E07               	movlw	7
  2113   001156  642F               	cpfsgt	??_gpio_pin_write_logic^0,c
  2114   001158  EFB0  F008         	goto	u1221
  2115   00115C  EFB2  F008         	goto	u1220
  2116   001160                     u1221:
  2117   001160  EF09  F009         	goto	l2160
  2118   001164                     u1220:
  2119   001164                     l2152:
  2120                           
  2121                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
  2122   001164  0E00               	movlw	0
  2123   001166  6E34               	movwf	gpio_pin_write_logic@ret^0,c
  2124                           
  2125                           ;MCAL_layer/GPIO/gpio.c: 82:     }
  2126   001168  EF1E  F009         	goto	l2162
  2127   00116C                     l2154:
  2128                           
  2129                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  2130   00116C  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2131   00116E  6ED9               	movwf	fsr2l,c
  2132   001170  6ADA               	clrf	fsr2h,c
  2133   001172  30DF               	rrcf	223,w,c
  2134   001174  32E8               	rrcf	wreg,f,c
  2135   001176  32E8               	rrcf	wreg,f,c
  2136   001178  0B07               	andlw	7
  2137   00117A  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2138   00117C  0E01               	movlw	1
  2139   00117E  6E30               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2140   001180  2A2F               	incf	??_gpio_pin_write_logic^0,f,c
  2141   001182  EFC5  F008         	goto	u1234
  2142   001186                     u1235:
  2143   001186  90D8               	bcf	status,0,c
  2144   001188  3630               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2145   00118A                     u1234:
  2146   00118A  2E2F               	decfsz	??_gpio_pin_write_logic^0,f,c
  2147   00118C  EFC3  F008         	goto	u1235
  2148   001190  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2149   001192  0AFF               	xorlw	255
  2150   001194  6E31               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2151   001196  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2152   001198  6ED9               	movwf	fsr2l,c
  2153   00119A  6ADA               	clrf	fsr2h,c
  2154   00119C  50DF               	movf	223,w,c
  2155   00119E  0B07               	andlw	7
  2156   0011A0  0D02               	mullw	2
  2157   0011A2  50F3               	movf	243,w,c
  2158   0011A4  0F0B               	addlw	low _lat_registers
  2159   0011A6  6ED9               	movwf	fsr2l,c
  2160   0011A8  6ADA               	clrf	fsr2h,c
  2161   0011AA  CFDE F032          	movff	postinc2,??_gpio_pin_write_logic+3
  2162   0011AE  CFDD F033          	movff	postdec2,??_gpio_pin_write_logic+4
  2163   0011B2  C032  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2164   0011B6  C033  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2165   0011BA  5031               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2166   0011BC  16DF               	andwf	indf2,f,c
  2167                           
  2168                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
  2169   0011BE  EF1E  F009         	goto	l2162
  2170   0011C2                     l2156:
  2171                           
  2172                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  2173   0011C2  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2174   0011C4  6ED9               	movwf	fsr2l,c
  2175   0011C6  6ADA               	clrf	fsr2h,c
  2176   0011C8  30DF               	rrcf	223,w,c
  2177   0011CA  32E8               	rrcf	wreg,f,c
  2178   0011CC  32E8               	rrcf	wreg,f,c
  2179   0011CE  0B07               	andlw	7
  2180   0011D0  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2181   0011D2  0E01               	movlw	1
  2182   0011D4  6E30               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2183   0011D6  2A2F               	incf	??_gpio_pin_write_logic^0,f,c
  2184   0011D8  EFF0  F008         	goto	u1244
  2185   0011DC                     u1245:
  2186   0011DC  90D8               	bcf	status,0,c
  2187   0011DE  3630               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2188   0011E0                     u1244:
  2189   0011E0  2E2F               	decfsz	??_gpio_pin_write_logic^0,f,c
  2190   0011E2  EFEE  F008         	goto	u1245
  2191   0011E6  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2192   0011E8  6ED9               	movwf	fsr2l,c
  2193   0011EA  6ADA               	clrf	fsr2h,c
  2194   0011EC  50DF               	movf	223,w,c
  2195   0011EE  0B07               	andlw	7
  2196   0011F0  0D02               	mullw	2
  2197   0011F2  50F3               	movf	243,w,c
  2198   0011F4  0F0B               	addlw	low _lat_registers
  2199   0011F6  6ED9               	movwf	fsr2l,c
  2200   0011F8  6ADA               	clrf	fsr2h,c
  2201   0011FA  CFDE F031          	movff	postinc2,??_gpio_pin_write_logic+2
  2202   0011FE  CFDD F032          	movff	postdec2,??_gpio_pin_write_logic+3
  2203   001202  C031  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2204   001206  C032  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2205   00120A  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2206   00120C  12DF               	iorwf	indf2,f,c
  2207                           
  2208                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  2209   00120E  EF1E  F009         	goto	l2162
  2210   001212                     l2160:
  2211   001212  502E               	movf	gpio_pin_write_logic@logic^0,w,c
  2212   001214  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2213   001216  6A30               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2214                           
  2215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2216                           ; Switch size 1, requested type "simple"
  2217                           ; Number of cases is 1, Range of values is 0 to 0
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte            4     3 (average)
  2221                           ;	Chosen strategy is simple_byte
  2222   001218  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2223   00121A  0A00               	xorlw	0	; case 0
  2224   00121C  B4D8               	btfsc	status,2,c
  2225   00121E  EF13  F009         	goto	l2944
  2226   001222  EFB2  F008         	goto	l2152
  2227   001226                     l2944:
  2228                           
  2229                           ; Switch size 1, requested type "simple"
  2230                           ; Number of cases is 2, Range of values is 0 to 1
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte            7     4 (average)
  2234                           ;	Chosen strategy is simple_byte
  2235   001226  502F               	movf	??_gpio_pin_write_logic^0,w,c
  2236   001228  0A00               	xorlw	0	; case 0
  2237   00122A  B4D8               	btfsc	status,2,c
  2238   00122C  EFB6  F008         	goto	l2154
  2239   001230  0A01               	xorlw	1	; case 1
  2240   001232  B4D8               	btfsc	status,2,c
  2241   001234  EFE1  F008         	goto	l2156
  2242   001238  EFB2  F008         	goto	l2152
  2243   00123C                     l2162:
  2244                           
  2245                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  2246   00123C  5034               	movf	gpio_pin_write_logic@ret^0,w,c
  2247   00123E  0012               	return		;funcret
  2248   001240                     __end_of_gpio_pin_write_logic:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _gpio_pin_direction_init *****************
  2252 ;; Defined at:
  2253 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2256 ;;		 -> lcd2$lcd_data(4), lcd2(6), keypad$keypad_colums(4), keypad$keypad_rows(4), 
  2257 ;;		 -> keypad(8), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_
      +pin_2(1), 
  2258 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  ret             1    6[COMRAM] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      unsigned char 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2270 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;Total ram usage:        7 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_gpio_pin_Initialization
  2280 ;;		_ecu_button_init
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text14
  2285   00101E                     __ptext14:
  2286                           	callstack 0
  2287   00101E                     _gpio_pin_direction_init:
  2288                           	callstack 27
  2289   00101E                     
  2290                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  2291   00101E  0E01               	movlw	1
  2292   001020  6E33               	movwf	gpio_pin_direction_init@ret^0,c
  2293                           
  2294                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  2295   001022  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2296   001024  B4D8               	btfsc	status,2,c
  2297   001026  EF17  F008         	goto	u1251
  2298   00102A  EF19  F008         	goto	u1250
  2299   00102E                     u1251:
  2300   00102E  EF29  F008         	goto	l2174
  2301   001032                     u1250:
  2302   001032  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2303   001034  6ED9               	movwf	fsr2l,c
  2304   001036  6ADA               	clrf	fsr2h,c
  2305   001038  30DF               	rrcf	223,w,c
  2306   00103A  32E8               	rrcf	wreg,f,c
  2307   00103C  32E8               	rrcf	wreg,f,c
  2308   00103E  0B07               	andlw	7
  2309   001040  6E2E               	movwf	??_gpio_pin_direction_init^0,c
  2310   001042  0E07               	movlw	7
  2311   001044  642E               	cpfsgt	??_gpio_pin_direction_init^0,c
  2312   001046  EF27  F008         	goto	u1261
  2313   00104A  EF29  F008         	goto	u1260
  2314   00104E                     u1261:
  2315   00104E  EF80  F008         	goto	l2182
  2316   001052                     u1260:
  2317   001052                     l2174:
  2318                           
  2319                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  2320   001052  0E00               	movlw	0
  2321   001054  6E33               	movwf	gpio_pin_direction_init@ret^0,c
  2322                           
  2323                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  2324   001056  EF96  F008         	goto	l2184
  2325   00105A                     l2176:
  2326                           
  2327                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  2328   00105A  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2329   00105C  6ED9               	movwf	fsr2l,c
  2330   00105E  6ADA               	clrf	fsr2h,c
  2331   001060  30DF               	rrcf	223,w,c
  2332   001062  32E8               	rrcf	wreg,f,c
  2333   001064  32E8               	rrcf	wreg,f,c
  2334   001066  0B07               	andlw	7
  2335   001068  6E2E               	movwf	??_gpio_pin_direction_init^0,c
  2336   00106A  0E01               	movlw	1
  2337   00106C  6E2F               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2338   00106E  2A2E               	incf	??_gpio_pin_direction_init^0,f,c
  2339   001070  EF3C  F008         	goto	u1274
  2340   001074                     u1275:
  2341   001074  90D8               	bcf	status,0,c
  2342   001076  362F               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2343   001078                     u1274:
  2344   001078  2E2E               	decfsz	??_gpio_pin_direction_init^0,f,c
  2345   00107A  EF3A  F008         	goto	u1275
  2346   00107E  502F               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2347   001080  0AFF               	xorlw	255
  2348   001082  6E30               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2349   001084  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2350   001086  6ED9               	movwf	fsr2l,c
  2351   001088  6ADA               	clrf	fsr2h,c
  2352   00108A  50DF               	movf	223,w,c
  2353   00108C  0B07               	andlw	7
  2354   00108E  0D02               	mullw	2
  2355   001090  50F3               	movf	243,w,c
  2356   001092  0F15               	addlw	low _tris_registers
  2357   001094  6ED9               	movwf	fsr2l,c
  2358   001096  6ADA               	clrf	fsr2h,c
  2359   001098  CFDE F031          	movff	postinc2,??_gpio_pin_direction_init+3
  2360   00109C  CFDD F032          	movff	postdec2,??_gpio_pin_direction_init+4
  2361   0010A0  C031  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  2362   0010A4  C032  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  2363   0010A8  5030               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2364   0010AA  16DF               	andwf	indf2,f,c
  2365                           
  2366                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  2367   0010AC  EF96  F008         	goto	l2184
  2368   0010B0                     l2178:
  2369                           
  2370                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  2371   0010B0  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2372   0010B2  6ED9               	movwf	fsr2l,c
  2373   0010B4  6ADA               	clrf	fsr2h,c
  2374   0010B6  30DF               	rrcf	223,w,c
  2375   0010B8  32E8               	rrcf	wreg,f,c
  2376   0010BA  32E8               	rrcf	wreg,f,c
  2377   0010BC  0B07               	andlw	7
  2378   0010BE  6E2E               	movwf	??_gpio_pin_direction_init^0,c
  2379   0010C0  0E01               	movlw	1
  2380   0010C2  6E2F               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2381   0010C4  2A2E               	incf	??_gpio_pin_direction_init^0,f,c
  2382   0010C6  EF67  F008         	goto	u1284
  2383   0010CA                     u1285:
  2384   0010CA  90D8               	bcf	status,0,c
  2385   0010CC  362F               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2386   0010CE                     u1284:
  2387   0010CE  2E2E               	decfsz	??_gpio_pin_direction_init^0,f,c
  2388   0010D0  EF65  F008         	goto	u1285
  2389   0010D4  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2390   0010D6  6ED9               	movwf	fsr2l,c
  2391   0010D8  6ADA               	clrf	fsr2h,c
  2392   0010DA  50DF               	movf	223,w,c
  2393   0010DC  0B07               	andlw	7
  2394   0010DE  0D02               	mullw	2
  2395   0010E0  50F3               	movf	243,w,c
  2396   0010E2  0F15               	addlw	low _tris_registers
  2397   0010E4  6ED9               	movwf	fsr2l,c
  2398   0010E6  6ADA               	clrf	fsr2h,c
  2399   0010E8  CFDE F030          	movff	postinc2,??_gpio_pin_direction_init+2
  2400   0010EC  CFDD F031          	movff	postdec2,??_gpio_pin_direction_init+3
  2401   0010F0  C030  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  2402   0010F4  C031  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  2403   0010F8  502F               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2404   0010FA  12DF               	iorwf	indf2,f,c
  2405                           
  2406                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  2407   0010FC  EF96  F008         	goto	l2184
  2408   001100                     l2182:
  2409   001100  502D               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2410   001102  6ED9               	movwf	fsr2l,c
  2411   001104  6ADA               	clrf	fsr2h,c
  2412   001106  BCDF               	btfsc	indf2,6,c
  2413   001108  EF88  F008         	goto	u1291
  2414   00110C  EF8B  F008         	goto	u1290
  2415   001110                     u1291:
  2416   001110  0E01               	movlw	1
  2417   001112  EF8C  F008         	goto	u1296
  2418   001116                     u1290:
  2419   001116  0E00               	movlw	0
  2420   001118                     u1296:
  2421                           
  2422                           ; Switch size 1, requested type "simple"
  2423                           ; Number of cases is 2, Range of values is 0 to 1
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            7     4 (average)
  2427                           ;	Chosen strategy is simple_byte
  2428   001118  0A00               	xorlw	0	; case 0
  2429   00111A  B4D8               	btfsc	status,2,c
  2430   00111C  EF2D  F008         	goto	l2176
  2431   001120  0A01               	xorlw	1	; case 1
  2432   001122  B4D8               	btfsc	status,2,c
  2433   001124  EF58  F008         	goto	l2178
  2434   001128  EF29  F008         	goto	l2174
  2435   00112C                     l2184:
  2436                           
  2437                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  2438   00112C  5033               	movf	gpio_pin_direction_init@ret^0,w,c
  2439   00112E  0012               	return		;funcret
  2440   001130                     __end_of_gpio_pin_direction_init:
  2441                           	callstack 0
  2442                           
  2443                           	psect	rparam
  2444   000000                     
  2445                           	psect	config
  2446                           
  2447                           ; Padding undefined space
  2448   300000                     	org	3145728
  2449   300000  FF                 	db	255
  2450                           
  2451                           ;Config register CONFIG1H @ 0x300001
  2452                           ;	Oscillator Selection bits
  2453                           ;	OSC = HS, HS oscillator
  2454                           ;	Fail-Safe Clock Monitor Enable bit
  2455                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2456                           ;	Internal/External Oscillator Switchover bit
  2457                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2458   300001                     	org	3145729
  2459   300001  02                 	db	2
  2460                           
  2461                           ;Config register CONFIG2L @ 0x300002
  2462                           ;	Power-up Timer Enable bit
  2463                           ;	PWRT = OFF, PWRT disabled
  2464                           ;	Brown-out Reset Enable bits
  2465                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2466                           ;	Brown Out Reset Voltage bits
  2467                           ;	BORV = 3, Minimum setting
  2468   300002                     	org	3145730
  2469   300002  1F                 	db	31
  2470                           
  2471                           ;Config register CONFIG2H @ 0x300003
  2472                           ;	Watchdog Timer Enable bit
  2473                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2474                           ;	Watchdog Timer Postscale Select bits
  2475                           ;	WDTPS = 32768, 1:32768
  2476   300003                     	org	3145731
  2477   300003  1E                 	db	30
  2478                           
  2479                           ; Padding undefined space
  2480   300004                     	org	3145732
  2481   300004  FF                 	db	255
  2482                           
  2483                           ;Config register CONFIG3H @ 0x300005
  2484                           ;	CCP2 MUX bit
  2485                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2486                           ;	PORTB A/D Enable bit
  2487                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2488                           ;	Low-Power Timer1 Oscillator Enable bit
  2489                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2490                           ;	MCLR Pin Enable bit
  2491                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2492   300005                     	org	3145733
  2493   300005  81                 	db	129
  2494                           
  2495                           ;Config register CONFIG4L @ 0x300006
  2496                           ;	Stack Full/Underflow Reset Enable bit
  2497                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2498                           ;	Single-Supply ICSP Enable bit
  2499                           ;	LVP = OFF, Single-Supply ICSP disabled
  2500                           ;	Extended Instruction Set Enable bit
  2501                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2502                           ;	Background Debugger Enable bit
  2503                           ;	DEBUG = 0x1, unprogrammed default
  2504   300006                     	org	3145734
  2505   300006  81                 	db	129
  2506                           
  2507                           ; Padding undefined space
  2508   300007                     	org	3145735
  2509   300007  FF                 	db	255
  2510                           
  2511                           ;Config register CONFIG5L @ 0x300008
  2512                           ;	Code Protection bit
  2513                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2514                           ;	Code Protection bit
  2515                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2516                           ;	Code Protection bit
  2517                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2518                           ;	Code Protection bit
  2519                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2520   300008                     	org	3145736
  2521   300008  0F                 	db	15
  2522                           
  2523                           ;Config register CONFIG5H @ 0x300009
  2524                           ;	Boot Block Code Protection bit
  2525                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2526                           ;	Data EEPROM Code Protection bit
  2527                           ;	CPD = OFF, Data EEPROM not code-protected
  2528   300009                     	org	3145737
  2529   300009  C0                 	db	192
  2530                           
  2531                           ;Config register CONFIG6L @ 0x30000A
  2532                           ;	Write Protection bit
  2533                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2534                           ;	Write Protection bit
  2535                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2536                           ;	Write Protection bit
  2537                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2538                           ;	Write Protection bit
  2539                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2540   30000A                     	org	3145738
  2541   30000A  0F                 	db	15
  2542                           
  2543                           ;Config register CONFIG6H @ 0x30000B
  2544                           ;	Configuration Register Write Protection bit
  2545                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2546                           ;	Boot Block Write Protection bit
  2547                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2548                           ;	Data EEPROM Write Protection bit
  2549                           ;	WRTD = OFF, Data EEPROM not write-protected
  2550   30000B                     	org	3145739
  2551   30000B  E0                 	db	224
  2552                           
  2553                           ;Config register CONFIG7L @ 0x30000C
  2554                           ;	Table Read Protection bit
  2555                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2556                           ;	Table Read Protection bit
  2557                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2558                           ;	Table Read Protection bit
  2559                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2560                           ;	Table Read Protection bit
  2561                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2562   30000C                     	org	3145740
  2563   30000C  0F                 	db	15
  2564                           
  2565                           ;Config register CONFIG7H @ 0x30000D
  2566                           ;	Boot Block Table Read Protection bit
  2567                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2568   30000D                     	org	3145741
  2569   30000D  40                 	db	64
  2570                           tosu	equ	0xFFF
  2571                           tosh	equ	0xFFE
  2572                           tosl	equ	0xFFD
  2573                           stkptr	equ	0xFFC
  2574                           pclatu	equ	0xFFB
  2575                           pclath	equ	0xFFA
  2576                           pcl	equ	0xFF9
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           indf0	equ	0xFEF
  2584                           postinc0	equ	0xFEE
  2585                           postdec0	equ	0xFED
  2586                           preinc0	equ	0xFEC
  2587                           plusw0	equ	0xFEB
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           indf1	equ	0xFE7
  2592                           postinc1	equ	0xFE6
  2593                           postdec1	equ	0xFE5
  2594                           preinc1	equ	0xFE4
  2595                           plusw1	equ	0xFE3
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           bsr	equ	0xFE0
  2599                           indf2	equ	0xFDF
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           preinc2	equ	0xFDC
  2603                           plusw2	equ	0xFDB
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    16
    Data        44
    BSS         17
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      90
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), keypad$keypad_rows(COMRAM[4]), lcd2(COMRAM[6]), 
		 -> lcd2$lcd_data(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), keypad$keypad_rows(COMRAM[4]), lcd2(COMRAM[6]), 
		 -> lcd2$lcd_data(COMRAM[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), 

    gpio_pin_read_logic@logic	PTR enum E2981 size(1) Largest target is 1
		 -> ecu_button_read_state@pin_logic_status(COMRAM[1]), keypad_get_value@colum_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), keypad(COMRAM[8]), keypad$keypad_colums(COMRAM[4]), 
		 -> keypad$keypad_rows(COMRAM[4]), lcd2(COMRAM[6]), lcd2$lcd_data(COMRAM[4]), 

    keypad_get_value@_keypad_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> value(COMRAM[1]), 

    keypad_initialize@_keypad_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_init@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), STR_5(CODE[8]), value(COMRAM[1]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_send_4bit_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1338$buffer	PTR unsigned char  size(2) Largest target is 0

    S1338$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_data->_lcd_send_4bits
    _keypad_get_value->_gpio_pin_write_logic
    _application_initializ->_lcd_4bit_init
    _lcd_4bit_init->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_send_4bit_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_Initialization
    _gpio_pin_Initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69625
              _application_initializ
                   _keypad_get_value
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   34143
                                             22 COMRAM     6     1      5
                 _lcd_4bit_send_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   17551
                                             18 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_data                                   3     1      2   15151
                                             15 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_send_4bit_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     9      2    5653
                                              8 COMRAM    11     9      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     460
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0   29829
                  _keypad_initialize
                      _lcd_4bit_init
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_init                                        5     4      1   23407
                                             18 COMRAM     5     4      1
            _gpio_pin_Initialization
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   16823
                                             15 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_send_4bit_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       7     5      2    5224
                                              8 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit_enable_signal                          3     2      1    4831
                                              8 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                    6     5      1    6422
                                             11 COMRAM     6     5      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    6118
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4435
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ
     _keypad_initialize
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
     _lcd_4bit_init
       _gpio_pin_Initialization
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_send_4bit_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_data
       _gpio_pin_write_logic
       _lcd_send_4bit_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      5A       1       70.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      39        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 25 07:21:24 2024

                    ?_lcd_send_4bits 0035                                   l97 16C2  
                                l111 1344                                  l142 1438  
                                l152 1866                                  l208 159A  
                                l147 18C2                                  l191 17AC  
                                l409 112E                                  l507 197E  
                                l435 163E                                  l179 14F4  
                                l428 123E                                  l196 1906  
                                l449 180A                 keypad_initialize@ret 0039  
                   lcd_4bit_init@lcd 003F                     lcd_4bit_init@ret 0043  
                                _ret 005A  __end_of_lcd_send_4bit_enable_signal 1908  
        _lcd_send_4bit_enable_signal 18C4                                  wreg 0FE8  
                               l2200 178A                                 l2210 18D4  
                               l2202 178E                                 l2212 18DC  
                               l2204 17AA                                 l2150 1144  
                               l2230 1808                                 l2222 17AE  
                               l2214 18E8                                 l2310 13B4  
                               l2302 137A                                 l2160 1212  
                               l2152 1164                                 l2224 17BE  
                               l2216 18F6                                 l2208 18C4  
                               l2240 18C0                                 l2320 13F8  
                               l2312 13C0                                 l2304 1386  
                               l2170 101E                                 l2154 116C  
                               l2162 123C                                 l2226 17DE  
                               l2218 1904                                 l2234 1868  
                               l2322 1404                                 l2314 13DA  
                               l2306 138A                                 l2330 1436  
                               l2250 15E0                                 l2410 12B8  
                               l2402 127C                                 l2172 1032  
                               l2156 11C2                                 l2148 1130  
                               l2228 17E6                                 l2260 1650  
                               l2236 1878                                 l2324 1410  
                               l2316 13E0                                 l2308 13A6  
                               l2252 15E8                                 l2244 159C  
                               l2420 12E2                                 l2404 128A  
                               l2340 1864                                 l2182 1100  
                               l2174 1052                                 l2270 166A  
                               l2262 1658                                 l2190 174E  
                               l2238 1880                                 l2326 141C  
                               l2318 13EC                                 l2254 163C  
                               l2246 15B0                                 l2422 1302  
                               l2406 128E                                 l2430 1342  
                               l2334 180C                                 l2350 1508  
                               l2176 105A                                 l2184 112C  
                               l2280 1692                                 l2272 166E  
                               l2192 1756                                 l2328 1428  
                               l2248 15C0                                 l2424 1306  
                               l2416 12C0                                 l2408 12AA  
                               l2336 181C                                 l2360 1560  
                               l2352 1510                                 l2344 14F6  
                               l2440 1464                                 l2178 10B0  
                               l2282 16A0                                 l2274 168A  
                               l2258 1640                                 l2290 1346  
                               l2426 1322                                 l2418 12D2  
                               l2338 1824                                 l2354 1524  
                               l2346 14F6                                 l2442 147A  
                               l2450 14C0                                 l2434 143A  
                               l2284 16A4                                 l2268 1660  
                               l2188 173E                                 l2292 1356  
                               l2508 196A                                 l2428 1326  
                               l2356 1538                                 l2364 1572  
                               l2348 14F8                                 l2444 14A8  
                               l2452 14F2                                 l2436 144A  
                               l2286 16C0                                 l2198 175E  
                               l2294 135E                                 l2390 126C  
                               l2358 154C                                 l2366 1598  
                               l2446 14AC                                 l2438 145C  
                               l2296 1372                                 l2384 1240  
                               l2386 1254                                 l2396 1274  
                               l2388 1264                                 l2930 16D4  
                               l2932 16F2                                 l2934 170A  
                               l2926 16C4              ??_application_initializ 0044  
                               l2944 1226                                 l2936 1718  
                               l2928 16C8                                 STR_1 1019  
                               STR_4 1011                                 STR_5 1011  
                               u1210 1144                                 u1211 1140  
                               u1220 1164                                 u1300 174E  
                               u1221 1160                                 u1301 174A  
                               u1320 17AA                                 u1321 17A6  
                               u1250 1032                                 u1234 118A  
                               u1410 1650                                 u1330 18D4  
                               u1314 1778                                 u1251 102E  
                               u1235 1186                                 u1411 164C  
                               u1331 18D0                                 u1315 1774  
                               u1260 1052                                 u1244 11E0  
                               u1340 17BE                                 u1420 168A  
                               u1404 1630                                 u1500 1264  
                               u1261 104E                                 u1245 11DC  
                               u1341 17BA                                 u1421 1686  
                               u1405 162C                                 u1501 1260  
                               _LATA 0F89                                 u1350 17DE  
                               u1430 16C0                                 u1510 12AA  
                               _LATB 0F8A                                 u1351 17DA  
                               u1431 16BC                                 u2207 13DC  
                               u1511 12A6                                 _LATC 0F8B  
                               u1360 1878                                 u1440 1356  
                               u1520 12E2                                 u1600 14F2  
                               _LATD 0F8C                                 u2217 18EE  
                               u1361 1874                                 u1441 1352  
                               u1521 12DE                                 u1601 14EE  
                               _LATE 0F8D                                 u1290 1116  
                               u1274 1078                                 u1450 13A6  
                               u1370 15B0                                 u1530 1322  
                               u1291 1110                                 u1275 1074  
                               u1451 13A2                                 u1371 15AC  
                               u1531 131E                                 u1284 10CE  
                               u1380 15C0                                 u1540 1342  
                               u1460 181C                                 u1285 10CA  
                               u1381 15BC                                 u1541 133E  
                               u1461 1818                                 u1390 15E0  
                               u1470 1508                                 u1550 144A  
                               u1391 15DC                                 u1471 1504  
                               u1551 1446                                 u1296 1118  
                               u1560 145C                                 u1561 1458  
                               u1490 1254                                 u1570 14A0  
                               u2187 13AC                                 u1491 1250  
                               u1580 14BC                                 u2197 13C6  
                               u1581 14B8                                 u1590 14E2  
                               u1577 1496                                 u1597 14D8  
                               _lcd2 0027       gpio_pin_read_logic@_pin_config 002D  
                               _main 16C4                                 fsr0h 0FEA  
                               fsr1h 0FE2                                 indf0 0FEF  
                               fsr2h 0FDA                                 fsr0l 0FE9  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
           ?_gpio_pin_direction_init 002D                                 prodl 0FF3  
                               start 0000                         ___param_bank 0000  
              _lcd_4bit_send_command 1868                 _gpio_pin_write_logic 1130  
                              ?_main 002D          ecu_dc_motor_initializ@F3064 0058  
        ecu_dc_motor_initializ@F3066 0057                                _PORTA 0F80  
                              _PORTB 0F81                                _PORTC 0F82  
                              _PORTD 0F83                                _PORTE 0F84  
                              _TRISA 0F92                                _TRISB 0F93  
                              _TRISC 0F94                                _TRISD 0F95  
                              _TRISE 0F96             __end_of_keypad_get_value 1346  
                              _value 0059                                tablat 0FF5  
                              status 0FD8                      __initialization 1908  
                keypad_get_value@ret 0038                         __end_of_main 173E  
              ?_gpio_pin_write_logic 002D                  ecu_led_toggle@F3076 004D  
           gpio_pin_read_logic@logic 002E                        _lat_registers 000B  
                             ??_main 0049              _gpio_pin_Initialization 17AE  
                      __activetblptr 0002      keypad_initialize@_keypad_config 0038  
   __end_of_lcd_4bit_send_string_pos 14F6               ?_lcd_4bit_send_command 003C  
              __end_of_lcd_4bit_init 143A                               _keypad 001F  
                             clear_0 192E                               isa$std 0001  
                       __pdataCOMRAM 0001                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                           __accesstop 0080  
            __end_of__initialization 1934             lcd_4bit_set_cursor@colum 0041  
                     lcd_4bit_init@i 0041                        ___rparam_used 0001  
                   ??_lcd_send_4bits 0037               ??_gpio_pin_write_logic 002F  
                     __pcstackCOMRAM 002D                lcd_4bit_send_data@lcd 003C  
              lcd_4bit_send_data@ret 003E            ??_gpio_pin_Initialization 0036  
           lcd_4bit_send_command@lcd 003C             lcd_4bit_send_command@ret 003E  
       ecu_dc_motor_move_right@F3071 0056         ecu_dc_motor_move_right@F3073 0055  
      __end_of_application_initializ 1980                           __pnvCOMRAM 005A  
 gpio_pin_direction_init@_pin_config 002D            ?_lcd_4bit_send_string_pos 0043  
                  ?_keypad_get_value 0035      __end_of_gpio_pin_Initialization 180C  
                 ??_keypad_get_value 0037                       _tris_registers 0015  
                            __Hparam 0000                              __Lparam 0000  
                _gpio_pin_read_logic 159C                         __psmallconst 1000  
                            __pcinit 1908                              __ramtop 1000  
                            __ptext0 16C4                              __ptext1 143A  
                            __ptext2 14F6                              __ptext3 180C  
                            __ptext4 1240                              __ptext5 159C  
                            __ptext6 196A                              __ptext7 1346  
                            __ptext8 1868                              __ptext9 173E  
 gpio_pin_Initialization@_pin_config 0035                 ?_gpio_pin_read_logic 002D  
               end_of_initialization 1934                    lcd_send_4bits@lcd 0035  
                  lcd_send_4bits@ret 0039                        __Lmediumconst 0000  
            ??_lcd_4bit_send_command 003E           __end_of_lcd_4bit_send_data 1868  
                            postdec1 0FE5                              postdec2 0FDD  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                ??_gpio_pin_read_logic 002F  
                _lcd_4bit_set_cursor 14F6                ecu_led_turn_off@F3071 004E  
             lcd_4bit_send_data@data 003D          lcd_4bit_send_string_pos@lcd 0043  
        lcd_4bit_send_string_pos@ret 0048          lcd_4bit_send_string_pos@row 0044  
        lcd_4bit_send_string_pos@str 0046                keypad_get_value@value 0036  
            _gpio_pin_direction_init 101E       keypad_get_value@_keypad_config 0035  
                      __pidataCOMRAM 193E             ecu_relay_initializ@F3061 004C  
                start_initialization 1908          ecu_dc_motor_move_left@F3080 0053  
        ecu_dc_motor_move_left@F3078 0054         ?_lcd_send_4bit_enable_signal 0035  
               ?_lcd_4bit_set_cursor 003F                      lcd_send_4bits@i 003A  
       lcd_4bit_send_command@command 003D                          __pbssCOMRAM 0049  
              ??_lcd_4bit_set_cursor 0042        ??_lcd_send_4bit_enable_signal 0036  
              _application_initializ 196A             ?_gpio_pin_Initialization 0035  
          ??_gpio_pin_direction_init 002E      gpio_pin_write_logic@_pin_config 002D  
                      _lcd_4bit_init 1346            gpio_pin_write_logic@logic 002E  
                        __smallconst 1000           lcd_send_4bits@data_command 0036  
                     _keypad_sampels 1001                ecu_relay_toggle@F3076 0049  
      __end_of_lcd_4bit_send_command 18C4           gpio_pin_Initialization@ret 0037  
                     ?_lcd_4bit_init 003F        lcd_4bit_send_string_pos@colum 0045  
           _lcd_4bit_send_string_pos 143A                 ecu_led_turn_on@F3066 004F  
                 keypad_initialize@i 003A                   keypad_initialize@j 003C  
                 _lcd_4bit_send_data 180C      __end_of_gpio_pin_direction_init 1130  
            gpio_pin_write_logic@ret 0034                  ?_lcd_4bit_send_data 003C  
                          copy_data0 191C                    _keypad_initialize 1640  
                  keypad_get_value@i 003C                    keypad_get_value@j 003A  
                  keypad_get_value@k 003E               __end_of_keypad_sampels 1011  
                 ?_keypad_initialize 0038               gpio_pin_read_logic@ret 0033  
             ?_application_initializ 002D                             __Hrparam 0000  
                           __Lrparam 0000                  ??_keypad_initialize 0039  
               ??_lcd_4bit_send_data 003E               lcd_4bit_set_cursor@lcd 003F  
             lcd_4bit_set_cursor@ret 0042               lcd_4bit_set_cursor@row 0040  
        __end_of_gpio_pin_read_logic 1640            __end_of_keypad_initialize 16C4  
                           __ptext10 18C4                             __ptext11 1640  
                           __ptext12 17AE                             __ptext13 1130  
                           __ptext14 101E               ecu_dc_motor_stop@F3085 0052  
             ecu_dc_motor_stop@F3087 0051                     _keypad_get_value 1240  
                    ??_lcd_4bit_init 0040              ecu_relay_turn_off@F3071 004A  
                           isa$xinst 0000                       _lcd_send_4bits 173E  
             ecu_led_initializ@F3061 0050         __end_of_gpio_pin_write_logic 1240  
     lcd_send_4bit_enable_signal@lcd 0035               ecu_relay_turn_on@F3066 004B  
     lcd_send_4bit_enable_signal@ret 0037               __end_of_lcd_send_4bits 17AE  
        keypad_get_value@colum_logic 0039          __end_of_lcd_4bit_set_cursor 159C  
                     _port_registers 0001           gpio_pin_direction_init@ret 0033  
         ??_lcd_4bit_send_string_pos 0048  
