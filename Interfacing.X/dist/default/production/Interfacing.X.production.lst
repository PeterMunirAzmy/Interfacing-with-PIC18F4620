

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 25 08:25:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 17/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   00181E                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _port_registers
    72   00181E  80                 	db	128
    73   00181F  0F                 	db	15
    74   001820  81                 	db	129
    75   001821  0F                 	db	15
    76   001822  82                 	db	130
    77   001823  0F                 	db	15
    78   001824  83                 	db	131
    79   001825  0F                 	db	15
    80   001826  84                 	db	132
    81   001827  0F                 	db	15
    82                           
    83                           ;initializer for _lat_registers
    84   001828  89                 	db	137
    85   001829  0F                 	db	15
    86   00182A  8A                 	db	138
    87   00182B  0F                 	db	15
    88   00182C  8B                 	db	139
    89   00182D  0F                 	db	15
    90   00182E  8C                 	db	140
    91   00182F  0F                 	db	15
    92   001830  8D                 	db	141
    93   001831  0F                 	db	15
    94                           
    95                           ;initializer for _tris_registers
    96   001832  92                 	db	146
    97   001833  0F                 	db	15
    98   001834  93                 	db	147
    99   001835  0F                 	db	15
   100   001836  94                 	db	148
   101   001837  0F                 	db	15
   102   001838  95                 	db	149
   103   001839  0F                 	db	15
   104   00183A  96                 	db	150
   105   00183B  0F                 	db	15
   106                           
   107                           ;initializer for _lcd1
   108   00183C  0A                 	db	10
   109   00183D  02                 	db	2
   110   00183E  03                 	db	3
   111   00183F  0B                 	db	11
   112   001840  13                 	db	19
   113   001841  1B                 	db	27
   114   001842  23                 	db	35
   115   001843  2B                 	db	43
   116   001844  33                 	db	51
   117   001845  3B                 	db	59
   118                           
   119                           ;initializer for _customChar
   120   001846  00                 	db	0
   121   001847  1B                 	db	27
   122   001848  15                 	db	21
   123   001849  11                 	db	17
   124   00184A  0A                 	db	10
   125   00184B  04                 	db	4
   126   00184C  00                 	db	0
   127   00184D  00                 	db	0
   128                           
   129                           ;initializer for _lcd2
   130   00184E  1A                 	db	26
   131   00184F  12                 	db	18
   132   001850  22                 	db	34
   133   001851  2A                 	db	42
   134   001852  32                 	db	50
   135   001853  3A                 	db	58
   136                           
   137                           	psect	smallconst
   138   001000                     __psmallconst:
   139                           	callstack 0
   140   001000  00                 	db	0
   141   001001                     _keypad_sampels:
   142                           	callstack 0
   143   001001  37                 	db	55
   144   001002  38                 	db	56
   145   001003  39                 	db	57
   146   001004  2F                 	db	47
   147   001005  34                 	db	52
   148   001006  35                 	db	53
   149   001007  36                 	db	54
   150   001008  2A                 	db	42
   151   001009  31                 	db	49
   152   00100A  32                 	db	50
   153   00100B  33                 	db	51
   154   00100C  2D                 	db	45
   155   00100D  23                 	db	35
   156   00100E  30                 	db	48
   157   00100F  3D                 	db	61
   158   001010  2B                 	db	43
   159   001011                     __end_of_keypad_sampels:
   160                           	callstack 0
   161   001011                     STR_1:
   162   001011  25                 	db	37
   163   001012  69                 	db	105	;'i'
   164   001013  00                 	db	0
   165   001014  00                 	db	0	; dummy byte at the end
   166   000000                     
   167                           	psect	nvCOMRAM
   168   000068                     __pnvCOMRAM:
   169                           	callstack 0
   170   000068                     _ret:
   171                           	callstack 0
   172   000068                     	ds	1
   173   000000                     _PORTE	set	3972
   174   000000                     _PORTD	set	3971
   175   000000                     _PORTC	set	3970
   176   000000                     _PORTB	set	3969
   177   000000                     _PORTA	set	3968
   178   000000                     _LATA	set	3977
   179   000000                     _TRISA	set	3986
   180   000000                     _TRISE	set	3990
   181   000000                     _TRISD	set	3989
   182   000000                     _TRISC	set	3988
   183   000000                     _TRISB	set	3987
   184   000000                     _LATE	set	3981
   185   000000                     _LATD	set	3980
   186   000000                     _LATC	set	3979
   187   000000                     _LATB	set	3978
   188                           
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192   001854                     __pcinit:
   193                           	callstack 0
   194   001854                     start_initialization:
   195                           	callstack 0
   196   001854                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Initialize objects allocated to COMRAM (54 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201   001854  0E1E               	movlw	low __pidataCOMRAM
   202   001856  6EF6               	movwf	tblptrl,c
   203   001858  0E18               	movlw	high __pidataCOMRAM
   204   00185A  6EF7               	movwf	tblptrh,c
   205   00185C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206   00185E  6EF8               	movwf	tblptru,c
   207   001860  EE00  F001         	lfsr	0,__pdataCOMRAM
   208   001864  EE10 F036          	lfsr	1,54
   209   001868                     copy_data0:
   210   001868  0009               	tblrd		*+
   211   00186A  CFF5 FFEE          	movff	tablat,postinc0
   212   00186E  50E5               	movf	postdec1,w,c
   213   001870  50E1               	movf	fsr1l,w,c
   214   001872  E1FA               	bnz	copy_data0
   215                           
   216                           ; Clear objects allocated to COMRAM (16 bytes)
   217   001874  EE00  F058         	lfsr	0,__pbssCOMRAM
   218   001878  0E10               	movlw	16
   219   00187A                     clear_0:
   220   00187A  6AEE               	clrf	postinc0,c
   221   00187C  06E8               	decf	wreg,f,c
   222   00187E  E1FD               	bnz	clear_0
   223   001880                     end_of_initialization:
   224                           	callstack 0
   225   001880                     __end_of__initialization:
   226                           	callstack 0
   227   001880  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228   001882  6EF8               	movwf	tblptru,c
   229   001884  0100               	movlb	0
   230   001886  EF45  F00C         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   000058                     __pbssCOMRAM:
   234                           	callstack 0
   235   000058                     ecu_relay_toggle@F3076:
   236                           	callstack 0
   237   000058                     	ds	1
   238   000059                     ecu_relay_turn_off@F3071:
   239                           	callstack 0
   240   000059                     	ds	1
   241   00005A                     ecu_relay_turn_on@F3066:
   242                           	callstack 0
   243   00005A                     	ds	1
   244   00005B                     ecu_relay_initializ@F3061:
   245                           	callstack 0
   246   00005B                     	ds	1
   247   00005C                     ecu_led_toggle@F3076:
   248                           	callstack 0
   249   00005C                     	ds	1
   250   00005D                     ecu_led_turn_off@F3071:
   251                           	callstack 0
   252   00005D                     	ds	1
   253   00005E                     ecu_led_turn_on@F3066:
   254                           	callstack 0
   255   00005E                     	ds	1
   256   00005F                     ecu_led_initializ@F3061:
   257                           	callstack 0
   258   00005F                     	ds	1
   259   000060                     ecu_dc_motor_stop@F3087:
   260                           	callstack 0
   261   000060                     	ds	1
   262   000061                     ecu_dc_motor_stop@F3085:
   263                           	callstack 0
   264   000061                     	ds	1
   265   000062                     ecu_dc_motor_move_left@F3080:
   266                           	callstack 0
   267   000062                     	ds	1
   268   000063                     ecu_dc_motor_move_left@F3078:
   269                           	callstack 0
   270   000063                     	ds	1
   271   000064                     ecu_dc_motor_move_right@F3073:
   272                           	callstack 0
   273   000064                     	ds	1
   274   000065                     ecu_dc_motor_move_right@F3071:
   275                           	callstack 0
   276   000065                     	ds	1
   277   000066                     ecu_dc_motor_initializ@F3066:
   278                           	callstack 0
   279   000066                     	ds	1
   280   000067                     ecu_dc_motor_initializ@F3064:
   281                           	callstack 0
   282   000067                     	ds	1
   283                           
   284                           	psect	dataCOMRAM
   285   000001                     __pdataCOMRAM:
   286                           	callstack 0
   287   000001                     _port_registers:
   288                           	callstack 0
   289   000001                     	ds	10
   290   00000B                     _lat_registers:
   291                           	callstack 0
   292   00000B                     	ds	10
   293   000015                     _tris_registers:
   294                           	callstack 0
   295   000015                     	ds	10
   296   00001F                     _lcd1:
   297                           	callstack 0
   298   00001F                     	ds	10
   299   000029                     _customChar:
   300                           	callstack 0
   301   000029                     	ds	8
   302   000031                     _lcd2:
   303                           	callstack 0
   304   000031                     	ds	6
   305                           
   306                           	psect	cstackCOMRAM
   307   000037                     __pcstackCOMRAM:
   308                           	callstack 0
   309   000037                     gpio_pin_direction_init@_pin_config:
   310                           	callstack 0
   311   000037                     gpio_pin_write_logic@_pin_config:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x0
   315   000037                     	ds	1
   316   000038                     ??_gpio_pin_direction_init:
   317   000038                     gpio_pin_write_logic@logic:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321   000038                     	ds	1
   322   000039                     ??_gpio_pin_write_logic:
   323                           
   324                           ; 1 bytes @ 0x2
   325   000039                     	ds	4
   326   00003D                     gpio_pin_direction_init@ret:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x6
   330   00003D                     	ds	1
   331   00003E                     gpio_pin_write_logic@ret:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x7
   335   00003E                     	ds	1
   336   00003F                     lcd_send_4bits@lcd:
   337                           	callstack 0
   338   00003F                     lcd_send_4bit_enable_signal@lcd:
   339                           	callstack 0
   340   00003F                     lcd_send_8bit_enable_signal@lcd:
   341                           	callstack 0
   342   00003F                     gpio_pin_Initialization@_pin_config:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x8
   346   00003F                     	ds	1
   347   000040                     ??_gpio_pin_Initialization:
   348   000040                     ??_lcd_send_4bit_enable_signal:
   349   000040                     lcd_send_4bits@data_command:
   350                           	callstack 0
   351   000040                     lcd_send_8bit_enable_signal@ret:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x9
   355   000040                     	ds	1
   356   000041                     ??_lcd_send_4bits:
   357   000041                     lcd_send_4bit_enable_signal@ret:
   358                           	callstack 0
   359   000041                     lcd_8bit_send_command@lcd:
   360                           	callstack 0
   361   000041                     lcd_8bit_send_data@lcd:
   362                           	callstack 0
   363   000041                     gpio_pin_Initialization@ret:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xA
   367   000041                     	ds	1
   368   000042                     lcd_8bit_send_command@command:
   369                           	callstack 0
   370   000042                     lcd_8bit_send_data@data:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xB
   374   000042                     	ds	1
   375   000043                     ??_lcd_8bit_send_command:
   376   000043                     ??_lcd_8bit_send_data:
   377   000043                     lcd_send_4bits@ret:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xC
   381   000043                     	ds	1
   382   000044                     lcd_send_4bits@i:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xD
   386   000044                     	ds	1
   387   000045                     lcd_8bit_send_command@ret:
   388                           	callstack 0
   389   000045                     lcd_8bit_send_data@ret:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0xE
   393   000045                     	ds	1
   394   000046                     lcd_4bit_send_command@lcd:
   395                           	callstack 0
   396   000046                     lcd_8bit_send_command@i:
   397                           	callstack 0
   398   000046                     lcd_8bit_send_data@i:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xF
   402   000046                     	ds	1
   403   000047                     lcd_4bit_send_command@command:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x10
   407   000047                     	ds	1
   408   000048                     lcd_4bit_send_command@ret:
   409                           	callstack 0
   410   000048                     lcd_8bit_init@lcd:
   411                           	callstack 0
   412   000048                     lcd_8bit_set_cursor@lcd:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x11
   416   000048                     	ds	1
   417   000049                     ??_lcd_8bit_init:
   418   000049                     lcd_4bit_init@lcd:
   419                           	callstack 0
   420   000049                     lcd_8bit_set_cursor@row:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x12
   424   000049                     	ds	1
   425   00004A                     ??_lcd_4bit_init:
   426   00004A                     lcd_8bit_set_cursor@colum:
   427                           	callstack 0
   428   00004A                     lcd_8bit_init@i:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x13
   432   00004A                     	ds	1
   433   00004B                     lcd_8bit_set_cursor@ret:
   434                           	callstack 0
   435   00004B                     lcd_4bit_init@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x14
   439   00004B                     	ds	1
   440   00004C                     lcd_8bit_init@ret:
   441                           	callstack 0
   442   00004C                     lcd_8bit_send_data_pos@lcd:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x15
   446   00004C                     	ds	1
   447   00004D                     lcd_4bit_init@ret:
   448                           	callstack 0
   449   00004D                     lcd_8bit_send_data_pos@row:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x16
   453   00004D                     	ds	1
   454   00004E                     lcd_8bit_send_data_pos@colum:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x17
   458   00004E                     	ds	1
   459   00004F                     lcd_8bit_send_data_pos@data:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x18
   463   00004F                     	ds	1
   464   000050                     lcd_8bit_send_data_pos@ret:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x19
   468   000050                     	ds	1
   469   000051                     lcd_8bit_send_custom_char@lcd:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x1A
   473   000051                     	ds	1
   474   000052                     lcd_8bit_send_custom_char@row:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x1B
   478   000052                     	ds	1
   479   000053                     lcd_8bit_send_custom_char@colum:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x1C
   483   000053                     	ds	1
   484   000054                     lcd_8bit_send_custom_char@_char:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x1D
   488   000054                     	ds	1
   489   000055                     lcd_8bit_send_custom_char@mem_pos:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x1E
   493   000055                     	ds	1
   494   000056                     lcd_8bit_send_custom_char@ret:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x1F
   498   000056                     	ds	1
   499   000057                     lcd_8bit_send_custom_char@i:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x20
   503   000057                     	ds	1
   504   000058                     
   505                           ; 1 bytes @ 0x21
   506 ;;
   507 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   508 ;;
   509 ;; *************** function _main *****************
   510 ;; Defined at:
   511 ;;		line 50 in file "application.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  2  502[None  ] int 
   518 ;; Registers used:
   519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels required when called: 6
   531 ;; This function calls:
   532 ;;		_application_initializ
   533 ;;		_lcd_8bit_send_custom_char
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540   00188A                     __ptext0:
   541                           	callstack 0
   542   00188A                     _main:
   543                           	callstack 25
   544   00188A                     
   545                           ;application.c: 52:     application_initializ();
   546   00188A  EC58  F00C         	call	_application_initializ	;wreg free
   547                           
   548                           ;application.c: 54:     ret = lcd_8bit_send_custom_char(&lcd1 , 1 , 1 , &customChar , 1)
      +                          ;
   549   00188E  0E1F               	movlw	low _lcd1
   550   001890  6E51               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   551   001892  0E01               	movlw	1
   552   001894  6E52               	movwf	lcd_8bit_send_custom_char@row^0,c
   553   001896  0E01               	movlw	1
   554   001898  6E53               	movwf	lcd_8bit_send_custom_char@colum^0,c
   555   00189A  0E29               	movlw	low _customChar
   556   00189C  6E54               	movwf	lcd_8bit_send_custom_char@_char^0,c
   557   00189E  0E01               	movlw	1
   558   0018A0  6E55               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   559   0018A2  EC1F  F00B         	call	_lcd_8bit_send_custom_char	;wreg free
   560   0018A6  6E68               	movwf	_ret^0,c
   561   0018A8                     l503:
   562   0018A8  EF54  F00C         	goto	l503
   563   0018AC  EF00  F000         	goto	start
   564   0018B0                     __end_of_main:
   565                           	callstack 0
   566                           
   567 ;; *************** function _lcd_8bit_send_custom_char *****************
   568 ;; Defined at:
   569 ;;		line 486 in file "ECU_layer/lcd/lcd.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  lcd             1   26[COMRAM] PTR const struct .
   572 ;;		 -> lcd1(10), 
   573 ;;  row             1   27[COMRAM] unsigned char 
   574 ;;  colum           1   28[COMRAM] unsigned char 
   575 ;;  _char           1   29[COMRAM] PTR const unsigned char 
   576 ;;		 -> customChar(8), 
   577 ;;  mem_pos         1   30[COMRAM] unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  i               1   32[COMRAM] unsigned char 
   580 ;;  ret             1   31[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      unsigned char 
   583 ;; Registers used:
   584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   590 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;Total ram usage:        7 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; Hardware stack levels required when called: 5
   597 ;; This function calls:
   598 ;;		_lcd_8bit_send_command
   599 ;;		_lcd_8bit_send_data
   600 ;;		_lcd_8bit_send_data_pos
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607   00163E                     __ptext1:
   608                           	callstack 0
   609   00163E                     _lcd_8bit_send_custom_char:
   610                           	callstack 25
   611   00163E                     
   612                           ;ECU_layer/lcd/lcd.c: 490:     if (((void*)0) == lcd)
   613   00163E  5051               	movf	lcd_8bit_send_custom_char@lcd^0,w,c
   614   001640  A4D8               	btfss	status,2,c
   615   001642  EF25  F00B         	goto	u1521
   616   001646  EF27  F00B         	goto	u1520
   617   00164A                     u1521:
   618   00164A  EF2B  F00B         	goto	l2476
   619   00164E                     u1520:
   620   00164E                     
   621                           ;ECU_layer/lcd/lcd.c: 491:     {;ECU_layer/lcd/lcd.c: 492:         ret = (STD_ReturnType
      +                          )0x00;
   622   00164E  0E00               	movlw	0
   623   001650  6E56               	movwf	lcd_8bit_send_custom_char@ret^0,c
   624                           
   625                           ;ECU_layer/lcd/lcd.c: 493:     }
   626   001652  EF54  F00B         	goto	l2492
   627   001656                     l2476:
   628   001656  C051  F041         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_command@lcd
   629   00165A  5055               	movf	lcd_8bit_send_custom_char@mem_pos^0,w,c
   630   00165C  0D08               	mullw	8
   631   00165E  50F3               	movf	243,w,c
   632   001660  0F40               	addlw	64
   633   001662  6E42               	movwf	lcd_8bit_send_command@command^0,c
   634   001664  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
   635   001668                     
   636                           ;ECU_layer/lcd/lcd.c: 497:         for(uint8 i=0 ; i<8 ; i++)
   637   001668  0E00               	movlw	0
   638   00166A  6E57               	movwf	lcd_8bit_send_custom_char@i^0,c
   639   00166C                     l2484:
   640   00166C  C051  F041         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_data@lcd
   641   001670  5054               	movf	lcd_8bit_send_custom_char@_char^0,w,c
   642   001672  2457               	addwf	lcd_8bit_send_custom_char@i^0,w,c
   643   001674  6ED9               	movwf	fsr2l,c
   644   001676  6ADA               	clrf	fsr2h,c
   645   001678  50DF               	movf	indf2,w,c
   646   00167A  6E42               	movwf	lcd_8bit_send_data@data^0,c
   647   00167C  EC63  F00A         	call	_lcd_8bit_send_data	;wreg free
   648   001680                     
   649                           ;ECU_layer/lcd/lcd.c: 500:         }
   650   001680  2A57               	incf	lcd_8bit_send_custom_char@i^0,f,c
   651   001682  0E07               	movlw	7
   652   001684  6457               	cpfsgt	lcd_8bit_send_custom_char@i^0,c
   653   001686  EF47  F00B         	goto	u1531
   654   00168A  EF49  F00B         	goto	u1530
   655   00168E                     u1531:
   656   00168E  EF36  F00B         	goto	l2484
   657   001692                     u1530:
   658   001692                     
   659                           ;ECU_layer/lcd/lcd.c: 502:         ret = lcd_8bit_send_data_pos(lcd, row, colum , mem_po
      +                          s);
   660   001692  C051  F04C         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_data_pos@lcd
   661   001696  C052  F04D         	movff	lcd_8bit_send_custom_char@row,lcd_8bit_send_data_pos@row
   662   00169A  C053  F04E         	movff	lcd_8bit_send_custom_char@colum,lcd_8bit_send_data_pos@colum
   663   00169E  C055  F04F         	movff	lcd_8bit_send_custom_char@mem_pos,lcd_8bit_send_data_pos@data
   664   0016A2  ECD5  F00B         	call	_lcd_8bit_send_data_pos	;wreg free
   665   0016A6  6E56               	movwf	lcd_8bit_send_custom_char@ret^0,c
   666   0016A8                     l2492:
   667                           
   668                           ;ECU_layer/lcd/lcd.c: 504:     return ret;
   669   0016A8  5056               	movf	lcd_8bit_send_custom_char@ret^0,w,c
   670   0016AA  0012               	return		;funcret
   671   0016AC                     __end_of_lcd_8bit_send_custom_char:
   672                           	callstack 0
   673                           
   674 ;; *************** function _lcd_8bit_send_data_pos *****************
   675 ;; Defined at:
   676 ;;		line 400 in file "ECU_layer/lcd/lcd.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  lcd             1   21[COMRAM] PTR const struct .
   679 ;;		 -> lcd1(10), 
   680 ;;  row             1   22[COMRAM] unsigned char 
   681 ;;  colum           1   23[COMRAM] unsigned char 
   682 ;;  data            1   24[COMRAM] unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  ret             1   25[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      unsigned char 
   687 ;; Registers used:
   688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        5 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 4
   701 ;; This function calls:
   702 ;;		_lcd_8bit_send_data
   703 ;;		_lcd_8bit_set_cursor
   704 ;; This function is called by:
   705 ;;		_lcd_8bit_send_custom_char
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text2
   710   0017AA                     __ptext2:
   711                           	callstack 0
   712   0017AA                     _lcd_8bit_send_data_pos:
   713                           	callstack 25
   714   0017AA                     
   715                           ;ECU_layer/lcd/lcd.c: 404:     if (((void*)0) == lcd)
   716   0017AA  504C               	movf	lcd_8bit_send_data_pos@lcd^0,w,c
   717   0017AC  A4D8               	btfss	status,2,c
   718   0017AE  EFDB  F00B         	goto	u1501
   719   0017B2  EFDD  F00B         	goto	u1500
   720   0017B6                     u1501:
   721   0017B6  EFE1  F00B         	goto	l2454
   722   0017BA                     u1500:
   723   0017BA                     
   724                           ;ECU_layer/lcd/lcd.c: 405:     {;ECU_layer/lcd/lcd.c: 406:         ret = (STD_ReturnType
      +                          )0x00;
   725   0017BA  0E00               	movlw	0
   726   0017BC  6E50               	movwf	lcd_8bit_send_data_pos@ret^0,c
   727                           
   728                           ;ECU_layer/lcd/lcd.c: 407:     }
   729   0017BE  EFF1  F00B         	goto	l2456
   730   0017C2                     l2454:
   731                           
   732                           ;ECU_layer/lcd/lcd.c: 409:     {;ECU_layer/lcd/lcd.c: 410:         ret = lcd_8bit_set_cu
      +                          rsor(lcd , row, colum);
   733   0017C2  C04C  F048         	movff	lcd_8bit_send_data_pos@lcd,lcd_8bit_set_cursor@lcd
   734   0017C6  C04D  F049         	movff	lcd_8bit_send_data_pos@row,lcd_8bit_set_cursor@row
   735   0017CA  C04E  F04A         	movff	lcd_8bit_send_data_pos@colum,lcd_8bit_set_cursor@colum
   736   0017CE  EC10  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   737   0017D2  6E50               	movwf	lcd_8bit_send_data_pos@ret^0,c
   738                           
   739                           ;ECU_layer/lcd/lcd.c: 411:         ret = lcd_8bit_send_data(lcd , data);
   740   0017D4  C04C  F041         	movff	lcd_8bit_send_data_pos@lcd,lcd_8bit_send_data@lcd
   741   0017D8  C04F  F042         	movff	lcd_8bit_send_data_pos@data,lcd_8bit_send_data@data
   742   0017DC  EC63  F00A         	call	_lcd_8bit_send_data	;wreg free
   743   0017E0  6E50               	movwf	lcd_8bit_send_data_pos@ret^0,c
   744   0017E2                     l2456:
   745                           
   746                           ;ECU_layer/lcd/lcd.c: 413:     return ret;
   747   0017E2  5050               	movf	lcd_8bit_send_data_pos@ret^0,w,c
   748   0017E4  0012               	return		;funcret
   749   0017E6                     __end_of_lcd_8bit_send_data_pos:
   750                           	callstack 0
   751                           
   752 ;; *************** function _lcd_8bit_set_cursor *****************
   753 ;; Defined at:
   754 ;;		line 536 in file "ECU_layer/lcd/lcd.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  lcd             1   17[COMRAM] PTR const struct .
   757 ;;		 -> lcd1(10), 
   758 ;;  row             1   18[COMRAM] unsigned char 
   759 ;;  colum           1   19[COMRAM] unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  ret             1   20[COMRAM] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      unsigned char 
   764 ;; Registers used:
   765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   771 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;Total ram usage:        4 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 3
   778 ;; This function calls:
   779 ;;		_lcd_8bit_send_command
   780 ;; This function is called by:
   781 ;;		_lcd_8bit_send_data_pos
   782 ;;		_lcd_8bit_send_string_pos
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text3
   787   001420                     __ptext3:
   788                           	callstack 0
   789   001420                     _lcd_8bit_set_cursor:
   790                           	callstack 25
   791   001420                     
   792                           ;ECU_layer/lcd/lcd.c: 539:     colum--;
   793   001420  064A               	decf	lcd_8bit_set_cursor@colum^0,f,c
   794   001422                     
   795                           ;ECU_layer/lcd/lcd.c: 542:     if (((void*)0) == lcd)
   796   001422  5048               	movf	lcd_8bit_set_cursor@lcd^0,w,c
   797   001424  A4D8               	btfss	status,2,c
   798   001426  EF17  F00A         	goto	u1441
   799   00142A  EF19  F00A         	goto	u1440
   800   00142E                     u1441:
   801   00142E  EF4E  F00A         	goto	l2344
   802   001432                     u1440:
   803   001432                     
   804                           ;ECU_layer/lcd/lcd.c: 543:     {;ECU_layer/lcd/lcd.c: 544:         ret = (STD_ReturnType
      +                          )0x00;
   805   001432  0E00               	movlw	0
   806   001434  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   807                           
   808                           ;ECU_layer/lcd/lcd.c: 545:     }
   809   001436  EF61  F00A         	goto	l2346
   810   00143A                     l2332:
   811                           
   812                           ;ECU_layer/lcd/lcd.c: 551:                 ret = lcd_8bit_send_command(lcd , (0x80 + col
      +                          um));
   813   00143A  C048  F041         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   814   00143E  504A               	movf	lcd_8bit_set_cursor@colum^0,w,c
   815   001440  0F80               	addlw	128
   816   001442  6E42               	movwf	lcd_8bit_send_command@command^0,c
   817   001444  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
   818   001448  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   819                           
   820                           ;ECU_layer/lcd/lcd.c: 552:                 break;
   821   00144A  EF61  F00A         	goto	l2346
   822   00144E                     l2334:
   823                           
   824                           ;ECU_layer/lcd/lcd.c: 554:                 ret = lcd_8bit_send_command(lcd , (0xC0 + col
      +                          um));
   825   00144E  C048  F041         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   826   001452  504A               	movf	lcd_8bit_set_cursor@colum^0,w,c
   827   001454  0FC0               	addlw	192
   828   001456  6E42               	movwf	lcd_8bit_send_command@command^0,c
   829   001458  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
   830   00145C  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   831                           
   832                           ;ECU_layer/lcd/lcd.c: 555:                 break;
   833   00145E  EF61  F00A         	goto	l2346
   834   001462                     l2336:
   835                           
   836                           ;ECU_layer/lcd/lcd.c: 557:                 ret = lcd_8bit_send_command(lcd , (0x94 + col
      +                          um));
   837   001462  C048  F041         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   838   001466  504A               	movf	lcd_8bit_set_cursor@colum^0,w,c
   839   001468  0F94               	addlw	148
   840   00146A  6E42               	movwf	lcd_8bit_send_command@command^0,c
   841   00146C  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
   842   001470  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   843                           
   844                           ;ECU_layer/lcd/lcd.c: 558:                 break;
   845   001472  EF61  F00A         	goto	l2346
   846   001476                     l2338:
   847                           
   848                           ;ECU_layer/lcd/lcd.c: 560:                 ret = lcd_8bit_send_command(lcd , (0xD4 + col
      +                          um));
   849   001476  C048  F041         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   850   00147A  504A               	movf	lcd_8bit_set_cursor@colum^0,w,c
   851   00147C  0FD4               	addlw	212
   852   00147E  6E42               	movwf	lcd_8bit_send_command@command^0,c
   853   001480  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
   854   001484  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   855                           
   856                           ;ECU_layer/lcd/lcd.c: 561:                 break;
   857   001486  EF61  F00A         	goto	l2346
   858   00148A                     l2340:
   859                           
   860                           ;ECU_layer/lcd/lcd.c: 563:                 ret = lcd_8bit_send_command(lcd , 0x02);
   861   00148A  C048  F041         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   862   00148E  0E02               	movlw	2
   863   001490  6E42               	movwf	lcd_8bit_send_command@command^0,c
   864   001492  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
   865   001496  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   866                           
   867                           ;ECU_layer/lcd/lcd.c: 564:                 break;
   868   001498  EF61  F00A         	goto	l2346
   869   00149C                     l2344:
   870   00149C  5049               	movf	lcd_8bit_set_cursor@row^0,w,c
   871                           
   872                           ; Switch size 1, requested type "simple"
   873                           ; Number of cases is 4, Range of values is 1 to 4
   874                           ; switch strategies available:
   875                           ; Name         Instructions Cycles
   876                           ; simple_byte           13     7 (average)
   877                           ;	Chosen strategy is simple_byte
   878   00149E  0A01               	xorlw	1	; case 1
   879   0014A0  B4D8               	btfsc	status,2,c
   880   0014A2  EF1D  F00A         	goto	l2332
   881   0014A6  0A03               	xorlw	3	; case 2
   882   0014A8  B4D8               	btfsc	status,2,c
   883   0014AA  EF27  F00A         	goto	l2334
   884   0014AE  0A01               	xorlw	1	; case 3
   885   0014B0  B4D8               	btfsc	status,2,c
   886   0014B2  EF31  F00A         	goto	l2336
   887   0014B6  0A07               	xorlw	7	; case 4
   888   0014B8  B4D8               	btfsc	status,2,c
   889   0014BA  EF3B  F00A         	goto	l2338
   890   0014BE  EF45  F00A         	goto	l2340
   891   0014C2                     l2346:
   892                           
   893                           ;ECU_layer/lcd/lcd.c: 567:     return ret;
   894   0014C2  504B               	movf	lcd_8bit_set_cursor@ret^0,w,c
   895   0014C4  0012               	return		;funcret
   896   0014C6                     __end_of_lcd_8bit_set_cursor:
   897                           	callstack 0
   898                           
   899 ;; *************** function _lcd_8bit_send_data *****************
   900 ;; Defined at:
   901 ;;		line 372 in file "ECU_layer/lcd/lcd.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  lcd             1   10[COMRAM] PTR const struct .
   904 ;;		 -> lcd1(10), 
   905 ;;  data            1   11[COMRAM] unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  i               2   15[COMRAM] int 
   908 ;;  ret             1   14[COMRAM] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      unsigned char 
   911 ;; Registers used:
   912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        7 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 2
   925 ;; This function calls:
   926 ;;		_gpio_pin_write_logic
   927 ;;		_lcd_send_8bit_enable_signal
   928 ;; This function is called by:
   929 ;;		_lcd_8bit_send_data_pos
   930 ;;		_lcd_8bit_send_custom_char
   931 ;;		_lcd_8bit_send_string
   932 ;;		_lcd_8bit_send_string_pos
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text4
   937   0014C6                     __ptext4:
   938                           	callstack 0
   939   0014C6                     _lcd_8bit_send_data:
   940                           	callstack 26
   941   0014C6                     
   942                           ;ECU_layer/lcd/lcd.c: 376:     if (((void*)0) == lcd)
   943   0014C6  5041               	movf	lcd_8bit_send_data@lcd^0,w,c
   944   0014C8  A4D8               	btfss	status,2,c
   945   0014CA  EF69  F00A         	goto	u1411
   946   0014CE  EF6B  F00A         	goto	u1410
   947   0014D2                     u1411:
   948   0014D2  EF6F  F00A         	goto	l2304
   949   0014D6                     u1410:
   950   0014D6                     
   951                           ;ECU_layer/lcd/lcd.c: 377:     {;ECU_layer/lcd/lcd.c: 378:         ret = (STD_ReturnType
      +                          )0x00;
   952   0014D6  0E00               	movlw	0
   953   0014D8  6E45               	movwf	lcd_8bit_send_data@ret^0,c
   954                           
   955                           ;ECU_layer/lcd/lcd.c: 379:     }
   956   0014DA  EFA3  F00A         	goto	l2320
   957   0014DE                     l2304:
   958   0014DE  C041  F037         	movff	lcd_8bit_send_data@lcd,gpio_pin_write_logic@_pin_config
   959   0014E2  0E01               	movlw	1
   960   0014E4  6E38               	movwf	gpio_pin_write_logic@logic^0,c
   961   0014E6  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   962   0014EA                     
   963                           ;ECU_layer/lcd/lcd.c: 383:         for(int i = 0 ; i < 8 ; i++)
   964   0014EA  0E00               	movlw	0
   965   0014EC  6E47               	movwf	(lcd_8bit_send_data@i+1)^0,c
   966   0014EE  0E00               	movlw	0
   967   0014F0  6E46               	movwf	lcd_8bit_send_data@i^0,c
   968   0014F2                     l2312:
   969   0014F2  5041               	movf	lcd_8bit_send_data@lcd^0,w,c
   970   0014F4  2446               	addwf	lcd_8bit_send_data@i^0,w,c
   971   0014F6  0F02               	addlw	2
   972   0014F8  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
   973   0014FA  C046  F043         	movff	lcd_8bit_send_data@i,??_lcd_8bit_send_data
   974   0014FE  C042  F044         	movff	lcd_8bit_send_data@data,??_lcd_8bit_send_data+1
   975   001502  2A43               	incf	??_lcd_8bit_send_data^0,f,c
   976   001504  EF86  F00A         	goto	u1424
   977   001508                     u1425:
   978   001508  90D8               	bcf	status,0,c
   979   00150A  3244               	rrcf	(??_lcd_8bit_send_data+1)^0,f,c
   980   00150C                     u1424:
   981   00150C  2E43               	decfsz	??_lcd_8bit_send_data^0,f,c
   982   00150E  EF84  F00A         	goto	u1425
   983   001512  5044               	movf	(??_lcd_8bit_send_data+1)^0,w,c
   984   001514  0B01               	andlw	1
   985   001516  6E38               	movwf	gpio_pin_write_logic@logic^0,c
   986   001518  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   987   00151C                     
   988                           ;ECU_layer/lcd/lcd.c: 386:         }
   989   00151C  4A46               	infsnz	lcd_8bit_send_data@i^0,f,c
   990   00151E  2A47               	incf	(lcd_8bit_send_data@i+1)^0,f,c
   991   001520  BE47               	btfsc	(lcd_8bit_send_data@i+1)^0,7,c
   992   001522  EF9C  F00A         	goto	u1431
   993   001526  5047               	movf	(lcd_8bit_send_data@i+1)^0,w,c
   994   001528  E109               	bnz	u1430
   995   00152A  0E08               	movlw	8
   996   00152C  5C46               	subwf	lcd_8bit_send_data@i^0,w,c
   997   00152E  A0D8               	btfss	status,0,c
   998   001530  EF9C  F00A         	goto	u1431
   999   001534  EF9E  F00A         	goto	u1430
  1000   001538                     u1431:
  1001   001538  EF79  F00A         	goto	l2312
  1002   00153C                     u1430:
  1003   00153C                     
  1004                           ;ECU_layer/lcd/lcd.c: 387:         ret = lcd_send_8bit_enable_signal(lcd);
  1005   00153C  C041  F03F         	movff	lcd_8bit_send_data@lcd,lcd_send_8bit_enable_signal@lcd
  1006   001540  ECF3  F00B         	call	_lcd_send_8bit_enable_signal	;wreg free
  1007   001544  6E45               	movwf	lcd_8bit_send_data@ret^0,c
  1008   001546                     l2320:
  1009                           
  1010                           ;ECU_layer/lcd/lcd.c: 389:     return ret;
  1011   001546  5045               	movf	lcd_8bit_send_data@ret^0,w,c
  1012   001548  0012               	return		;funcret
  1013   00154A                     __end_of_lcd_8bit_send_data:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _application_initializ *****************
  1017 ;; Defined at:
  1018 ;;		line 65 in file "application.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 4
  1039 ;; This function calls:
  1040 ;;		_lcd_4bit_init
  1041 ;;		_lcd_8bit_init
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text5
  1048   0018B0                     __ptext5:
  1049                           	callstack 0
  1050   0018B0                     _application_initializ:
  1051                           	callstack 26
  1052   0018B0                     
  1053                           ;application.c: 67:     ret = lcd_4bit_init(&lcd2);
  1054   0018B0  0E31               	movlw	low _lcd2
  1055   0018B2  6E49               	movwf	lcd_4bit_init@lcd^0,c
  1056   0018B4  EC96  F009         	call	_lcd_4bit_init	;wreg free
  1057   0018B8  6E68               	movwf	_ret^0,c
  1058                           
  1059                           ;application.c: 68:     ret = lcd_8bit_init(&lcd1);
  1060   0018BA  0E1F               	movlw	low _lcd1
  1061   0018BC  6E48               	movwf	lcd_8bit_init@lcd^0,c
  1062   0018BE  EC1C  F009         	call	_lcd_8bit_init	;wreg free
  1063   0018C2  6E68               	movwf	_ret^0,c
  1064   0018C4  0012               	return		;funcret
  1065   0018C6                     __end_of_application_initializ:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _lcd_8bit_init *****************
  1069 ;; Defined at:
  1070 ;;		line 307 in file "ECU_layer/lcd/lcd.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  lcd             1   17[COMRAM] PTR const struct .
  1073 ;;		 -> lcd1(10), 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  i               2   19[COMRAM] int 
  1076 ;;  ret             1   21[COMRAM] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      unsigned char 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1086 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;Total ram usage:        5 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 3
  1093 ;; This function calls:
  1094 ;;		_gpio_pin_Initialization
  1095 ;;		_lcd_8bit_send_command
  1096 ;; This function is called by:
  1097 ;;		_application_initializ
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text6
  1102   001238                     __ptext6:
  1103                           	callstack 0
  1104   001238                     _lcd_8bit_init:
  1105                           	callstack 26
  1106   001238                     
  1107                           ;ECU_layer/lcd/lcd.c: 311:     if (((void*)0) == lcd)
  1108   001238  5048               	movf	lcd_8bit_init@lcd^0,w,c
  1109   00123A  A4D8               	btfss	status,2,c
  1110   00123C  EF22  F009         	goto	u1481
  1111   001240  EF24  F009         	goto	u1480
  1112   001244                     u1481:
  1113   001244  EF28  F009         	goto	l2410
  1114   001248                     u1480:
  1115   001248                     
  1116                           ;ECU_layer/lcd/lcd.c: 312:     {;ECU_layer/lcd/lcd.c: 313:         ret = (STD_ReturnType
      +                          )0x00;
  1117   001248  0E00               	movlw	0
  1118   00124A  6E4C               	movwf	lcd_8bit_init@ret^0,c
  1119                           
  1120                           ;ECU_layer/lcd/lcd.c: 314:     }
  1121   00124C  EF94  F009         	goto	l2446
  1122   001250                     l2410:
  1123                           
  1124                           ;ECU_layer/lcd/lcd.c: 316:     {;ECU_layer/lcd/lcd.c: 317:         ret = gpio_pin_Initia
      +                          lization(&(lcd->lcd_rs));
  1125   001250  C048  F03F         	movff	lcd_8bit_init@lcd,gpio_pin_Initialization@_pin_config
  1126   001254  EC56  F00B         	call	_gpio_pin_Initialization	;wreg free
  1127   001258  6E4C               	movwf	lcd_8bit_init@ret^0,c
  1128                           
  1129                           ;ECU_layer/lcd/lcd.c: 318:         ret = gpio_pin_Initialization(&(lcd->lcd_en));
  1130   00125A  2848               	incf	lcd_8bit_init@lcd^0,w,c
  1131   00125C  6E3F               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1132   00125E  EC56  F00B         	call	_gpio_pin_Initialization	;wreg free
  1133   001262  6E4C               	movwf	lcd_8bit_init@ret^0,c
  1134   001264                     
  1135                           ;ECU_layer/lcd/lcd.c: 319:         for(int i=0 ; i<8 ; i++)
  1136   001264  0E00               	movlw	0
  1137   001266  6E4B               	movwf	(lcd_8bit_init@i+1)^0,c
  1138   001268  0E00               	movlw	0
  1139   00126A  6E4A               	movwf	lcd_8bit_init@i^0,c
  1140   00126C                     l2418:
  1141   00126C  5048               	movf	lcd_8bit_init@lcd^0,w,c
  1142   00126E  244A               	addwf	lcd_8bit_init@i^0,w,c
  1143   001270  0F02               	addlw	2
  1144   001272  6E3F               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1145   001274  EC56  F00B         	call	_gpio_pin_Initialization	;wreg free
  1146   001278                     
  1147                           ;ECU_layer/lcd/lcd.c: 322:         }
  1148   001278  4A4A               	infsnz	lcd_8bit_init@i^0,f,c
  1149   00127A  2A4B               	incf	(lcd_8bit_init@i+1)^0,f,c
  1150   00127C  BE4B               	btfsc	(lcd_8bit_init@i+1)^0,7,c
  1151   00127E  EF4A  F009         	goto	u1491
  1152   001282  504B               	movf	(lcd_8bit_init@i+1)^0,w,c
  1153   001284  E109               	bnz	u1490
  1154   001286  0E08               	movlw	8
  1155   001288  5C4A               	subwf	lcd_8bit_init@i^0,w,c
  1156   00128A  A0D8               	btfss	status,0,c
  1157   00128C  EF4A  F009         	goto	u1491
  1158   001290  EF4C  F009         	goto	u1490
  1159   001294                     u1491:
  1160   001294  EF36  F009         	goto	l2418
  1161   001298                     u1490:
  1162   001298                     
  1163                           ;ECU_layer/lcd/lcd.c: 323:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1164   001298  0E34               	movlw	52
  1165   00129A  6E49               	movwf	??_lcd_8bit_init^0,c
  1166   00129C  0EF2               	movlw	242
  1167   00129E                     u2107:
  1168   00129E  2EE8               	decfsz	wreg,f,c
  1169   0012A0  D7FE               	bra	u2107
  1170   0012A2  2E49               	decfsz	??_lcd_8bit_init^0,f,c
  1171   0012A4  D7FC               	bra	u2107
  1172   0012A6  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1173   0012AA  0E38               	movlw	56
  1174   0012AC  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1175   0012AE  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1176   0012B2                     
  1177                           ;ECU_layer/lcd/lcd.c: 325:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1178   0012B2  0E0D               	movlw	13
  1179   0012B4  6E49               	movwf	??_lcd_8bit_init^0,c
  1180   0012B6  0EFC               	movlw	252
  1181   0012B8                     u2117:
  1182   0012B8  2EE8               	decfsz	wreg,f,c
  1183   0012BA  D7FE               	bra	u2117
  1184   0012BC  2E49               	decfsz	??_lcd_8bit_init^0,f,c
  1185   0012BE  D7FC               	bra	u2117
  1186   0012C0  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1187   0012C4  0E38               	movlw	56
  1188   0012C6  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1189   0012C8  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1190   0012CC                     
  1191                           ;ECU_layer/lcd/lcd.c: 327:         _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  1192   0012CC  0E64               	movlw	100
  1193   0012CE                     u2127:
  1194   0012CE  2EE8               	decfsz	wreg,f,c
  1195   0012D0  D7FE               	bra	u2127
  1196   0012D2  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1197   0012D6  0E38               	movlw	56
  1198   0012D8  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1199   0012DA  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1200   0012DE  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1201   0012E2  0E01               	movlw	1
  1202   0012E4  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1203   0012E6  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1204   0012EA  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1205   0012EE  0E02               	movlw	2
  1206   0012F0  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1207   0012F2  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1208   0012F6  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1209   0012FA  0E06               	movlw	6
  1210   0012FC  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1211   0012FE  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1212   001302  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1213   001306  0E0C               	movlw	12
  1214   001308  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1215   00130A  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1216   00130E  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1217   001312  0E38               	movlw	56
  1218   001314  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1219   001316  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1220   00131A                     
  1221                           ;ECU_layer/lcd/lcd.c: 335:         ret = lcd_8bit_send_command(lcd , 0x80);
  1222   00131A  C048  F041         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  1223   00131E  0E80               	movlw	128
  1224   001320  6E42               	movwf	lcd_8bit_send_command@command^0,c
  1225   001322  ECA5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1226   001326  6E4C               	movwf	lcd_8bit_init@ret^0,c
  1227   001328                     l2446:
  1228                           
  1229                           ;ECU_layer/lcd/lcd.c: 337:     return ret;
  1230   001328  504C               	movf	lcd_8bit_init@ret^0,w,c
  1231   00132A  0012               	return		;funcret
  1232   00132C                     __end_of_lcd_8bit_init:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _lcd_8bit_send_command *****************
  1236 ;; Defined at:
  1237 ;;		line 346 in file "ECU_layer/lcd/lcd.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  lcd             1   10[COMRAM] PTR const struct .
  1240 ;;		 -> lcd1(10), 
  1241 ;;  command         1   11[COMRAM] unsigned char 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  i               2   15[COMRAM] int 
  1244 ;;  ret             1   14[COMRAM] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      unsigned char 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;Total ram usage:        7 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 2
  1261 ;; This function calls:
  1262 ;;		_gpio_pin_write_logic
  1263 ;;		_lcd_send_8bit_enable_signal
  1264 ;; This function is called by:
  1265 ;;		_lcd_8bit_init
  1266 ;;		_lcd_8bit_send_custom_char
  1267 ;;		_lcd_8bit_set_cursor
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text7
  1272   00154A                     __ptext7:
  1273                           	callstack 0
  1274   00154A                     _lcd_8bit_send_command:
  1275                           	callstack 25
  1276   00154A                     
  1277                           ;ECU_layer/lcd/lcd.c: 350:     if (((void*)0) == lcd)
  1278   00154A  5041               	movf	lcd_8bit_send_command@lcd^0,w,c
  1279   00154C  A4D8               	btfss	status,2,c
  1280   00154E  EFAB  F00A         	goto	u1351
  1281   001552  EFAD  F00A         	goto	u1350
  1282   001556                     u1351:
  1283   001556  EFB1  F00A         	goto	l2258
  1284   00155A                     u1350:
  1285   00155A                     
  1286                           ;ECU_layer/lcd/lcd.c: 351:     {;ECU_layer/lcd/lcd.c: 352:         ret = (STD_ReturnType
      +                          )0x00;
  1287   00155A  0E00               	movlw	0
  1288   00155C  6E45               	movwf	lcd_8bit_send_command@ret^0,c
  1289                           
  1290                           ;ECU_layer/lcd/lcd.c: 353:     }
  1291   00155E  EFE5  F00A         	goto	l2274
  1292   001562                     l2258:
  1293   001562  C041  F037         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1294   001566  0E00               	movlw	0
  1295   001568  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1296   00156A  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1297   00156E                     
  1298                           ;ECU_layer/lcd/lcd.c: 357:         for(int i = 0 ; i < 8 ; i++)
  1299   00156E  0E00               	movlw	0
  1300   001570  6E47               	movwf	(lcd_8bit_send_command@i+1)^0,c
  1301   001572  0E00               	movlw	0
  1302   001574  6E46               	movwf	lcd_8bit_send_command@i^0,c
  1303   001576                     l2266:
  1304   001576  5041               	movf	lcd_8bit_send_command@lcd^0,w,c
  1305   001578  2446               	addwf	lcd_8bit_send_command@i^0,w,c
  1306   00157A  0F02               	addlw	2
  1307   00157C  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1308   00157E  C046  F043         	movff	lcd_8bit_send_command@i,??_lcd_8bit_send_command
  1309   001582  C042  F044         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1310   001586  2A43               	incf	??_lcd_8bit_send_command^0,f,c
  1311   001588  EFC8  F00A         	goto	u1364
  1312   00158C                     u1365:
  1313   00158C  90D8               	bcf	status,0,c
  1314   00158E  3244               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1315   001590                     u1364:
  1316   001590  2E43               	decfsz	??_lcd_8bit_send_command^0,f,c
  1317   001592  EFC6  F00A         	goto	u1365
  1318   001596  5044               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1319   001598  0B01               	andlw	1
  1320   00159A  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1321   00159C  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1322   0015A0                     
  1323                           ;ECU_layer/lcd/lcd.c: 360:         }
  1324   0015A0  4A46               	infsnz	lcd_8bit_send_command@i^0,f,c
  1325   0015A2  2A47               	incf	(lcd_8bit_send_command@i+1)^0,f,c
  1326   0015A4  BE47               	btfsc	(lcd_8bit_send_command@i+1)^0,7,c
  1327   0015A6  EFDE  F00A         	goto	u1371
  1328   0015AA  5047               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  1329   0015AC  E109               	bnz	u1370
  1330   0015AE  0E08               	movlw	8
  1331   0015B0  5C46               	subwf	lcd_8bit_send_command@i^0,w,c
  1332   0015B2  A0D8               	btfss	status,0,c
  1333   0015B4  EFDE  F00A         	goto	u1371
  1334   0015B8  EFE0  F00A         	goto	u1370
  1335   0015BC                     u1371:
  1336   0015BC  EFBB  F00A         	goto	l2266
  1337   0015C0                     u1370:
  1338   0015C0                     
  1339                           ;ECU_layer/lcd/lcd.c: 361:         ret = lcd_send_8bit_enable_signal(lcd);
  1340   0015C0  C041  F03F         	movff	lcd_8bit_send_command@lcd,lcd_send_8bit_enable_signal@lcd
  1341   0015C4  ECF3  F00B         	call	_lcd_send_8bit_enable_signal	;wreg free
  1342   0015C8  6E45               	movwf	lcd_8bit_send_command@ret^0,c
  1343   0015CA                     l2274:
  1344                           
  1345                           ;ECU_layer/lcd/lcd.c: 363:     return ret;
  1346   0015CA  5045               	movf	lcd_8bit_send_command@ret^0,w,c
  1347   0015CC  0012               	return		;funcret
  1348   0015CE                     __end_of_lcd_8bit_send_command:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _lcd_send_8bit_enable_signal *****************
  1352 ;; Defined at:
  1353 ;;		line 512 in file "ECU_layer/lcd/lcd.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  lcd             1    8[COMRAM] PTR const struct .
  1356 ;;		 -> lcd1(10), 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  ret             1    9[COMRAM] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      unsigned char 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1368 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;Total ram usage:        2 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 1
  1375 ;; This function calls:
  1376 ;;		_gpio_pin_write_logic
  1377 ;; This function is called by:
  1378 ;;		_lcd_8bit_send_command
  1379 ;;		_lcd_8bit_send_data
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text8
  1384   0017E6                     __ptext8:
  1385                           	callstack 0
  1386   0017E6                     _lcd_send_8bit_enable_signal:
  1387                           	callstack 25
  1388   0017E6                     
  1389                           ;ECU_layer/lcd/lcd.c: 516:     if (((void*)0) == lcd)
  1390   0017E6  503F               	movf	lcd_send_8bit_enable_signal@lcd^0,w,c
  1391   0017E8  A4D8               	btfss	status,2,c
  1392   0017EA  EFF9  F00B         	goto	u1251
  1393   0017EE  EFFB  F00B         	goto	u1250
  1394   0017F2                     u1251:
  1395   0017F2  EFFF  F00B         	goto	l2194
  1396   0017F6                     u1250:
  1397   0017F6                     
  1398                           ;ECU_layer/lcd/lcd.c: 517:     {;ECU_layer/lcd/lcd.c: 518:         ret = (STD_ReturnType
      +                          )0x00;
  1399   0017F6  0E00               	movlw	0
  1400   0017F8  6E40               	movwf	lcd_send_8bit_enable_signal@ret^0,c
  1401                           
  1402                           ;ECU_layer/lcd/lcd.c: 519:     }
  1403   0017FA  EF0D  F00C         	goto	l2198
  1404   0017FE                     l2194:
  1405   0017FE  283F               	incf	lcd_send_8bit_enable_signal@lcd^0,w,c
  1406   001800  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1407   001802  0E01               	movlw	1
  1408   001804  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1409   001806  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1410   00180A                     
  1411                           ;ECU_layer/lcd/lcd.c: 523:         _delay((unsigned long)((1)*(8000000UL/4000000.0)));
  1412   00180A  D000               	nop2		;2 cycle nop
  1413                           
  1414                           ;ECU_layer/lcd/lcd.c: 524:         ret = gpio_pin_write_logic(&(lcd->lcd_en) , GPIO_LOW)
      +                          ;
  1415   00180C  283F               	incf	lcd_send_8bit_enable_signal@lcd^0,w,c
  1416   00180E  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1417   001810  0E00               	movlw	0
  1418   001812  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1419   001814  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1420   001818  6E40               	movwf	lcd_send_8bit_enable_signal@ret^0,c
  1421   00181A                     l2198:
  1422                           
  1423                           ;ECU_layer/lcd/lcd.c: 526:     return ret;
  1424   00181A  5040               	movf	lcd_send_8bit_enable_signal@ret^0,w,c
  1425   00181C  0012               	return		;funcret
  1426   00181E                     __end_of_lcd_send_8bit_enable_signal:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _lcd_4bit_init *****************
  1430 ;; Defined at:
  1431 ;;		line 17 in file "ECU_layer/lcd/lcd.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  lcd             1   18[COMRAM] PTR const struct .
  1434 ;;		 -> lcd2(6), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  i               2   20[COMRAM] int 
  1437 ;;  ret             1   22[COMRAM] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;Total ram usage:        5 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 3
  1454 ;; This function calls:
  1455 ;;		_gpio_pin_Initialization
  1456 ;;		_lcd_4bit_send_command
  1457 ;; This function is called by:
  1458 ;;		_application_initializ
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text9
  1463   00132C                     __ptext9:
  1464                           	callstack 0
  1465   00132C                     _lcd_4bit_init:
  1466                           	callstack 26
  1467   00132C                     
  1468                           ;ECU_layer/lcd/lcd.c: 21:     if (((void*)0) == lcd)
  1469   00132C  5049               	movf	lcd_4bit_init@lcd^0,w,c
  1470   00132E  A4D8               	btfss	status,2,c
  1471   001330  EF9C  F009         	goto	u1451
  1472   001334  EF9E  F009         	goto	u1450
  1473   001338                     u1451:
  1474   001338  EFA2  F009         	goto	l2354
  1475   00133C                     u1450:
  1476   00133C                     
  1477                           ;ECU_layer/lcd/lcd.c: 22:     {;ECU_layer/lcd/lcd.c: 23:         ret = (STD_ReturnType)0
      +                          x00;
  1478   00133C  0E00               	movlw	0
  1479   00133E  6E4D               	movwf	lcd_4bit_init@ret^0,c
  1480                           
  1481                           ;ECU_layer/lcd/lcd.c: 24:     }
  1482   001340  EF0E  F00A         	goto	l2390
  1483   001344                     l2354:
  1484                           
  1485                           ;ECU_layer/lcd/lcd.c: 26:     {;ECU_layer/lcd/lcd.c: 27:         ret = gpio_pin_Initiali
      +                          zation(&(lcd->lcd_rs));
  1486   001344  C049  F03F         	movff	lcd_4bit_init@lcd,gpio_pin_Initialization@_pin_config
  1487   001348  EC56  F00B         	call	_gpio_pin_Initialization	;wreg free
  1488   00134C  6E4D               	movwf	lcd_4bit_init@ret^0,c
  1489                           
  1490                           ;ECU_layer/lcd/lcd.c: 28:         ret = gpio_pin_Initialization(&(lcd->lcd_en));
  1491   00134E  2849               	incf	lcd_4bit_init@lcd^0,w,c
  1492   001350  6E3F               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1493   001352  EC56  F00B         	call	_gpio_pin_Initialization	;wreg free
  1494   001356  6E4D               	movwf	lcd_4bit_init@ret^0,c
  1495   001358                     
  1496                           ;ECU_layer/lcd/lcd.c: 29:         for(int i=0 ; i<4 ; i++)
  1497   001358  0E00               	movlw	0
  1498   00135A  6E4C               	movwf	(lcd_4bit_init@i+1)^0,c
  1499   00135C  0E00               	movlw	0
  1500   00135E  6E4B               	movwf	lcd_4bit_init@i^0,c
  1501   001360                     l2362:
  1502   001360  5049               	movf	lcd_4bit_init@lcd^0,w,c
  1503   001362  244B               	addwf	lcd_4bit_init@i^0,w,c
  1504   001364  0F02               	addlw	2
  1505   001366  6E3F               	movwf	gpio_pin_Initialization@_pin_config^0,c
  1506   001368  EC56  F00B         	call	_gpio_pin_Initialization	;wreg free
  1507   00136C                     
  1508                           ;ECU_layer/lcd/lcd.c: 32:         }
  1509   00136C  4A4B               	infsnz	lcd_4bit_init@i^0,f,c
  1510   00136E  2A4C               	incf	(lcd_4bit_init@i+1)^0,f,c
  1511   001370  BE4C               	btfsc	(lcd_4bit_init@i+1)^0,7,c
  1512   001372  EFC4  F009         	goto	u1461
  1513   001376  504C               	movf	(lcd_4bit_init@i+1)^0,w,c
  1514   001378  E109               	bnz	u1460
  1515   00137A  0E04               	movlw	4
  1516   00137C  5C4B               	subwf	lcd_4bit_init@i^0,w,c
  1517   00137E  A0D8               	btfss	status,0,c
  1518   001380  EFC4  F009         	goto	u1461
  1519   001384  EFC6  F009         	goto	u1460
  1520   001388                     u1461:
  1521   001388  EFB0  F009         	goto	l2362
  1522   00138C                     u1460:
  1523   00138C                     
  1524                           ;ECU_layer/lcd/lcd.c: 33:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1525   00138C  0E34               	movlw	52
  1526   00138E  6E4A               	movwf	??_lcd_4bit_init^0,c
  1527   001390  0EF2               	movlw	242
  1528   001392                     u2137:
  1529   001392  2EE8               	decfsz	wreg,f,c
  1530   001394  D7FE               	bra	u2137
  1531   001396  2E4A               	decfsz	??_lcd_4bit_init^0,f,c
  1532   001398  D7FC               	bra	u2137
  1533   00139A  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1534   00139E  0E38               	movlw	56
  1535   0013A0  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1536   0013A2  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1537   0013A6                     
  1538                           ;ECU_layer/lcd/lcd.c: 35:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1539   0013A6  0E0D               	movlw	13
  1540   0013A8  6E4A               	movwf	??_lcd_4bit_init^0,c
  1541   0013AA  0EFC               	movlw	252
  1542   0013AC                     u2147:
  1543   0013AC  2EE8               	decfsz	wreg,f,c
  1544   0013AE  D7FE               	bra	u2147
  1545   0013B0  2E4A               	decfsz	??_lcd_4bit_init^0,f,c
  1546   0013B2  D7FC               	bra	u2147
  1547   0013B4  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1548   0013B8  0E38               	movlw	56
  1549   0013BA  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1550   0013BC  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1551   0013C0                     
  1552                           ;ECU_layer/lcd/lcd.c: 37:         _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  1553   0013C0  0E64               	movlw	100
  1554   0013C2                     u2157:
  1555   0013C2  2EE8               	decfsz	wreg,f,c
  1556   0013C4  D7FE               	bra	u2157
  1557   0013C6  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1558   0013CA  0E38               	movlw	56
  1559   0013CC  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1560   0013CE  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1561   0013D2  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1562   0013D6  0E01               	movlw	1
  1563   0013D8  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1564   0013DA  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1565   0013DE  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1566   0013E2  0E02               	movlw	2
  1567   0013E4  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1568   0013E6  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1569   0013EA  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1570   0013EE  0E06               	movlw	6
  1571   0013F0  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1572   0013F2  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1573   0013F6  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1574   0013FA  0E0C               	movlw	12
  1575   0013FC  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1576   0013FE  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1577   001402  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1578   001406  0E28               	movlw	40
  1579   001408  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1580   00140A  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1581   00140E                     
  1582                           ;ECU_layer/lcd/lcd.c: 45:         ret = lcd_4bit_send_command(lcd , 0x80);
  1583   00140E  C049  F046         	movff	lcd_4bit_init@lcd,lcd_4bit_send_command@lcd
  1584   001412  0E80               	movlw	128
  1585   001414  6E47               	movwf	lcd_4bit_send_command@command^0,c
  1586   001416  EC85  F00B         	call	_lcd_4bit_send_command	;wreg free
  1587   00141A  6E4D               	movwf	lcd_4bit_init@ret^0,c
  1588   00141C                     l2390:
  1589                           
  1590                           ;ECU_layer/lcd/lcd.c: 48:     return ret;
  1591   00141C  504D               	movf	lcd_4bit_init@ret^0,w,c
  1592   00141E  0012               	return		;funcret
  1593   001420                     __end_of_lcd_4bit_init:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _lcd_4bit_send_command *****************
  1597 ;; Defined at:
  1598 ;;		line 57 in file "ECU_layer/lcd/lcd.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  lcd             1   15[COMRAM] PTR const struct .
  1601 ;;		 -> lcd2(6), 
  1602 ;;  command         1   16[COMRAM] unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  ret             1   17[COMRAM] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      unsigned char 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;Total ram usage:        3 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 2
  1621 ;; This function calls:
  1622 ;;		_gpio_pin_write_logic
  1623 ;;		_lcd_send_4bit_enable_signal
  1624 ;;		_lcd_send_4bits
  1625 ;; This function is called by:
  1626 ;;		_lcd_4bit_init
  1627 ;;		_lcd_4bit_send_custom_char
  1628 ;;		_lcd_4bit_set_cursor
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text10
  1633   00170A                     __ptext10:
  1634                           	callstack 0
  1635   00170A                     _lcd_4bit_send_command:
  1636                           	callstack 26
  1637   00170A                     
  1638                           ;ECU_layer/lcd/lcd.c: 61:     if (((void*)0) == lcd)
  1639   00170A  5046               	movf	lcd_4bit_send_command@lcd^0,w,c
  1640   00170C  A4D8               	btfss	status,2,c
  1641   00170E  EF8B  F00B         	goto	u1401
  1642   001712  EF8D  F00B         	goto	u1400
  1643   001716                     u1401:
  1644   001716  EF91  F00B         	goto	l2294
  1645   00171A                     u1400:
  1646   00171A                     
  1647                           ;ECU_layer/lcd/lcd.c: 62:     {;ECU_layer/lcd/lcd.c: 63:         ret = (STD_ReturnType)0
      +                          x00;
  1648   00171A  0E00               	movlw	0
  1649   00171C  6E48               	movwf	lcd_4bit_send_command@ret^0,c
  1650                           
  1651                           ;ECU_layer/lcd/lcd.c: 64:     }
  1652   00171E  EFB1  F00B         	goto	l2296
  1653   001722                     l2294:
  1654                           
  1655                           ;ECU_layer/lcd/lcd.c: 66:     {;ECU_layer/lcd/lcd.c: 67:         ret = gpio_pin_write_lo
      +                          gic(&(lcd->lcd_rs),GPIO_LOW);
  1656   001722  C046  F037         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1657   001726  0E00               	movlw	0
  1658   001728  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1659   00172A  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1660   00172E  6E48               	movwf	lcd_4bit_send_command@ret^0,c
  1661                           
  1662                           ;ECU_layer/lcd/lcd.c: 68:         ret = lcd_send_4bits(lcd, command >> 4);
  1663   001730  C046  F03F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1664   001734  3847               	swapf	lcd_4bit_send_command@command^0,w,c
  1665   001736  0B0F               	andlw	15
  1666   001738  6E40               	movwf	lcd_send_4bits@data_command^0,c
  1667   00173A  ECE7  F00A         	call	_lcd_send_4bits	;wreg free
  1668   00173E  6E48               	movwf	lcd_4bit_send_command@ret^0,c
  1669                           
  1670                           ;ECU_layer/lcd/lcd.c: 69:         ret = lcd_send_4bit_enable_signal(lcd);
  1671   001740  C046  F03F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable_signal@lcd
  1672   001744  ECB3  F00B         	call	_lcd_send_4bit_enable_signal	;wreg free
  1673   001748  6E48               	movwf	lcd_4bit_send_command@ret^0,c
  1674                           
  1675                           ;ECU_layer/lcd/lcd.c: 70:         ret = lcd_send_4bits(lcd, command);
  1676   00174A  C046  F03F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1677   00174E  C047  F040         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  1678   001752  ECE7  F00A         	call	_lcd_send_4bits	;wreg free
  1679   001756  6E48               	movwf	lcd_4bit_send_command@ret^0,c
  1680                           
  1681                           ;ECU_layer/lcd/lcd.c: 71:         ret = lcd_send_4bit_enable_signal(lcd);
  1682   001758  C046  F03F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable_signal@lcd
  1683   00175C  ECB3  F00B         	call	_lcd_send_4bit_enable_signal	;wreg free
  1684   001760  6E48               	movwf	lcd_4bit_send_command@ret^0,c
  1685   001762                     l2296:
  1686                           
  1687                           ;ECU_layer/lcd/lcd.c: 73:     return ret;
  1688   001762  5048               	movf	lcd_4bit_send_command@ret^0,w,c
  1689   001764  0012               	return		;funcret
  1690   001766                     __end_of_lcd_4bit_send_command:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _lcd_send_4bits *****************
  1694 ;; Defined at:
  1695 ;;		line 225 in file "ECU_layer/lcd/lcd.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  lcd             1    8[COMRAM] PTR const struct .
  1698 ;;		 -> lcd2(6), 
  1699 ;;  data_command    1    9[COMRAM] unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  i               2   13[COMRAM] int 
  1702 ;;  ret             1   12[COMRAM] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      unsigned char 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;Total ram usage:        7 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 1
  1719 ;; This function calls:
  1720 ;;		_gpio_pin_write_logic
  1721 ;; This function is called by:
  1722 ;;		_lcd_4bit_send_command
  1723 ;;		_lcd_4bit_send_data
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text11
  1728   0015CE                     __ptext11:
  1729                           	callstack 0
  1730   0015CE                     _lcd_send_4bits:
  1731                           	callstack 26
  1732   0015CE                     
  1733                           ;ECU_layer/lcd/lcd.c: 229:     if (((void*)0) == lcd)
  1734   0015CE  503F               	movf	lcd_send_4bits@lcd^0,w,c
  1735   0015D0  A4D8               	btfss	status,2,c
  1736   0015D2  EFED  F00A         	goto	u1311
  1737   0015D6  EFEF  F00A         	goto	u1310
  1738   0015DA                     u1311:
  1739   0015DA  EFF3  F00A         	goto	l2224
  1740   0015DE                     u1310:
  1741   0015DE                     
  1742                           ;ECU_layer/lcd/lcd.c: 230:     {;ECU_layer/lcd/lcd.c: 231:         ret = (STD_ReturnType
      +                          )0x00;
  1743   0015DE  0E00               	movlw	0
  1744   0015E0  6E43               	movwf	lcd_send_4bits@ret^0,c
  1745                           
  1746                           ;ECU_layer/lcd/lcd.c: 232:     }
  1747   0015E2  EF1D  F00B         	goto	l2236
  1748   0015E6                     l2224:
  1749                           
  1750                           ;ECU_layer/lcd/lcd.c: 234:     {;ECU_layer/lcd/lcd.c: 235:         for(int i = 0 ; i < 4
      +                           ; i++)
  1751   0015E6  0E00               	movlw	0
  1752   0015E8  6E45               	movwf	(lcd_send_4bits@i+1)^0,c
  1753   0015EA  0E00               	movlw	0
  1754   0015EC  6E44               	movwf	lcd_send_4bits@i^0,c
  1755   0015EE                     l2230:
  1756                           
  1757                           ;ECU_layer/lcd/lcd.c: 236:         {;ECU_layer/lcd/lcd.c: 237:             ret = gpio_pi
      +                          n_write_logic(&(lcd->lcd_data[i]) , (data_command >> i) & 0x01);
  1758   0015EE  503F               	movf	lcd_send_4bits@lcd^0,w,c
  1759   0015F0  2444               	addwf	lcd_send_4bits@i^0,w,c
  1760   0015F2  0F02               	addlw	2
  1761   0015F4  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1762   0015F6  C044  F041         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  1763   0015FA  C040  F042         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  1764   0015FE  2A41               	incf	??_lcd_send_4bits^0,f,c
  1765   001600  EF04  F00B         	goto	u1324
  1766   001604                     u1325:
  1767   001604  90D8               	bcf	status,0,c
  1768   001606  3242               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  1769   001608                     u1324:
  1770   001608  2E41               	decfsz	??_lcd_send_4bits^0,f,c
  1771   00160A  EF02  F00B         	goto	u1325
  1772   00160E  5042               	movf	(??_lcd_send_4bits+1)^0,w,c
  1773   001610  0B01               	andlw	1
  1774   001612  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1775   001614  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1776   001618  6E43               	movwf	lcd_send_4bits@ret^0,c
  1777   00161A                     
  1778                           ;ECU_layer/lcd/lcd.c: 238:         }
  1779   00161A  4A44               	infsnz	lcd_send_4bits@i^0,f,c
  1780   00161C  2A45               	incf	(lcd_send_4bits@i+1)^0,f,c
  1781   00161E  BE45               	btfsc	(lcd_send_4bits@i+1)^0,7,c
  1782   001620  EF1B  F00B         	goto	u1331
  1783   001624  5045               	movf	(lcd_send_4bits@i+1)^0,w,c
  1784   001626  E109               	bnz	u1330
  1785   001628  0E04               	movlw	4
  1786   00162A  5C44               	subwf	lcd_send_4bits@i^0,w,c
  1787   00162C  A0D8               	btfss	status,0,c
  1788   00162E  EF1B  F00B         	goto	u1331
  1789   001632  EF1D  F00B         	goto	u1330
  1790   001636                     u1331:
  1791   001636  EFF7  F00A         	goto	l2230
  1792   00163A                     u1330:
  1793   00163A                     l2236:
  1794                           
  1795                           ;ECU_layer/lcd/lcd.c: 240:     return ret;
  1796   00163A  5043               	movf	lcd_send_4bits@ret^0,w,c
  1797   00163C  0012               	return		;funcret
  1798   00163E                     __end_of_lcd_send_4bits:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _lcd_send_4bit_enable_signal *****************
  1802 ;; Defined at:
  1803 ;;		line 249 in file "ECU_layer/lcd/lcd.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  lcd             1    8[COMRAM] PTR const struct .
  1806 ;;		 -> lcd2(6), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  ret             1   10[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      unsigned char 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        3 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 1
  1825 ;; This function calls:
  1826 ;;		_gpio_pin_write_logic
  1827 ;; This function is called by:
  1828 ;;		_lcd_4bit_send_command
  1829 ;;		_lcd_4bit_send_data
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text12
  1834   001766                     __ptext12:
  1835                           	callstack 0
  1836   001766                     _lcd_send_4bit_enable_signal:
  1837                           	callstack 26
  1838   001766                     
  1839                           ;ECU_layer/lcd/lcd.c: 253:     if (((void*)0) == lcd)
  1840   001766  503F               	movf	lcd_send_4bit_enable_signal@lcd^0,w,c
  1841   001768  A4D8               	btfss	status,2,c
  1842   00176A  EFB9  F00B         	goto	u1341
  1843   00176E  EFBB  F00B         	goto	u1340
  1844   001772                     u1341:
  1845   001772  EFBF  F00B         	goto	l2244
  1846   001776                     u1340:
  1847   001776                     
  1848                           ;ECU_layer/lcd/lcd.c: 254:     {;ECU_layer/lcd/lcd.c: 255:         ret = (STD_ReturnType
      +                          )0x00;
  1849   001776  0E00               	movlw	0
  1850   001778  6E41               	movwf	lcd_send_4bit_enable_signal@ret^0,c
  1851                           
  1852                           ;ECU_layer/lcd/lcd.c: 256:     }
  1853   00177A  EFD3  F00B         	goto	l2250
  1854   00177E                     l2244:
  1855   00177E  283F               	incf	lcd_send_4bit_enable_signal@lcd^0,w,c
  1856   001780  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1857   001782  0E01               	movlw	1
  1858   001784  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1859   001786  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1860   00178A                     
  1861                           ;ECU_layer/lcd/lcd.c: 260:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1862   00178A  0E03               	movlw	3
  1863   00178C  6E40               	movwf	??_lcd_send_4bit_enable_signal^0,c
  1864   00178E  0E98               	movlw	152
  1865   001790                     u2167:
  1866   001790  2EE8               	decfsz	wreg,f,c
  1867   001792  D7FE               	bra	u2167
  1868   001794  2E40               	decfsz	??_lcd_send_4bit_enable_signal^0,f,c
  1869   001796  D7FC               	bra	u2167
  1870   001798                     
  1871                           ;ECU_layer/lcd/lcd.c: 261:         ret = gpio_pin_write_logic(&(lcd->lcd_en) , GPIO_LOW)
      +                          ;
  1872   001798  283F               	incf	lcd_send_4bit_enable_signal@lcd^0,w,c
  1873   00179A  6E37               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1874   00179C  0E00               	movlw	0
  1875   00179E  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1876   0017A0  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1877   0017A4  6E41               	movwf	lcd_send_4bit_enable_signal@ret^0,c
  1878   0017A6                     l2250:
  1879                           
  1880                           ;ECU_layer/lcd/lcd.c: 263:     return ret;
  1881   0017A6  5041               	movf	lcd_send_4bit_enable_signal@ret^0,w,c
  1882   0017A8  0012               	return		;funcret
  1883   0017AA                     __end_of_lcd_send_4bit_enable_signal:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _gpio_pin_Initialization *****************
  1887 ;; Defined at:
  1888 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1891 ;;		 -> lcd2$lcd_data(4), lcd2(6), lcd1$lcd_data(8), lcd1(10), 
  1892 ;;		 -> ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), e
      +cu_dc_motor_initializ@dc_motor_pin_1(1), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  ret             1   10[COMRAM] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      unsigned char 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;Total ram usage:        3 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 1
  1911 ;; This function calls:
  1912 ;;		_gpio_pin_direction_init
  1913 ;;		_gpio_pin_write_logic
  1914 ;; This function is called by:
  1915 ;;		_lcd_4bit_init
  1916 ;;		_lcd_8bit_init
  1917 ;;		_seg_initialization
  1918 ;;		_ecu_dc_motor_initializ
  1919 ;;		_keypad_initialize
  1920 ;;		_ecu_led_initializ
  1921 ;;		_ecu_relay_initializ
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text13
  1926   0016AC                     __ptext13:
  1927                           	callstack 0
  1928   0016AC                     _gpio_pin_Initialization:
  1929                           	callstack 27
  1930   0016AC                     
  1931                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
  1932   0016AC  503F               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1933   0016AE  B4D8               	btfsc	status,2,c
  1934   0016B0  EF5C  F00B         	goto	u1381
  1935   0016B4  EF5E  F00B         	goto	u1380
  1936   0016B8                     u1381:
  1937   0016B8  EF6E  F00B         	goto	l2282
  1938   0016BC                     u1380:
  1939   0016BC  503F               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1940   0016BE  6ED9               	movwf	fsr2l,c
  1941   0016C0  6ADA               	clrf	fsr2h,c
  1942   0016C2  30DF               	rrcf	223,w,c
  1943   0016C4  32E8               	rrcf	wreg,f,c
  1944   0016C6  32E8               	rrcf	wreg,f,c
  1945   0016C8  0B07               	andlw	7
  1946   0016CA  6E40               	movwf	??_gpio_pin_Initialization^0,c
  1947   0016CC  0E07               	movlw	7
  1948   0016CE  6440               	cpfsgt	??_gpio_pin_Initialization^0,c
  1949   0016D0  EF6C  F00B         	goto	u1391
  1950   0016D4  EF6E  F00B         	goto	u1390
  1951   0016D8                     u1391:
  1952   0016D8  EF72  F00B         	goto	l2284
  1953   0016DC                     u1390:
  1954   0016DC                     l2282:
  1955                           
  1956                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
  1957   0016DC  0E00               	movlw	0
  1958   0016DE  6E41               	movwf	gpio_pin_Initialization@ret^0,c
  1959                           
  1960                           ;MCAL_layer/GPIO/gpio.c: 154:     }
  1961   0016E0  EF83  F00B         	goto	l2286
  1962   0016E4                     l2284:
  1963                           
  1964                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
  1965   0016E4  C03F  F037         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
  1966   0016E8  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
  1967   0016EC  6E41               	movwf	gpio_pin_Initialization@ret^0,c
  1968                           
  1969                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
  1970   0016EE  C03F  F037         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
  1971   0016F2  503F               	movf	gpio_pin_Initialization@_pin_config^0,w,c
  1972   0016F4  6ED9               	movwf	fsr2l,c
  1973   0016F6  6ADA               	clrf	fsr2h,c
  1974   0016F8  0E00               	movlw	0
  1975   0016FA  BEDF               	btfsc	indf2,7,c
  1976   0016FC  0E01               	movlw	1
  1977   0016FE  6E38               	movwf	gpio_pin_write_logic@logic^0,c
  1978   001700  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1979   001704  6E41               	movwf	gpio_pin_Initialization@ret^0,c
  1980   001706                     l2286:
  1981                           
  1982                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
  1983   001706  5041               	movf	gpio_pin_Initialization@ret^0,w,c
  1984   001708  0012               	return		;funcret
  1985   00170A                     __end_of_gpio_pin_Initialization:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _gpio_pin_write_logic *****************
  1989 ;; Defined at:
  1990 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1993 ;;		 -> lcd2$lcd_data(4), lcd2(6), lcd1$lcd_data(8), lcd1(10), 
  1994 ;;		 -> ecu_relay_turn_off@relay_init(1), ecu_relay_turn_on@relay_init(1), ecu_relay_initializ@relay_init(1), ecu_led_tu
      +rn_off@_pin_config(1), 
  1995 ;;		 -> ecu_led_turn_on@_pin_config(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_stop@dc_motor_pin_2(1), ecu_dc_mo
      +tor_stop@dc_motor_pin_1(1), 
  1996 ;;		 -> ecu_dc_motor_move_left@dc_motor_pin_2(1), ecu_dc_motor_move_left@dc_motor_pin_1(1), ecu_dc_motor_move_right@dc_m
      +otor_pin_2(1), ecu_dc_motor_move_right@dc_motor_pin_1(1), 
  1997 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
  1998 ;;  logic           1    1[COMRAM] enum E2981
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  ret             1    7[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        8 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_lcd_4bit_send_command
  2020 ;;		_lcd_send_4bits
  2021 ;;		_lcd_send_4bit_enable_signal
  2022 ;;		_lcd_8bit_send_command
  2023 ;;		_lcd_8bit_send_data
  2024 ;;		_lcd_send_8bit_enable_signal
  2025 ;;		_gpio_pin_Initialization
  2026 ;;		_seg_write_number
  2027 ;;		_ecu_dc_motor_move_right
  2028 ;;		_ecu_dc_motor_move_left
  2029 ;;		_ecu_dc_motor_stop
  2030 ;;		_keypad_get_value
  2031 ;;		_lcd_4bit_send_data
  2032 ;;		_ecu_led_turn_on
  2033 ;;		_ecu_led_turn_off
  2034 ;;		_ecu_relay_turn_on
  2035 ;;		_ecu_relay_turn_off
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text14
  2040   001128                     __ptext14:
  2041                           	callstack 0
  2042   001128                     _gpio_pin_write_logic:
  2043                           	callstack 25
  2044   001128                     
  2045                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
  2046   001128  0E01               	movlw	1
  2047   00112A  6E3E               	movwf	gpio_pin_write_logic@ret^0,c
  2048                           
  2049                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  2050   00112C  5037               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2051   00112E  B4D8               	btfsc	status,2,c
  2052   001130  EF9C  F008         	goto	u1211
  2053   001134  EF9E  F008         	goto	u1210
  2054   001138                     u1211:
  2055   001138  EFAE  F008         	goto	l2172
  2056   00113C                     u1210:
  2057   00113C  5037               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2058   00113E  6ED9               	movwf	fsr2l,c
  2059   001140  6ADA               	clrf	fsr2h,c
  2060   001142  30DF               	rrcf	223,w,c
  2061   001144  32E8               	rrcf	wreg,f,c
  2062   001146  32E8               	rrcf	wreg,f,c
  2063   001148  0B07               	andlw	7
  2064   00114A  6E39               	movwf	??_gpio_pin_write_logic^0,c
  2065   00114C  0E07               	movlw	7
  2066   00114E  6439               	cpfsgt	??_gpio_pin_write_logic^0,c
  2067   001150  EFAC  F008         	goto	u1221
  2068   001154  EFAE  F008         	goto	u1220
  2069   001158                     u1221:
  2070   001158  EF05  F009         	goto	l2180
  2071   00115C                     u1220:
  2072   00115C                     l2172:
  2073                           
  2074                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
  2075   00115C  0E00               	movlw	0
  2076   00115E  6E3E               	movwf	gpio_pin_write_logic@ret^0,c
  2077                           
  2078                           ;MCAL_layer/GPIO/gpio.c: 82:     }
  2079   001160  EF1A  F009         	goto	l2182
  2080   001164                     l2174:
  2081                           
  2082                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  2083   001164  5037               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2084   001166  6ED9               	movwf	fsr2l,c
  2085   001168  6ADA               	clrf	fsr2h,c
  2086   00116A  30DF               	rrcf	223,w,c
  2087   00116C  32E8               	rrcf	wreg,f,c
  2088   00116E  32E8               	rrcf	wreg,f,c
  2089   001170  0B07               	andlw	7
  2090   001172  6E39               	movwf	??_gpio_pin_write_logic^0,c
  2091   001174  0E01               	movlw	1
  2092   001176  6E3A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2093   001178  2A39               	incf	??_gpio_pin_write_logic^0,f,c
  2094   00117A  EFC1  F008         	goto	u1234
  2095   00117E                     u1235:
  2096   00117E  90D8               	bcf	status,0,c
  2097   001180  363A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2098   001182                     u1234:
  2099   001182  2E39               	decfsz	??_gpio_pin_write_logic^0,f,c
  2100   001184  EFBF  F008         	goto	u1235
  2101   001188  503A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2102   00118A  0AFF               	xorlw	255
  2103   00118C  6E3B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2104   00118E  5037               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2105   001190  6ED9               	movwf	fsr2l,c
  2106   001192  6ADA               	clrf	fsr2h,c
  2107   001194  50DF               	movf	223,w,c
  2108   001196  0B07               	andlw	7
  2109   001198  0D02               	mullw	2
  2110   00119A  50F3               	movf	243,w,c
  2111   00119C  0F0B               	addlw	low _lat_registers
  2112   00119E  6ED9               	movwf	fsr2l,c
  2113   0011A0  6ADA               	clrf	fsr2h,c
  2114   0011A2  CFDE F03C          	movff	postinc2,??_gpio_pin_write_logic+3
  2115   0011A6  CFDD F03D          	movff	postdec2,??_gpio_pin_write_logic+4
  2116   0011AA  C03C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2117   0011AE  C03D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2118   0011B2  503B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2119   0011B4  16DF               	andwf	indf2,f,c
  2120                           
  2121                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
  2122   0011B6  EF1A  F009         	goto	l2182
  2123   0011BA                     l2176:
  2124                           
  2125                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  2126   0011BA  5037               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2127   0011BC  6ED9               	movwf	fsr2l,c
  2128   0011BE  6ADA               	clrf	fsr2h,c
  2129   0011C0  30DF               	rrcf	223,w,c
  2130   0011C2  32E8               	rrcf	wreg,f,c
  2131   0011C4  32E8               	rrcf	wreg,f,c
  2132   0011C6  0B07               	andlw	7
  2133   0011C8  6E39               	movwf	??_gpio_pin_write_logic^0,c
  2134   0011CA  0E01               	movlw	1
  2135   0011CC  6E3A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2136   0011CE  2A39               	incf	??_gpio_pin_write_logic^0,f,c
  2137   0011D0  EFEC  F008         	goto	u1244
  2138   0011D4                     u1245:
  2139   0011D4  90D8               	bcf	status,0,c
  2140   0011D6  363A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2141   0011D8                     u1244:
  2142   0011D8  2E39               	decfsz	??_gpio_pin_write_logic^0,f,c
  2143   0011DA  EFEA  F008         	goto	u1245
  2144   0011DE  5037               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2145   0011E0  6ED9               	movwf	fsr2l,c
  2146   0011E2  6ADA               	clrf	fsr2h,c
  2147   0011E4  50DF               	movf	223,w,c
  2148   0011E6  0B07               	andlw	7
  2149   0011E8  0D02               	mullw	2
  2150   0011EA  50F3               	movf	243,w,c
  2151   0011EC  0F0B               	addlw	low _lat_registers
  2152   0011EE  6ED9               	movwf	fsr2l,c
  2153   0011F0  6ADA               	clrf	fsr2h,c
  2154   0011F2  CFDE F03B          	movff	postinc2,??_gpio_pin_write_logic+2
  2155   0011F6  CFDD F03C          	movff	postdec2,??_gpio_pin_write_logic+3
  2156   0011FA  C03B  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2157   0011FE  C03C  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2158   001202  503A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2159   001204  12DF               	iorwf	indf2,f,c
  2160                           
  2161                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
  2162   001206  EF1A  F009         	goto	l2182
  2163   00120A                     l2180:
  2164   00120A  5038               	movf	gpio_pin_write_logic@logic^0,w,c
  2165   00120C  6E39               	movwf	??_gpio_pin_write_logic^0,c
  2166   00120E  6A3A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2167                           
  2168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2169                           ; Switch size 1, requested type "simple"
  2170                           ; Number of cases is 1, Range of values is 0 to 0
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte            4     3 (average)
  2174                           ;	Chosen strategy is simple_byte
  2175   001210  503A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2176   001212  0A00               	xorlw	0	; case 0
  2177   001214  B4D8               	btfsc	status,2,c
  2178   001216  EF0F  F009         	goto	l2948
  2179   00121A  EFAE  F008         	goto	l2172
  2180   00121E                     l2948:
  2181                           
  2182                           ; Switch size 1, requested type "simple"
  2183                           ; Number of cases is 2, Range of values is 0 to 1
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte            7     4 (average)
  2187                           ;	Chosen strategy is simple_byte
  2188   00121E  5039               	movf	??_gpio_pin_write_logic^0,w,c
  2189   001220  0A00               	xorlw	0	; case 0
  2190   001222  B4D8               	btfsc	status,2,c
  2191   001224  EFB2  F008         	goto	l2174
  2192   001228  0A01               	xorlw	1	; case 1
  2193   00122A  B4D8               	btfsc	status,2,c
  2194   00122C  EFDD  F008         	goto	l2176
  2195   001230  EFAE  F008         	goto	l2172
  2196   001234                     l2182:
  2197                           
  2198                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
  2199   001234  503E               	movf	gpio_pin_write_logic@ret^0,w,c
  2200   001236  0012               	return		;funcret
  2201   001238                     __end_of_gpio_pin_write_logic:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _gpio_pin_direction_init *****************
  2205 ;; Defined at:
  2206 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2209 ;;		 -> lcd2$lcd_data(4), lcd2(6), lcd1$lcd_data(8), lcd1(10), 
  2210 ;;		 -> ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), ecu_dc_motor_initializ@dc_motor_pin_2(1), e
      +cu_dc_motor_initializ@dc_motor_pin_1(1), 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  ret             1    6[COMRAM] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      unsigned char 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2222 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;Total ram usage:        7 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_gpio_pin_Initialization
  2232 ;;		_ecu_button_init
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text15
  2237   001016                     __ptext15:
  2238                           	callstack 0
  2239   001016                     _gpio_pin_direction_init:
  2240                           	callstack 27
  2241   001016                     
  2242                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
  2243   001016  0E01               	movlw	1
  2244   001018  6E3D               	movwf	gpio_pin_direction_init@ret^0,c
  2245                           
  2246                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
  2247   00101A  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2248   00101C  B4D8               	btfsc	status,2,c
  2249   00101E  EF13  F008         	goto	u1261
  2250   001022  EF15  F008         	goto	u1260
  2251   001026                     u1261:
  2252   001026  EF25  F008         	goto	l2206
  2253   00102A                     u1260:
  2254   00102A  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2255   00102C  6ED9               	movwf	fsr2l,c
  2256   00102E  6ADA               	clrf	fsr2h,c
  2257   001030  30DF               	rrcf	223,w,c
  2258   001032  32E8               	rrcf	wreg,f,c
  2259   001034  32E8               	rrcf	wreg,f,c
  2260   001036  0B07               	andlw	7
  2261   001038  6E38               	movwf	??_gpio_pin_direction_init^0,c
  2262   00103A  0E07               	movlw	7
  2263   00103C  6438               	cpfsgt	??_gpio_pin_direction_init^0,c
  2264   00103E  EF23  F008         	goto	u1271
  2265   001042  EF25  F008         	goto	u1270
  2266   001046                     u1271:
  2267   001046  EF7C  F008         	goto	l2214
  2268   00104A                     u1270:
  2269   00104A                     l2206:
  2270                           
  2271                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
  2272   00104A  0E00               	movlw	0
  2273   00104C  6E3D               	movwf	gpio_pin_direction_init@ret^0,c
  2274                           
  2275                           ;MCAL_layer/GPIO/gpio.c: 28:     }
  2276   00104E  EF92  F008         	goto	l2216
  2277   001052                     l2208:
  2278                           
  2279                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  2280   001052  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2281   001054  6ED9               	movwf	fsr2l,c
  2282   001056  6ADA               	clrf	fsr2h,c
  2283   001058  30DF               	rrcf	223,w,c
  2284   00105A  32E8               	rrcf	wreg,f,c
  2285   00105C  32E8               	rrcf	wreg,f,c
  2286   00105E  0B07               	andlw	7
  2287   001060  6E38               	movwf	??_gpio_pin_direction_init^0,c
  2288   001062  0E01               	movlw	1
  2289   001064  6E39               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2290   001066  2A38               	incf	??_gpio_pin_direction_init^0,f,c
  2291   001068  EF38  F008         	goto	u1284
  2292   00106C                     u1285:
  2293   00106C  90D8               	bcf	status,0,c
  2294   00106E  3639               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2295   001070                     u1284:
  2296   001070  2E38               	decfsz	??_gpio_pin_direction_init^0,f,c
  2297   001072  EF36  F008         	goto	u1285
  2298   001076  5039               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2299   001078  0AFF               	xorlw	255
  2300   00107A  6E3A               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2301   00107C  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2302   00107E  6ED9               	movwf	fsr2l,c
  2303   001080  6ADA               	clrf	fsr2h,c
  2304   001082  50DF               	movf	223,w,c
  2305   001084  0B07               	andlw	7
  2306   001086  0D02               	mullw	2
  2307   001088  50F3               	movf	243,w,c
  2308   00108A  0F15               	addlw	low _tris_registers
  2309   00108C  6ED9               	movwf	fsr2l,c
  2310   00108E  6ADA               	clrf	fsr2h,c
  2311   001090  CFDE F03B          	movff	postinc2,??_gpio_pin_direction_init+3
  2312   001094  CFDD F03C          	movff	postdec2,??_gpio_pin_direction_init+4
  2313   001098  C03B  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  2314   00109C  C03C  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  2315   0010A0  503A               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2316   0010A2  16DF               	andwf	indf2,f,c
  2317                           
  2318                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  2319   0010A4  EF92  F008         	goto	l2216
  2320   0010A8                     l2210:
  2321                           
  2322                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  2323   0010A8  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2324   0010AA  6ED9               	movwf	fsr2l,c
  2325   0010AC  6ADA               	clrf	fsr2h,c
  2326   0010AE  30DF               	rrcf	223,w,c
  2327   0010B0  32E8               	rrcf	wreg,f,c
  2328   0010B2  32E8               	rrcf	wreg,f,c
  2329   0010B4  0B07               	andlw	7
  2330   0010B6  6E38               	movwf	??_gpio_pin_direction_init^0,c
  2331   0010B8  0E01               	movlw	1
  2332   0010BA  6E39               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2333   0010BC  2A38               	incf	??_gpio_pin_direction_init^0,f,c
  2334   0010BE  EF63  F008         	goto	u1294
  2335   0010C2                     u1295:
  2336   0010C2  90D8               	bcf	status,0,c
  2337   0010C4  3639               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2338   0010C6                     u1294:
  2339   0010C6  2E38               	decfsz	??_gpio_pin_direction_init^0,f,c
  2340   0010C8  EF61  F008         	goto	u1295
  2341   0010CC  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2342   0010CE  6ED9               	movwf	fsr2l,c
  2343   0010D0  6ADA               	clrf	fsr2h,c
  2344   0010D2  50DF               	movf	223,w,c
  2345   0010D4  0B07               	andlw	7
  2346   0010D6  0D02               	mullw	2
  2347   0010D8  50F3               	movf	243,w,c
  2348   0010DA  0F15               	addlw	low _tris_registers
  2349   0010DC  6ED9               	movwf	fsr2l,c
  2350   0010DE  6ADA               	clrf	fsr2h,c
  2351   0010E0  CFDE F03A          	movff	postinc2,??_gpio_pin_direction_init+2
  2352   0010E4  CFDD F03B          	movff	postdec2,??_gpio_pin_direction_init+3
  2353   0010E8  C03A  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  2354   0010EC  C03B  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  2355   0010F0  5039               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2356   0010F2  12DF               	iorwf	indf2,f,c
  2357                           
  2358                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  2359   0010F4  EF92  F008         	goto	l2216
  2360   0010F8                     l2214:
  2361   0010F8  5037               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2362   0010FA  6ED9               	movwf	fsr2l,c
  2363   0010FC  6ADA               	clrf	fsr2h,c
  2364   0010FE  BCDF               	btfsc	indf2,6,c
  2365   001100  EF84  F008         	goto	u1301
  2366   001104  EF87  F008         	goto	u1300
  2367   001108                     u1301:
  2368   001108  0E01               	movlw	1
  2369   00110A  EF88  F008         	goto	u1306
  2370   00110E                     u1300:
  2371   00110E  0E00               	movlw	0
  2372   001110                     u1306:
  2373                           
  2374                           ; Switch size 1, requested type "simple"
  2375                           ; Number of cases is 2, Range of values is 0 to 1
  2376                           ; switch strategies available:
  2377                           ; Name         Instructions Cycles
  2378                           ; simple_byte            7     4 (average)
  2379                           ;	Chosen strategy is simple_byte
  2380   001110  0A00               	xorlw	0	; case 0
  2381   001112  B4D8               	btfsc	status,2,c
  2382   001114  EF29  F008         	goto	l2208
  2383   001118  0A01               	xorlw	1	; case 1
  2384   00111A  B4D8               	btfsc	status,2,c
  2385   00111C  EF54  F008         	goto	l2210
  2386   001120  EF25  F008         	goto	l2206
  2387   001124                     l2216:
  2388                           
  2389                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  2390   001124  503D               	movf	gpio_pin_direction_init@ret^0,w,c
  2391   001126  0012               	return		;funcret
  2392   001128                     __end_of_gpio_pin_direction_init:
  2393                           	callstack 0
  2394                           
  2395                           	psect	rparam
  2396   000000                     
  2397                           	psect	config
  2398                           
  2399                           ; Padding undefined space
  2400   300000                     	org	3145728
  2401   300000  FF                 	db	255
  2402                           
  2403                           ;Config register CONFIG1H @ 0x300001
  2404                           ;	Oscillator Selection bits
  2405                           ;	OSC = HS, HS oscillator
  2406                           ;	Fail-Safe Clock Monitor Enable bit
  2407                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2408                           ;	Internal/External Oscillator Switchover bit
  2409                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2410   300001                     	org	3145729
  2411   300001  02                 	db	2
  2412                           
  2413                           ;Config register CONFIG2L @ 0x300002
  2414                           ;	Power-up Timer Enable bit
  2415                           ;	PWRT = OFF, PWRT disabled
  2416                           ;	Brown-out Reset Enable bits
  2417                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2418                           ;	Brown Out Reset Voltage bits
  2419                           ;	BORV = 3, Minimum setting
  2420   300002                     	org	3145730
  2421   300002  1F                 	db	31
  2422                           
  2423                           ;Config register CONFIG2H @ 0x300003
  2424                           ;	Watchdog Timer Enable bit
  2425                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2426                           ;	Watchdog Timer Postscale Select bits
  2427                           ;	WDTPS = 32768, 1:32768
  2428   300003                     	org	3145731
  2429   300003  1E                 	db	30
  2430                           
  2431                           ; Padding undefined space
  2432   300004                     	org	3145732
  2433   300004  FF                 	db	255
  2434                           
  2435                           ;Config register CONFIG3H @ 0x300005
  2436                           ;	CCP2 MUX bit
  2437                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2438                           ;	PORTB A/D Enable bit
  2439                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2440                           ;	Low-Power Timer1 Oscillator Enable bit
  2441                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2442                           ;	MCLR Pin Enable bit
  2443                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2444   300005                     	org	3145733
  2445   300005  81                 	db	129
  2446                           
  2447                           ;Config register CONFIG4L @ 0x300006
  2448                           ;	Stack Full/Underflow Reset Enable bit
  2449                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2450                           ;	Single-Supply ICSP Enable bit
  2451                           ;	LVP = OFF, Single-Supply ICSP disabled
  2452                           ;	Extended Instruction Set Enable bit
  2453                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2454                           ;	Background Debugger Enable bit
  2455                           ;	DEBUG = 0x1, unprogrammed default
  2456   300006                     	org	3145734
  2457   300006  81                 	db	129
  2458                           
  2459                           ; Padding undefined space
  2460   300007                     	org	3145735
  2461   300007  FF                 	db	255
  2462                           
  2463                           ;Config register CONFIG5L @ 0x300008
  2464                           ;	Code Protection bit
  2465                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2466                           ;	Code Protection bit
  2467                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2468                           ;	Code Protection bit
  2469                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2470                           ;	Code Protection bit
  2471                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2472   300008                     	org	3145736
  2473   300008  0F                 	db	15
  2474                           
  2475                           ;Config register CONFIG5H @ 0x300009
  2476                           ;	Boot Block Code Protection bit
  2477                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2478                           ;	Data EEPROM Code Protection bit
  2479                           ;	CPD = OFF, Data EEPROM not code-protected
  2480   300009                     	org	3145737
  2481   300009  C0                 	db	192
  2482                           
  2483                           ;Config register CONFIG6L @ 0x30000A
  2484                           ;	Write Protection bit
  2485                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2486                           ;	Write Protection bit
  2487                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2488                           ;	Write Protection bit
  2489                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2490                           ;	Write Protection bit
  2491                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2492   30000A                     	org	3145738
  2493   30000A  0F                 	db	15
  2494                           
  2495                           ;Config register CONFIG6H @ 0x30000B
  2496                           ;	Configuration Register Write Protection bit
  2497                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2498                           ;	Boot Block Write Protection bit
  2499                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2500                           ;	Data EEPROM Write Protection bit
  2501                           ;	WRTD = OFF, Data EEPROM not write-protected
  2502   30000B                     	org	3145739
  2503   30000B  E0                 	db	224
  2504                           
  2505                           ;Config register CONFIG7L @ 0x30000C
  2506                           ;	Table Read Protection bit
  2507                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2508                           ;	Table Read Protection bit
  2509                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2510                           ;	Table Read Protection bit
  2511                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2512                           ;	Table Read Protection bit
  2513                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2514   30000C                     	org	3145740
  2515   30000C  0F                 	db	15
  2516                           
  2517                           ;Config register CONFIG7H @ 0x30000D
  2518                           ;	Boot Block Table Read Protection bit
  2519                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2520   30000D                     	org	3145741
  2521   30000D  40                 	db	64
  2522                           tosu	equ	0xFFF
  2523                           tosh	equ	0xFFE
  2524                           tosl	equ	0xFFD
  2525                           stkptr	equ	0xFFC
  2526                           pclatu	equ	0xFFB
  2527                           pclath	equ	0xFFA
  2528                           pcl	equ	0xFF9
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           prodh	equ	0xFF4
  2534                           prodl	equ	0xFF3
  2535                           indf0	equ	0xFEF
  2536                           postinc0	equ	0xFEE
  2537                           postdec0	equ	0xFED
  2538                           preinc0	equ	0xFEC
  2539                           plusw0	equ	0xFEB
  2540                           fsr0h	equ	0xFEA
  2541                           fsr0l	equ	0xFE9
  2542                           wreg	equ	0xFE8
  2543                           indf1	equ	0xFE7
  2544                           postinc1	equ	0xFE6
  2545                           postdec1	equ	0xFE5
  2546                           preinc1	equ	0xFE4
  2547                           plusw1	equ	0xFE3
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           bsr	equ	0xFE0
  2551                           indf2	equ	0xFDF
  2552                           postinc2	equ	0xFDE
  2553                           postdec2	equ	0xFDD
  2554                           preinc2	equ	0xFDC
  2555                           plusw2	equ	0xFDB
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        54
    BSS         16
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33     104
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> lcd1(COMRAM[10]), lcd1$lcd_data(COMRAM[8]), lcd2(COMRAM[6]), lcd2$lcd_data(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> lcd1(COMRAM[10]), lcd1$lcd_data(COMRAM[8]), lcd2(COMRAM[6]), lcd2$lcd_data(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), lcd1(COMRAM[10]), lcd1$lcd_data(COMRAM[8]), 
		 -> lcd2(COMRAM[6]), lcd2$lcd_data(COMRAM[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_init@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_8bit_init@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_custom_char@_char	PTR const unsigned char  size(1) Largest target is 8
		 -> customChar(COMRAM[8]), 

    lcd_8bit_send_custom_char@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_data_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_send_4bit_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_send_8bit_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1348$buffer	PTR unsigned char  size(2) Largest target is 0

    S1348$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_custom_char
    _lcd_8bit_send_custom_char->_lcd_8bit_send_data_pos
    _lcd_8bit_send_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_data->_lcd_send_8bit_enable_signal
    _application_initializ->_lcd_4bit_init
    _lcd_8bit_init->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bit_enable_signal
    _lcd_send_8bit_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_init->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_send_4bit_enable_signal->_gpio_pin_write_logic
    _gpio_pin_Initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   86767
              _application_initializ
          _lcd_8bit_send_custom_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char                            7     2      5   45003
                                             26 COMRAM     7     2      5
              _lcd_8bit_send_command
                 _lcd_8bit_send_data
             _lcd_8bit_send_data_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_data_pos                               5     1      4   22760
                                             21 COMRAM     5     1      4
                 _lcd_8bit_send_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  4     1      3   12349
                                             17 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_data                                   7     5      2    9949
                                             10 COMRAM     7     5      2
               _gpio_pin_write_logic
        _lcd_send_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0   41764
                      _lcd_4bit_init
                      _lcd_8bit_init
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_init                                        5     4      1   18205
                                             17 COMRAM     5     4      1
            _gpio_pin_Initialization
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                7     5      2   11621
                                             10 COMRAM     7     5      2
               _gpio_pin_write_logic
        _lcd_send_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_send_8bit_enable_signal                          2     1      1    4679
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_init                                        5     4      1   23559
                                             18 COMRAM     5     4      1
            _gpio_pin_Initialization
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   16975
                                             15 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_send_4bit_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       7     5      2    5224
                                              8 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit_enable_signal                          3     2      1    4831
                                              8 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    6118
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                 8     6      2    4435
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ
     _lcd_4bit_init
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_send_4bit_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_init
       _gpio_pin_Initialization
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_send_8bit_enable_signal
           _gpio_pin_write_logic
   _lcd_8bit_send_custom_char
     _lcd_8bit_send_command
     _lcd_8bit_send_data
       _gpio_pin_write_logic
       _lcd_send_8bit_enable_signal
     _lcd_8bit_send_data_pos
       _lcd_8bit_send_data
       _lcd_8bit_set_cursor
         _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     21      68       1       81.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68      39        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 25 08:25:13 2024

         __end_of_lcd_8bit_send_data 154A                      ?_lcd_send_4bits 003F  
                                l142 141E                                  l231 1548  
                                l224 15CC                                  l217 132A  
                                l147 1764                                  l236 17E4  
                                l413 1126                                  l270 181C  
                                l503 18A8                                  l432 1236  
                                l504 18A8                                  l193 163C  
                                l265 16AA                                  l282 14C4  
                                l453 1708                                  l509 18C4  
                                l198 17A8                     lcd_4bit_init@lcd 0049  
                   lcd_4bit_init@ret 004D                                  _ret 0068  
__end_of_lcd_send_4bit_enable_signal 17AA          _lcd_send_4bit_enable_signal 1766  
                                wreg 0FE8          __end_of_lcd_8bit_set_cursor 14C6  
                               l2210 10A8                                 l2202 1016  
                               l2204 102A                                 l2220 15CE  
                               l2300 14C6                                 l2214 10F8  
                               l2206 104A                                 l2230 15EE  
                               l2222 15DE                                 l2302 14D6  
                               l2208 1052                                 l2216 1124  
                               l2240 1766                                 l2232 161A  
                               l2224 15E6                                 l2312 14F2  
                               l2320 1546                                 l2304 14DE  
                               l2170 113C                                 l2250 17A6  
                               l2242 1776                                 l2234 161E  
                               l2410 1250                                 l2314 151C  
                               l2306 14EA                                 l2330 1432  
                               l2180 120A                                 l2172 115C  
                               l2244 177E                                 l2236 163A  
                               l2260 156E                                 l2420 1278  
                               l2412 1264                                 l2316 1520  
                               l2340 148A                                 l2332 143A  
                               l2324 1420                                 l2174 1164  
                               l2182 1234                                 l2246 178A  
                               l2350 132C                                 l2190 17E6  
                               l2270 15A4                                 l2254 154A  
                               l2430 12CC                                 l2422 127C  
                               l2406 1238                                 l2318 153C  
                               l2334 144E                                 l2326 1420  
                               l2176 11BA                                 l2168 1128  
                               l2280 16BC                                 l2248 1798  
                               l2352 133C                                 l2192 17F6  
                               l2272 15C0                                 l2256 155A  
                               l2440 1302                                 l2432 12D2  
                               l2424 1298                                 l2408 1248  
                               l2336 1462                                 l2344 149C  
                               l2328 1422                                 l2282 16DC  
                               l2290 170A                                 l2370 139A  
                               l2362 1360                                 l2354 1344  
                               l2194 17FE                                 l2266 1576  
                               l2274 15CA                                 l2258 1562  
                               l2442 130E                                 l2434 12DE  
                               l2426 12A6                                 l2418 126C  
                               l2338 1476                                 l2346 14C2  
                               l2450 17AA                                 l2284 16E4  
                               l2292 171A                                 l2380 13DE  
                               l2372 13A6                                 l2364 136C  
                               l2356 1358                                 l2196 180A  
                               l2268 15A0                                 l2444 131A  
                               l2436 12EA                                 l2428 12B2  
                               l2452 17BA                                 l2286 1706  
                               l2278 16AC                                 l2294 1722  
                               l2382 13EA                                 l2374 13C0  
                               l2366 1370                                 l2390 141C  
                               l2198 181A                                 l2438 12F6  
                               l2446 1328                                 l2454 17C2  
                               l2296 1762                                 l2384 13F6  
                               l2376 13C6                                 l2368 138C  
                               l2456 17E2                                 l2472 163E  
                               l2386 1402                                 l2378 13D2  
                               l2490 1692                                 l2474 164E  
                               l2388 140E                                 l2484 166C  
                               l2492 16A8                                 l2476 1656  
                               l2486 1680                                 l2478 1668  
                               l2496 18B0                                 l2488 1682  
                               l2942 188A              ??_application_initializ 004E  
                               l2948 121E                                 STR_1 1011  
                               u1210 113C                                 u1211 1138  
                               u1300 110E                                 u1220 115C  
                               u1301 1108                                 u1221 1158  
                               u1310 15DE                                 u1311 15DA  
                               u1400 171A                                 u1401 1716  
                               u1306 1110                                 u1234 1182  
                               u1330 163A                                 u1250 17F6  
                               u1410 14D6                                 u1235 117E  
                               u1331 1636                                 u1251 17F2  
                               u2107 129E                                 u1411 14D2  
                               u1260 102A                                 u1244 11D8  
                               u1340 1776                                 u1324 1608  
                               u1500 17BA                                 u1261 1026  
                               u1245 11D4                                 u1341 1772  
                               u1325 1604                                 u2117 12B8  
                               u1501 17B6                                 _LATA 0F89  
                               u1270 104A                                 u1350 155A  
                               u1430 153C                                 _LATB 0F8A  
                               u1271 1046                                 u1351 1556  
                               u2127 12CE                                 u1431 1538  
                               _LATC 0F8B                                 u1424 150C  
                               u1440 1432                                 u1520 164E  
                               _LATD 0F8C                                 u2137 1392  
                               u1425 1508                                 u1441 142E  
                               u1521 164A                                 _LATE 0F8D  
                               u1450 133C                                 u1370 15C0  
                               u1530 1692                                 u2147 13AC  
                               u1451 1338                                 u1371 15BC  
                               u1531 168E                                 u1284 1070  
                               u1380 16BC                                 u1460 138C  
                               u1364 1590                                 u1285 106C  
                               u1381 16B8                                 u2157 13C2  
                               u1461 1388                                 u1365 158C  
                               u1294 10C6                                 u1390 16DC  
                               u1295 10C2                                 u1391 16D8  
                               u2167 1790                                 u1480 1248  
                               u1481 1244                                 u1490 1298  
                               u1491 1294                                 _lcd1 001F  
                               _lcd2 0031                                 _main 188A  
                               fsr2h 0FDA                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
           ?_gpio_pin_direction_init 0037              ?_lcd_8bit_send_data_pos 004C  
                               prodl 0FF3                                 start 0000  
      __end_of_lcd_8bit_send_command 15CE                         ___param_bank 0000  
              _lcd_4bit_send_command 170A                 _gpio_pin_write_logic 1128  
                              ?_main 0037          ecu_dc_motor_initializ@F3064 0067  
        ecu_dc_motor_initializ@F3066 0066                                _PORTA 0F80  
                              _PORTB 0F81                                _PORTC 0F82  
                              _PORTD 0F83                                _PORTE 0F84  
                              _TRISA 0F92                                _TRISB 0F93  
                              _TRISC 0F94                                _TRISD 0F95  
                              _TRISE 0F96          ??_lcd_8bit_send_custom_char 0056  
                              tablat 0FF5       __end_of_lcd_8bit_send_data_pos 17E6  
                              status 0FD8                      __initialization 1854  
                       __end_of_main 18B0                ?_gpio_pin_write_logic 0037  
                ecu_led_toggle@F3076 005C               lcd_8bit_set_cursor@lcd 0048  
             lcd_8bit_set_cursor@ret 004B               lcd_8bit_set_cursor@row 0049  
                      _lat_registers 000B                               ??_main 0058  
            _gpio_pin_Initialization 16AC                        __activetblptr 0002  
          _lcd_8bit_send_custom_char 163E               ?_lcd_4bit_send_command 0046  
              __end_of_lcd_4bit_init 1420                               clear_0 187A  
                             isa$std 0001                __end_of_lcd_8bit_init 132C  
                       __pdataCOMRAM 0001                         __mediumconst 0000  
       ?_lcd_send_8bit_enable_signal 003F                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                         __accesstop 0080              __end_of__initialization 1880  
                     lcd_4bit_init@i 004B                        ___rparam_used 0001  
                   ??_lcd_send_4bits 0041               ??_gpio_pin_write_logic 0039  
                     __pcstackCOMRAM 0037            ??_gpio_pin_Initialization 0040  
           lcd_4bit_send_command@lcd 0046             lcd_4bit_send_command@ret 0048  
                   lcd_8bit_init@lcd 0048                     lcd_8bit_init@ret 004C  
       ecu_dc_motor_move_right@F3071 0065         ecu_dc_motor_move_right@F3073 0064  
                 _lcd_8bit_send_data 14C6        ??_lcd_send_8bit_enable_signal 0040  
                ?_lcd_8bit_send_data 0041        __end_of_application_initializ 18C6  
                         __pnvCOMRAM 0068                       lcd_8bit_init@i 004A  
 gpio_pin_direction_init@_pin_config 0037                 ??_lcd_8bit_send_data 0043  
    __end_of_gpio_pin_Initialization 170A                       _tris_registers 0015  
                            __Hparam 0000                              __Lparam 0000  
              _lcd_8bit_send_command 154A                         __psmallconst 1000  
                            __pcinit 1854                              __ramtop 1000  
                         _customChar 0029                              __ptext0 188A  
                            __ptext1 163E                              __ptext2 17AA  
                            __ptext3 1420                              __ptext4 14C6  
                            __ptext5 18B0                              __ptext6 1238  
                            __ptext7 154A                              __ptext8 17E6  
                            __ptext9 132C   gpio_pin_Initialization@_pin_config 003F  
               end_of_initialization 1880                    lcd_send_4bits@lcd 003F  
                  lcd_send_4bits@ret 0043                        __Lmediumconst 0000  
            ??_lcd_4bit_send_command 0048                              postdec1 0FE5  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc2 0FDE                  lcd_8bit_send_data@i 0046  
  __end_of_lcd_8bit_send_custom_char 16AC     lcd_8bit_send_custom_char@mem_pos 0055  
             ?_lcd_8bit_send_command 0041                ecu_led_turn_off@F3071 005D  
            _gpio_pin_direction_init 1016                        __pidataCOMRAM 181E  
           ecu_relay_initializ@F3061 005B                  start_initialization 1854  
        ecu_dc_motor_move_left@F3080 0062          ecu_dc_motor_move_left@F3078 0063  
       ?_lcd_send_4bit_enable_signal 003F             ??_lcd_8bit_send_data_pos 0050  
           lcd_8bit_set_cursor@colum 004A       lcd_send_8bit_enable_signal@lcd 003F  
     lcd_send_8bit_enable_signal@ret 0040                      lcd_send_4bits@i 0044  
                _lcd_8bit_set_cursor 1420         lcd_4bit_send_command@command 0047  
           lcd_8bit_send_command@lcd 0041             lcd_8bit_send_command@ret 0045  
     lcd_8bit_send_custom_char@_char 0054                          __pbssCOMRAM 0058  
     lcd_8bit_send_custom_char@colum 0053        ??_lcd_send_4bit_enable_signal 0040  
          lcd_8bit_send_data_pos@lcd 004C            lcd_8bit_send_data_pos@ret 0050  
          lcd_8bit_send_data_pos@row 004D                 ?_lcd_8bit_set_cursor 0048  
              _application_initializ 18B0             ?_gpio_pin_Initialization 003F  
          ??_gpio_pin_direction_init 0038      gpio_pin_write_logic@_pin_config 0037  
         lcd_8bit_send_custom_char@i 0057                        _lcd_4bit_init 132C  
          gpio_pin_write_logic@logic 0038                          __smallconst 1000  
__end_of_lcd_send_8bit_enable_signal 181E          _lcd_send_8bit_enable_signal 17E6  
                      _lcd_8bit_init 1238                ??_lcd_8bit_set_cursor 004B  
       lcd_8bit_send_custom_char@lcd 0051         lcd_8bit_send_custom_char@ret 0056  
       lcd_8bit_send_custom_char@row 0052           lcd_send_4bits@data_command 0040  
                     _keypad_sampels 1001                ecu_relay_toggle@F3076 0058  
      __end_of_lcd_4bit_send_command 1766           gpio_pin_Initialization@ret 0041  
                     ?_lcd_4bit_init 0049                 ecu_led_turn_on@F3066 005E  
                     ?_lcd_8bit_init 0048          lcd_8bit_send_data_pos@colum 004E  
    __end_of_gpio_pin_direction_init 1128              gpio_pin_write_logic@ret 003E  
                          copy_data0 1868               __end_of_keypad_sampels 1011  
             ?_application_initializ 0037              ??_lcd_8bit_send_command 0043  
                           __Hrparam 0000                             __Lrparam 0000  
             _lcd_8bit_send_data_pos 17AA           ?_lcd_8bit_send_custom_char 0051  
                           __ptext10 170A                             __ptext11 15CE  
                           __ptext12 1766                             __ptext13 16AC  
                           __ptext14 1128                             __ptext15 1016  
             ecu_dc_motor_stop@F3085 0061               ecu_dc_motor_stop@F3087 0060  
                    ??_lcd_4bit_init 004A              ecu_relay_turn_off@F3071 0059  
                           isa$xinst 0000               lcd_8bit_send_data@data 0042  
         lcd_8bit_send_data_pos@data 004F                       _lcd_send_4bits 15CE  
             ecu_led_initializ@F3061 005F                      ??_lcd_8bit_init 0049  
             lcd_8bit_send_command@i 0046         __end_of_gpio_pin_write_logic 1238  
     lcd_send_4bit_enable_signal@lcd 003F               ecu_relay_turn_on@F3066 005A  
     lcd_send_4bit_enable_signal@ret 0041                lcd_8bit_send_data@lcd 0041  
              lcd_8bit_send_data@ret 0045               __end_of_lcd_send_4bits 163E  
                     _port_registers 0001           gpio_pin_direction_init@ret 003D  
       lcd_8bit_send_command@command 0042  
