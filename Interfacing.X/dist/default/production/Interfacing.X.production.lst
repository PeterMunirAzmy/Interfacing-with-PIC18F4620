

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 12 18:23:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 17/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00137A                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   00137A  80                 	db	128
    64   00137B  0F                 	db	15
    65   00137C  81                 	db	129
    66   00137D  0F                 	db	15
    67   00137E  82                 	db	130
    68   00137F  0F                 	db	15
    69   001380  83                 	db	131
    70   001381  0F                 	db	15
    71   001382  84                 	db	132
    72   001383  0F                 	db	15
    73                           
    74                           ;initializer for _lat_registers
    75   001384  89                 	db	137
    76   001385  0F                 	db	15
    77   001386  8A                 	db	138
    78   001387  0F                 	db	15
    79   001388  8B                 	db	139
    80   001389  0F                 	db	15
    81   00138A  8C                 	db	140
    82   00138B  0F                 	db	15
    83   00138C  8D                 	db	141
    84   00138D  0F                 	db	15
    85                           
    86                           ;initializer for _tris_registers
    87   00138E  92                 	db	146
    88   00138F  0F                 	db	15
    89   001390  93                 	db	147
    90   001391  0F                 	db	15
    91   001392  94                 	db	148
    92   001393  0F                 	db	15
    93   001394  95                 	db	149
    94   001395  0F                 	db	15
    95   001396  96                 	db	150
    96   001397  0F                 	db	15
    97                           
    98                           ;initializer for _seg1
    99   001398  02                 	db	2
   100   001399  0A                 	db	10
   101   00139A  12                 	db	18
   102   00139B  1A                 	db	26
   103                           
   104                           	psect	nvCOMRAM
   105   000040                     __pnvCOMRAM:
   106                           	callstack 0
   107   000040                     _ret:
   108                           	callstack 0
   109   000040                     	ds	1
   110   000000                     _PORTE	set	3972
   111   000000                     _PORTD	set	3971
   112   000000                     _PORTC	set	3970
   113   000000                     _PORTB	set	3969
   114   000000                     _PORTA	set	3968
   115   000000                     _LATA	set	3977
   116   000000                     _TRISA	set	3986
   117   000000                     _TRISE	set	3990
   118   000000                     _TRISD	set	3989
   119   000000                     _TRISC	set	3988
   120   000000                     _TRISB	set	3987
   121   000000                     _LATE	set	3981
   122   000000                     _LATD	set	3980
   123   000000                     _LATC	set	3979
   124   000000                     _LATB	set	3978
   125                           
   126                           ; #config settings
   127                           
   128                           	psect	cinit
   129   001344                     __pcinit:
   130                           	callstack 0
   131   001344                     start_initialization:
   132                           	callstack 0
   133   001344                     __initialization:
   134                           	callstack 0
   135                           
   136                           ; Initialize objects allocated to COMRAM (34 bytes)
   137                           ; load TBLPTR registers with __pidataCOMRAM
   138   001344  0E7A               	movlw	low __pidataCOMRAM
   139   001346  6EF6               	movwf	tblptrl,c
   140   001348  0E13               	movlw	high __pidataCOMRAM
   141   00134A  6EF7               	movwf	tblptrh,c
   142   00134C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   143   00134E  6EF8               	movwf	tblptru,c
   144   001350  EE00  F001         	lfsr	0,__pdataCOMRAM
   145   001354  EE10 F022          	lfsr	1,34
   146   001358                     copy_data0:
   147   001358  0009               	tblrd		*+
   148   00135A  CFF5 FFEE          	movff	tablat,postinc0
   149   00135E  50E5               	movf	postdec1,w,c
   150   001360  50E1               	movf	fsr1l,w,c
   151   001362  E1FA               	bnz	copy_data0
   152                           
   153                           ; Clear objects allocated to COMRAM (16 bytes)
   154   001364  EE00  F023         	lfsr	0,__pbssCOMRAM
   155   001368  0E10               	movlw	16
   156   00136A                     clear_0:
   157   00136A  6AEE               	clrf	postinc0,c
   158   00136C  06E8               	decf	wreg,f,c
   159   00136E  E1FD               	bnz	clear_0
   160   001370                     end_of_initialization:
   161                           	callstack 0
   162   001370                     __end_of__initialization:
   163                           	callstack 0
   164   001370  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   001372  6EF8               	movwf	tblptru,c
   166   001374  0100               	movlb	0
   167   001376  EFCE  F009         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170   000023                     __pbssCOMRAM:
   171                           	callstack 0
   172   000023                     ecu_relay_toggle@F2909:
   173                           	callstack 0
   174   000023                     	ds	1
   175   000024                     ecu_relay_turn_off@F2904:
   176                           	callstack 0
   177   000024                     	ds	1
   178   000025                     ecu_relay_turn_on@F2899:
   179                           	callstack 0
   180   000025                     	ds	1
   181   000026                     ecu_relay_initializ@F2894:
   182                           	callstack 0
   183   000026                     	ds	1
   184   000027                     ecu_led_toggle@F2909:
   185                           	callstack 0
   186   000027                     	ds	1
   187   000028                     ecu_led_turn_off@F2904:
   188                           	callstack 0
   189   000028                     	ds	1
   190   000029                     ecu_led_turn_on@F2899:
   191                           	callstack 0
   192   000029                     	ds	1
   193   00002A                     ecu_led_initializ@F2894:
   194                           	callstack 0
   195   00002A                     	ds	1
   196   00002B                     ecu_dc_motor_stop@F2920:
   197                           	callstack 0
   198   00002B                     	ds	1
   199   00002C                     ecu_dc_motor_stop@F2918:
   200                           	callstack 0
   201   00002C                     	ds	1
   202   00002D                     ecu_dc_motor_move_left@F2913:
   203                           	callstack 0
   204   00002D                     	ds	1
   205   00002E                     ecu_dc_motor_move_left@F2911:
   206                           	callstack 0
   207   00002E                     	ds	1
   208   00002F                     ecu_dc_motor_move_right@F2906:
   209                           	callstack 0
   210   00002F                     	ds	1
   211   000030                     ecu_dc_motor_move_right@F2904:
   212                           	callstack 0
   213   000030                     	ds	1
   214   000031                     ecu_dc_motor_initializ@F2899:
   215                           	callstack 0
   216   000031                     	ds	1
   217   000032                     ecu_dc_motor_initializ@F2897:
   218                           	callstack 0
   219   000032                     	ds	1
   220                           
   221                           	psect	dataCOMRAM
   222   000001                     __pdataCOMRAM:
   223                           	callstack 0
   224   000001                     _port_registers:
   225                           	callstack 0
   226   000001                     	ds	10
   227   00000B                     _lat_registers:
   228                           	callstack 0
   229   00000B                     	ds	10
   230   000015                     _tris_registers:
   231                           	callstack 0
   232   000015                     	ds	10
   233   00001F                     _seg1:
   234                           	callstack 0
   235   00001F                     	ds	4
   236                           
   237                           	psect	cstackCOMRAM
   238   000033                     __pcstackCOMRAM:
   239                           	callstack 0
   240   000033                     gpio_pin_direction_init@_pin_config:
   241                           	callstack 0
   242   000033                     gpio_pin_write_logic@_pin_config:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x0
   246   000033                     	ds	1
   247   000034                     ??_gpio_pin_direction_init:
   248   000034                     gpio_pin_write_logic@logic:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x1
   252   000034                     	ds	1
   253   000035                     ??_gpio_pin_write_logic:
   254                           
   255                           ; 1 bytes @ 0x2
   256   000035                     	ds	4
   257   000039                     gpio_pin_direction_init@ret:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x6
   261   000039                     	ds	1
   262   00003A                     gpio_pin_write_logic@ret:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x7
   266   00003A                     	ds	1
   267   00003B                     gpio_pin_Initialization@_pin_config:
   268                           	callstack 0
   269   00003B                     seg_write_number@_seg_config:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x8
   273   00003B                     	ds	1
   274   00003C                     ??_gpio_pin_Initialization:
   275   00003C                     seg_write_number@number:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x9
   279   00003C                     	ds	1
   280   00003D                     gpio_pin_Initialization@ret:
   281                           	callstack 0
   282   00003D                     seg_write_number@ret:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0xA
   286   00003D                     	ds	1
   287   00003E                     seg_initialization@_seg_config:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0xB
   291   00003E                     	ds	1
   292   00003F                     seg_initialization@ret:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0xC
   296   00003F                     	ds	1
   297   000040                     
   298                           ; 1 bytes @ 0xD
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 20 in file "application.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  2  263[None  ] int 
   311 ;; Registers used:
   312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels required when called: 4
   324 ;; This function calls:
   325 ;;		_application_initializ
   326 ;;		_seg_write_number
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333   00139C                     __ptext0:
   334                           	callstack 0
   335   00139C                     _main:
   336                           	callstack 27
   337   00139C                     
   338                           ;application.c: 22:     application_initializ();
   339   00139C  ECDB  F009         	call	_application_initializ	;wreg free
   340   0013A0                     l264:
   341                           
   342                           ;application.c: 25:     {;application.c: 26:         ret = seg_write_number(&seg1 , 5);
   343   0013A0  0E1F               	movlw	low _seg1
   344   0013A2  6E3B               	movwf	seg_write_number@_seg_config^0,c
   345   0013A4  0E05               	movlw	5
   346   0013A6  6E3C               	movwf	seg_write_number@number^0,c
   347   0013A8  EC12  F009         	call	_seg_write_number	;wreg free
   348   0013AC  6E40               	movwf	_ret^0,c
   349   0013AE  EFD0  F009         	goto	l264
   350   0013B2  EF00  F000         	goto	start
   351   0013B6                     __end_of_main:
   352                           	callstack 0
   353                           
   354 ;; *************** function _seg_write_number *****************
   355 ;; Defined at:
   356 ;;		line 40 in file "ECU_layer/7-seg/7-seg.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;  _seg_config     1    8[COMRAM] PTR const struct .
   359 ;;		 -> seg1(4), 
   360 ;;  number          1    9[COMRAM] unsigned char 
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  ret             1   10[COMRAM] unsigned char 
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      unsigned char 
   365 ;; Registers used:
   366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;Total ram usage:        3 bytes
   377 ;; Hardware stack levels used: 1
   378 ;; Hardware stack levels required when called: 1
   379 ;; This function calls:
   380 ;;		_gpio_pin_write_logic
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text1
   387   001224                     __ptext1:
   388                           	callstack 0
   389   001224                     _seg_write_number:
   390                           	callstack 29
   391   001224                     
   392                           ;ECU_layer/7-seg/7-seg.c: 45:     if ((((void*)0) == _seg_config) || (number > 9))
   393   001224  503B               	movf	seg_write_number@_seg_config^0,w,c
   394   001226  B4D8               	btfsc	status,2,c
   395   001228  EF18  F009         	goto	u801
   396   00122C  EF1A  F009         	goto	u800
   397   001230                     u801:
   398   001230  EF22  F009         	goto	l1486
   399   001234                     u800:
   400   001234  0E09               	movlw	9
   401   001236  643C               	cpfsgt	seg_write_number@number^0,c
   402   001238  EF20  F009         	goto	u811
   403   00123C  EF22  F009         	goto	u810
   404   001240                     u811:
   405   001240  EF26  F009         	goto	l1488
   406   001244                     u810:
   407   001244                     l1486:
   408                           
   409                           ;ECU_layer/7-seg/7-seg.c: 46:     {;ECU_layer/7-seg/7-seg.c: 47:         ret = (STD_Retu
      +                          rnType)0x00;
   410   001244  0E00               	movlw	0
   411   001246  6E3D               	movwf	seg_write_number@ret^0,c
   412                           
   413                           ;ECU_layer/7-seg/7-seg.c: 48:     }
   414   001248  EF4D  F009         	goto	l1490
   415   00124C                     l1488:
   416                           
   417                           ;ECU_layer/7-seg/7-seg.c: 50:     {;ECU_layer/7-seg/7-seg.c: 51:         ret = gpio_pin_
      +                          write_logic(&(_seg_config->_seg_pin[seg_pin0]),(number >> seg_pin0) & (uint8)1);
   418   00124C  C03B  F033         	movff	seg_write_number@_seg_config,gpio_pin_write_logic@_pin_config
   419   001250  503C               	movf	seg_write_number@number^0,w,c
   420   001252  0B01               	andlw	1
   421   001254  6E34               	movwf	gpio_pin_write_logic@logic^0,c
   422   001256  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   423   00125A  6E3D               	movwf	seg_write_number@ret^0,c
   424                           
   425                           ;ECU_layer/7-seg/7-seg.c: 52:         ret = gpio_pin_write_logic(&(_seg_config->_seg_pin
      +                          [seg_pin1]),(number >> seg_pin1) & (uint8)1);
   426   00125C  283B               	incf	seg_write_number@_seg_config^0,w,c
   427   00125E  6E33               	movwf	gpio_pin_write_logic@_pin_config^0,c
   428   001260  90D8               	bcf	status,0,c
   429   001262  303C               	rrcf	seg_write_number@number^0,w,c
   430   001264  0B01               	andlw	1
   431   001266  6E34               	movwf	gpio_pin_write_logic@logic^0,c
   432   001268  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   433   00126C  6E3D               	movwf	seg_write_number@ret^0,c
   434                           
   435                           ;ECU_layer/7-seg/7-seg.c: 53:         ret = gpio_pin_write_logic(&(_seg_config->_seg_pin
      +                          [seg_pin2]),(number >> seg_pin2) & (uint8)1);
   436   00126E  503B               	movf	seg_write_number@_seg_config^0,w,c
   437   001270  0F02               	addlw	2
   438   001272  6E33               	movwf	gpio_pin_write_logic@_pin_config^0,c
   439   001274  403C               	rrncf	seg_write_number@number^0,w,c
   440   001276  42E8               	rrncf	wreg,f,c
   441   001278  0B3F               	andlw	63
   442   00127A  0B01               	andlw	1
   443   00127C  6E34               	movwf	gpio_pin_write_logic@logic^0,c
   444   00127E  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   445   001282  6E3D               	movwf	seg_write_number@ret^0,c
   446                           
   447                           ;ECU_layer/7-seg/7-seg.c: 54:         ret = gpio_pin_write_logic(&(_seg_config->_seg_pin
      +                          [seg_pin3]),(number >> seg_pin3) & (uint8)1);
   448   001284  503B               	movf	seg_write_number@_seg_config^0,w,c
   449   001286  0F03               	addlw	3
   450   001288  6E33               	movwf	gpio_pin_write_logic@_pin_config^0,c
   451   00128A  383C               	swapf	seg_write_number@number^0,w,c
   452   00128C  46E8               	rlncf	wreg,f,c
   453   00128E  0B1F               	andlw	31
   454   001290  0B01               	andlw	1
   455   001292  6E34               	movwf	gpio_pin_write_logic@logic^0,c
   456   001294  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   457   001298  6E3D               	movwf	seg_write_number@ret^0,c
   458   00129A                     l1490:
   459                           
   460                           ;ECU_layer/7-seg/7-seg.c: 56:     return ret;
   461   00129A  503D               	movf	seg_write_number@ret^0,w,c
   462   00129C  0012               	return		;funcret
   463   00129E                     __end_of_seg_write_number:
   464                           	callstack 0
   465                           
   466 ;; *************** function _application_initializ *****************
   467 ;; Defined at:
   468 ;;		line 33 in file "application.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 3
   489 ;; This function calls:
   490 ;;		_seg_initialization
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text2
   497   0013B6                     __ptext2:
   498                           	callstack 0
   499   0013B6                     _application_initializ:
   500                           	callstack 27
   501   0013B6                     
   502                           ;application.c: 35:     ret = seg_initialization(&seg1);
   503   0013B6  0E1F               	movlw	low _seg1
   504   0013B8  6E3E               	movwf	seg_initialization@_seg_config^0,c
   505   0013BA  EC7E  F009         	call	_seg_initialization	;wreg free
   506   0013BE  6E40               	movwf	_ret^0,c
   507   0013C0  0012               	return		;funcret
   508   0013C2                     __end_of_application_initializ:
   509                           	callstack 0
   510                           
   511 ;; *************** function _seg_initialization *****************
   512 ;; Defined at:
   513 ;;		line 15 in file "ECU_layer/7-seg/7-seg.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  _seg_config     1   11[COMRAM] PTR const struct .
   516 ;;		 -> seg1(4), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  ret             1   12[COMRAM] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      unsigned char 
   521 ;; Registers used:
   522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 2
   535 ;; This function calls:
   536 ;;		_gpio_pin_Initialization
   537 ;; This function is called by:
   538 ;;		_application_initializ
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text3
   543   0012FC                     __ptext3:
   544                           	callstack 0
   545   0012FC                     _seg_initialization:
   546                           	callstack 27
   547   0012FC                     
   548                           ;ECU_layer/7-seg/7-seg.c: 20:     if (((void*)0) == _seg_config)
   549   0012FC  503E               	movf	seg_initialization@_seg_config^0,w,c
   550   0012FE  A4D8               	btfss	status,2,c
   551   001300  EF84  F009         	goto	u791
   552   001304  EF86  F009         	goto	u790
   553   001308                     u791:
   554   001308  EF8A  F009         	goto	l1474
   555   00130C                     u790:
   556   00130C                     
   557                           ;ECU_layer/7-seg/7-seg.c: 21:     {;ECU_layer/7-seg/7-seg.c: 22:         ret = (STD_Retu
      +                          rnType)0x00;
   558   00130C  0E00               	movlw	0
   559   00130E  6E3F               	movwf	seg_initialization@ret^0,c
   560                           
   561                           ;ECU_layer/7-seg/7-seg.c: 23:     }
   562   001310  EFA0  F009         	goto	l1476
   563   001314                     l1474:
   564                           
   565                           ;ECU_layer/7-seg/7-seg.c: 25:     {;ECU_layer/7-seg/7-seg.c: 26:         ret = gpio_pin_
      +                          Initialization(&(_seg_config->_seg_pin[seg_pin0]));
   566   001314  C03E  F03B         	movff	seg_initialization@_seg_config,gpio_pin_Initialization@_pin_config
   567   001318  EC4F  F009         	call	_gpio_pin_Initialization	;wreg free
   568   00131C  6E3F               	movwf	seg_initialization@ret^0,c
   569                           
   570                           ;ECU_layer/7-seg/7-seg.c: 27:         ret = gpio_pin_Initialization(&(_seg_config->_seg_
      +                          pin[seg_pin1]));
   571   00131E  283E               	incf	seg_initialization@_seg_config^0,w,c
   572   001320  6E3B               	movwf	gpio_pin_Initialization@_pin_config^0,c
   573   001322  EC4F  F009         	call	_gpio_pin_Initialization	;wreg free
   574   001326  6E3F               	movwf	seg_initialization@ret^0,c
   575                           
   576                           ;ECU_layer/7-seg/7-seg.c: 28:         ret = gpio_pin_Initialization(&(_seg_config->_seg_
      +                          pin[seg_pin2]));
   577   001328  503E               	movf	seg_initialization@_seg_config^0,w,c
   578   00132A  0F02               	addlw	2
   579   00132C  6E3B               	movwf	gpio_pin_Initialization@_pin_config^0,c
   580   00132E  EC4F  F009         	call	_gpio_pin_Initialization	;wreg free
   581   001332  6E3F               	movwf	seg_initialization@ret^0,c
   582                           
   583                           ;ECU_layer/7-seg/7-seg.c: 29:         ret = gpio_pin_Initialization(&(_seg_config->_seg_
      +                          pin[seg_pin3]));
   584   001334  503E               	movf	seg_initialization@_seg_config^0,w,c
   585   001336  0F03               	addlw	3
   586   001338  6E3B               	movwf	gpio_pin_Initialization@_pin_config^0,c
   587   00133A  EC4F  F009         	call	_gpio_pin_Initialization	;wreg free
   588   00133E  6E3F               	movwf	seg_initialization@ret^0,c
   589   001340                     l1476:
   590                           
   591                           ;ECU_layer/7-seg/7-seg.c: 31:     return ret;
   592   001340  503F               	movf	seg_initialization@ret^0,w,c
   593   001342  0012               	return		;funcret
   594   001344                     __end_of_seg_initialization:
   595                           	callstack 0
   596                           
   597 ;; *************** function _gpio_pin_Initialization *****************
   598 ;; Defined at:
   599 ;;		line 148 in file "MCAL_layer/GPIO/gpio.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   602 ;;		 -> seg1$_seg_pin(4), seg1(4), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), 
   603 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  ret             1   10[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      unsigned char 
   608 ;; Registers used:
   609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   615 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;Total ram usage:        3 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 1
   622 ;; This function calls:
   623 ;;		_gpio_pin_direction_init
   624 ;;		_gpio_pin_write_logic
   625 ;; This function is called by:
   626 ;;		_seg_initialization
   627 ;;		_ecu_dc_motor_initializ
   628 ;;		_ecu_led_initializ
   629 ;;		_ecu_relay_initializ
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text4
   634   00129E                     __ptext4:
   635                           	callstack 0
   636   00129E                     _gpio_pin_Initialization:
   637                           	callstack 27
   638   00129E                     
   639                           ;MCAL_layer/GPIO/gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1)
   640   00129E  503B               	movf	gpio_pin_Initialization@_pin_config^0,w,c
   641   0012A0  B4D8               	btfsc	status,2,c
   642   0012A2  EF55  F009         	goto	u771
   643   0012A6  EF57  F009         	goto	u770
   644   0012AA                     u771:
   645   0012AA  EF67  F009         	goto	l1462
   646   0012AE                     u770:
   647   0012AE  503B               	movf	gpio_pin_Initialization@_pin_config^0,w,c
   648   0012B0  6ED9               	movwf	fsr2l,c
   649   0012B2  6ADA               	clrf	fsr2h,c
   650   0012B4  30DF               	rrcf	223,w,c
   651   0012B6  32E8               	rrcf	wreg,f,c
   652   0012B8  32E8               	rrcf	wreg,f,c
   653   0012BA  0B07               	andlw	7
   654   0012BC  6E3C               	movwf	??_gpio_pin_Initialization^0,c
   655   0012BE  0E07               	movlw	7
   656   0012C0  643C               	cpfsgt	??_gpio_pin_Initialization^0,c
   657   0012C2  EF65  F009         	goto	u781
   658   0012C6  EF67  F009         	goto	u780
   659   0012CA                     u781:
   660   0012CA  EF6B  F009         	goto	l1464
   661   0012CE                     u780:
   662   0012CE                     l1462:
   663                           
   664                           ;MCAL_layer/GPIO/gpio.c: 152:     {;MCAL_layer/GPIO/gpio.c: 153:         ret = (STD_Retu
      +                          rnType)0x00;
   665   0012CE  0E00               	movlw	0
   666   0012D0  6E3D               	movwf	gpio_pin_Initialization@ret^0,c
   667                           
   668                           ;MCAL_layer/GPIO/gpio.c: 154:     }
   669   0012D2  EF7C  F009         	goto	l1466
   670   0012D6                     l1464:
   671                           
   672                           ;MCAL_layer/GPIO/gpio.c: 156:     {;MCAL_layer/GPIO/gpio.c: 157:         ret = gpio_pin_
      +                          direction_init(_pin_config);
   673   0012D6  C03B  F033         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_direction_init@_pin_config
   674   0012DA  EC01  F008         	call	_gpio_pin_direction_init	;wreg free
   675   0012DE  6E3D               	movwf	gpio_pin_Initialization@ret^0,c
   676                           
   677                           ;MCAL_layer/GPIO/gpio.c: 158:         ret = gpio_pin_write_logic(_pin_config , _pin_conf
      +                          ig->logic);
   678   0012E0  C03B  F033         	movff	gpio_pin_Initialization@_pin_config,gpio_pin_write_logic@_pin_config
   679   0012E4  503B               	movf	gpio_pin_Initialization@_pin_config^0,w,c
   680   0012E6  6ED9               	movwf	fsr2l,c
   681   0012E8  6ADA               	clrf	fsr2h,c
   682   0012EA  0E00               	movlw	0
   683   0012EC  BEDF               	btfsc	indf2,7,c
   684   0012EE  0E01               	movlw	1
   685   0012F0  6E34               	movwf	gpio_pin_write_logic@logic^0,c
   686   0012F2  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   687   0012F6  6E3D               	movwf	gpio_pin_Initialization@ret^0,c
   688   0012F8                     l1466:
   689                           
   690                           ;MCAL_layer/GPIO/gpio.c: 161:     return ret;
   691   0012F8  503D               	movf	gpio_pin_Initialization@ret^0,w,c
   692   0012FA  0012               	return		;funcret
   693   0012FC                     __end_of_gpio_pin_Initialization:
   694                           	callstack 0
   695                           
   696 ;; *************** function _gpio_pin_write_logic *****************
   697 ;; Defined at:
   698 ;;		line 76 in file "MCAL_layer/GPIO/gpio.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   701 ;;		 -> seg1$_seg_pin(4), seg1(4), ecu_relay_turn_off@relay_init(1), ecu_relay_turn_on@relay_init(1), 
   702 ;;		 -> ecu_relay_initializ@relay_init(1), ecu_led_turn_off@_pin_config(1), ecu_led_turn_on@_pin_config(1), ecu_led_init
      +ializ@_pin_config(1), 
   703 ;;		 -> ecu_dc_motor_stop@dc_motor_pin_2(1), ecu_dc_motor_stop@dc_motor_pin_1(1), ecu_dc_motor_move_left@dc_motor_pin_2(
      +1), ecu_dc_motor_move_left@dc_motor_pin_1(1), 
   704 ;;		 -> ecu_dc_motor_move_right@dc_motor_pin_2(1), ecu_dc_motor_move_right@dc_motor_pin_1(1), ecu_dc_motor_initializ@dc_
      +motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
   705 ;;  logic           1    1[COMRAM] enum E2814
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  ret             1    7[COMRAM] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      unsigned char 
   710 ;; Registers used:
   711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;Total ram usage:        8 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_gpio_pin_Initialization
   727 ;;		_seg_write_number
   728 ;;		_ecu_dc_motor_move_right
   729 ;;		_ecu_dc_motor_move_left
   730 ;;		_ecu_dc_motor_stop
   731 ;;		_ecu_led_turn_on
   732 ;;		_ecu_led_turn_off
   733 ;;		_ecu_relay_turn_on
   734 ;;		_ecu_relay_turn_off
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text5
   739   001114                     __ptext5:
   740                           	callstack 0
   741   001114                     _gpio_pin_write_logic:
   742                           	callstack 29
   743   001114                     
   744                           ;MCAL_layer/GPIO/gpio.c: 76: STD_ReturnType gpio_pin_write_logic(const pin_config *_pin_
      +                          config, logic_t logic);MCAL_layer/GPIO/gpio.c: 77: {;MCAL_layer/GPIO/gpio.c: 78:     STD
      +                          _ReturnType ret = (STD_ReturnType)0x01;
   745   001114  0E01               	movlw	1
   746   001116  6E3A               	movwf	gpio_pin_write_logic@ret^0,c
   747                           
   748                           ;MCAL_layer/GPIO/gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
   749   001118  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   750   00111A  B4D8               	btfsc	status,2,c
   751   00111C  EF92  F008         	goto	u731
   752   001120  EF94  F008         	goto	u730
   753   001124                     u731:
   754   001124  EFA4  F008         	goto	l1440
   755   001128                     u730:
   756   001128  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   757   00112A  6ED9               	movwf	fsr2l,c
   758   00112C  6ADA               	clrf	fsr2h,c
   759   00112E  30DF               	rrcf	223,w,c
   760   001130  32E8               	rrcf	wreg,f,c
   761   001132  32E8               	rrcf	wreg,f,c
   762   001134  0B07               	andlw	7
   763   001136  6E35               	movwf	??_gpio_pin_write_logic^0,c
   764   001138  0E07               	movlw	7
   765   00113A  6435               	cpfsgt	??_gpio_pin_write_logic^0,c
   766   00113C  EFA2  F008         	goto	u741
   767   001140  EFA4  F008         	goto	u740
   768   001144                     u741:
   769   001144  EFFB  F008         	goto	l1448
   770   001148                     u740:
   771   001148                     l1440:
   772                           
   773                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         ret = (STD_Return
      +                          Type)0x00;
   774   001148  0E00               	movlw	0
   775   00114A  6E3A               	movwf	gpio_pin_write_logic@ret^0,c
   776                           
   777                           ;MCAL_layer/GPIO/gpio.c: 82:     }
   778   00114C  EF10  F009         	goto	l1450
   779   001150                     l1442:
   780                           
   781                           ;MCAL_layer/GPIO/gpio.c: 88:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
   782   001150  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   783   001152  6ED9               	movwf	fsr2l,c
   784   001154  6ADA               	clrf	fsr2h,c
   785   001156  30DF               	rrcf	223,w,c
   786   001158  32E8               	rrcf	wreg,f,c
   787   00115A  32E8               	rrcf	wreg,f,c
   788   00115C  0B07               	andlw	7
   789   00115E  6E35               	movwf	??_gpio_pin_write_logic^0,c
   790   001160  0E01               	movlw	1
   791   001162  6E36               	movwf	(??_gpio_pin_write_logic+1)^0,c
   792   001164  2A35               	incf	??_gpio_pin_write_logic^0,f,c
   793   001166  EFB7  F008         	goto	u754
   794   00116A                     u755:
   795   00116A  90D8               	bcf	status,0,c
   796   00116C  3636               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   797   00116E                     u754:
   798   00116E  2E35               	decfsz	??_gpio_pin_write_logic^0,f,c
   799   001170  EFB5  F008         	goto	u755
   800   001174  5036               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   801   001176  0AFF               	xorlw	255
   802   001178  6E37               	movwf	(??_gpio_pin_write_logic+2)^0,c
   803   00117A  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   804   00117C  6ED9               	movwf	fsr2l,c
   805   00117E  6ADA               	clrf	fsr2h,c
   806   001180  50DF               	movf	223,w,c
   807   001182  0B07               	andlw	7
   808   001184  0D02               	mullw	2
   809   001186  50F3               	movf	243,w,c
   810   001188  0F0B               	addlw	low _lat_registers
   811   00118A  6ED9               	movwf	fsr2l,c
   812   00118C  6ADA               	clrf	fsr2h,c
   813   00118E  CFDE F038          	movff	postinc2,??_gpio_pin_write_logic+3
   814   001192  CFDD F039          	movff	postdec2,??_gpio_pin_write_logic+4
   815   001196  C038  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   816   00119A  C039  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   817   00119E  5037               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   818   0011A0  16DF               	andwf	indf2,f,c
   819                           
   820                           ;MCAL_layer/GPIO/gpio.c: 89:                 break;
   821   0011A2  EF10  F009         	goto	l1450
   822   0011A6                     l1444:
   823                           
   824                           ;MCAL_layer/GPIO/gpio.c: 91:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
   825   0011A6  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   826   0011A8  6ED9               	movwf	fsr2l,c
   827   0011AA  6ADA               	clrf	fsr2h,c
   828   0011AC  30DF               	rrcf	223,w,c
   829   0011AE  32E8               	rrcf	wreg,f,c
   830   0011B0  32E8               	rrcf	wreg,f,c
   831   0011B2  0B07               	andlw	7
   832   0011B4  6E35               	movwf	??_gpio_pin_write_logic^0,c
   833   0011B6  0E01               	movlw	1
   834   0011B8  6E36               	movwf	(??_gpio_pin_write_logic+1)^0,c
   835   0011BA  2A35               	incf	??_gpio_pin_write_logic^0,f,c
   836   0011BC  EFE2  F008         	goto	u764
   837   0011C0                     u765:
   838   0011C0  90D8               	bcf	status,0,c
   839   0011C2  3636               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   840   0011C4                     u764:
   841   0011C4  2E35               	decfsz	??_gpio_pin_write_logic^0,f,c
   842   0011C6  EFE0  F008         	goto	u765
   843   0011CA  5033               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   844   0011CC  6ED9               	movwf	fsr2l,c
   845   0011CE  6ADA               	clrf	fsr2h,c
   846   0011D0  50DF               	movf	223,w,c
   847   0011D2  0B07               	andlw	7
   848   0011D4  0D02               	mullw	2
   849   0011D6  50F3               	movf	243,w,c
   850   0011D8  0F0B               	addlw	low _lat_registers
   851   0011DA  6ED9               	movwf	fsr2l,c
   852   0011DC  6ADA               	clrf	fsr2h,c
   853   0011DE  CFDE F037          	movff	postinc2,??_gpio_pin_write_logic+2
   854   0011E2  CFDD F038          	movff	postdec2,??_gpio_pin_write_logic+3
   855   0011E6  C037  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   856   0011EA  C038  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   857   0011EE  5036               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   858   0011F0  12DF               	iorwf	indf2,f,c
   859                           
   860                           ;MCAL_layer/GPIO/gpio.c: 92:                 break;
   861   0011F2  EF10  F009         	goto	l1450
   862   0011F6                     l1448:
   863   0011F6  5034               	movf	gpio_pin_write_logic@logic^0,w,c
   864   0011F8  6E35               	movwf	??_gpio_pin_write_logic^0,c
   865   0011FA  6A36               	clrf	(??_gpio_pin_write_logic+1)^0,c
   866                           
   867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 1, Range of values is 0 to 0
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            4     3 (average)
   873                           ;	Chosen strategy is simple_byte
   874   0011FC  5036               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   875   0011FE  0A00               	xorlw	0	; case 0
   876   001200  B4D8               	btfsc	status,2,c
   877   001202  EF05  F009         	goto	l1718
   878   001206  EFA4  F008         	goto	l1440
   879   00120A                     l1718:
   880                           
   881                           ; Switch size 1, requested type "simple"
   882                           ; Number of cases is 2, Range of values is 0 to 1
   883                           ; switch strategies available:
   884                           ; Name         Instructions Cycles
   885                           ; simple_byte            7     4 (average)
   886                           ;	Chosen strategy is simple_byte
   887   00120A  5035               	movf	??_gpio_pin_write_logic^0,w,c
   888   00120C  0A00               	xorlw	0	; case 0
   889   00120E  B4D8               	btfsc	status,2,c
   890   001210  EFA8  F008         	goto	l1442
   891   001214  0A01               	xorlw	1	; case 1
   892   001216  B4D8               	btfsc	status,2,c
   893   001218  EFD3  F008         	goto	l1444
   894   00121C  EFA4  F008         	goto	l1440
   895   001220                     l1450:
   896                           
   897                           ;MCAL_layer/GPIO/gpio.c: 98:     return ret;
   898   001220  503A               	movf	gpio_pin_write_logic@ret^0,w,c
   899   001222  0012               	return		;funcret
   900   001224                     __end_of_gpio_pin_write_logic:
   901                           	callstack 0
   902                           
   903 ;; *************** function _gpio_pin_direction_init *****************
   904 ;; Defined at:
   905 ;;		line 21 in file "MCAL_layer/GPIO/gpio.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   908 ;;		 -> seg1$_seg_pin(4), seg1(4), ecu_relay_initializ@relay_init(1), ecu_led_initializ@_pin_config(1), 
   909 ;;		 -> ecu_dc_motor_initializ@dc_motor_pin_2(1), ecu_dc_motor_initializ@dc_motor_pin_1(1), 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  ret             1    6[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      unsigned char 
   914 ;; Registers used:
   915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   921 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;Total ram usage:        7 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_gpio_pin_Initialization
   931 ;;		_ecu_button_init
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text6
   936   001002                     __ptext6:
   937                           	callstack 0
   938   001002                     _gpio_pin_direction_init:
   939                           	callstack 27
   940   001002                     
   941                           ;MCAL_layer/GPIO/gpio.c: 21: STD_ReturnType gpio_pin_direction_init(const pin_config *_p
      +                          in_config);MCAL_layer/GPIO/gpio.c: 22: {;MCAL_layer/GPIO/gpio.c: 23:     STD_ReturnType 
      +                          ret = (STD_ReturnType)0x01;
   942   001002  0E01               	movlw	1
   943   001004  6E39               	movwf	gpio_pin_direction_init@ret^0,c
   944                           
   945                           ;MCAL_layer/GPIO/gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          )
   946   001006  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
   947   001008  B4D8               	btfsc	status,2,c
   948   00100A  EF09  F008         	goto	u681
   949   00100E  EF0B  F008         	goto	u680
   950   001012                     u681:
   951   001012  EF1B  F008         	goto	l1422
   952   001016                     u680:
   953   001016  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
   954   001018  6ED9               	movwf	fsr2l,c
   955   00101A  6ADA               	clrf	fsr2h,c
   956   00101C  30DF               	rrcf	223,w,c
   957   00101E  32E8               	rrcf	wreg,f,c
   958   001020  32E8               	rrcf	wreg,f,c
   959   001022  0B07               	andlw	7
   960   001024  6E34               	movwf	??_gpio_pin_direction_init^0,c
   961   001026  0E07               	movlw	7
   962   001028  6434               	cpfsgt	??_gpio_pin_direction_init^0,c
   963   00102A  EF19  F008         	goto	u691
   964   00102E  EF1B  F008         	goto	u690
   965   001032                     u691:
   966   001032  EF72  F008         	goto	l1430
   967   001036                     u690:
   968   001036                     l1422:
   969                           
   970                           ;MCAL_layer/GPIO/gpio.c: 26:     {;MCAL_layer/GPIO/gpio.c: 27:         ret = (STD_Return
      +                          Type)0x00;
   971   001036  0E00               	movlw	0
   972   001038  6E39               	movwf	gpio_pin_direction_init@ret^0,c
   973                           
   974                           ;MCAL_layer/GPIO/gpio.c: 28:     }
   975   00103A  EF88  F008         	goto	l1432
   976   00103E                     l1424:
   977                           
   978                           ;MCAL_layer/GPIO/gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
   979   00103E  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
   980   001040  6ED9               	movwf	fsr2l,c
   981   001042  6ADA               	clrf	fsr2h,c
   982   001044  30DF               	rrcf	223,w,c
   983   001046  32E8               	rrcf	wreg,f,c
   984   001048  32E8               	rrcf	wreg,f,c
   985   00104A  0B07               	andlw	7
   986   00104C  6E34               	movwf	??_gpio_pin_direction_init^0,c
   987   00104E  0E01               	movlw	1
   988   001050  6E35               	movwf	(??_gpio_pin_direction_init+1)^0,c
   989   001052  2A34               	incf	??_gpio_pin_direction_init^0,f,c
   990   001054  EF2E  F008         	goto	u704
   991   001058                     u705:
   992   001058  90D8               	bcf	status,0,c
   993   00105A  3635               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
   994   00105C                     u704:
   995   00105C  2E34               	decfsz	??_gpio_pin_direction_init^0,f,c
   996   00105E  EF2C  F008         	goto	u705
   997   001062  5035               	movf	(??_gpio_pin_direction_init+1)^0,w,c
   998   001064  0AFF               	xorlw	255
   999   001066  6E36               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1000   001068  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1001   00106A  6ED9               	movwf	fsr2l,c
  1002   00106C  6ADA               	clrf	fsr2h,c
  1003   00106E  50DF               	movf	223,w,c
  1004   001070  0B07               	andlw	7
  1005   001072  0D02               	mullw	2
  1006   001074  50F3               	movf	243,w,c
  1007   001076  0F15               	addlw	low _tris_registers
  1008   001078  6ED9               	movwf	fsr2l,c
  1009   00107A  6ADA               	clrf	fsr2h,c
  1010   00107C  CFDE F037          	movff	postinc2,??_gpio_pin_direction_init+3
  1011   001080  CFDD F038          	movff	postdec2,??_gpio_pin_direction_init+4
  1012   001084  C037  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1013   001088  C038  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1014   00108C  5036               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1015   00108E  16DF               	andwf	indf2,f,c
  1016                           
  1017                           ;MCAL_layer/GPIO/gpio.c: 34:                 break;
  1018   001090  EF88  F008         	goto	l1432
  1019   001094                     l1426:
  1020                           
  1021                           ;MCAL_layer/GPIO/gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  1022   001094  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1023   001096  6ED9               	movwf	fsr2l,c
  1024   001098  6ADA               	clrf	fsr2h,c
  1025   00109A  30DF               	rrcf	223,w,c
  1026   00109C  32E8               	rrcf	wreg,f,c
  1027   00109E  32E8               	rrcf	wreg,f,c
  1028   0010A0  0B07               	andlw	7
  1029   0010A2  6E34               	movwf	??_gpio_pin_direction_init^0,c
  1030   0010A4  0E01               	movlw	1
  1031   0010A6  6E35               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1032   0010A8  2A34               	incf	??_gpio_pin_direction_init^0,f,c
  1033   0010AA  EF59  F008         	goto	u714
  1034   0010AE                     u715:
  1035   0010AE  90D8               	bcf	status,0,c
  1036   0010B0  3635               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1037   0010B2                     u714:
  1038   0010B2  2E34               	decfsz	??_gpio_pin_direction_init^0,f,c
  1039   0010B4  EF57  F008         	goto	u715
  1040   0010B8  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1041   0010BA  6ED9               	movwf	fsr2l,c
  1042   0010BC  6ADA               	clrf	fsr2h,c
  1043   0010BE  50DF               	movf	223,w,c
  1044   0010C0  0B07               	andlw	7
  1045   0010C2  0D02               	mullw	2
  1046   0010C4  50F3               	movf	243,w,c
  1047   0010C6  0F15               	addlw	low _tris_registers
  1048   0010C8  6ED9               	movwf	fsr2l,c
  1049   0010CA  6ADA               	clrf	fsr2h,c
  1050   0010CC  CFDE F036          	movff	postinc2,??_gpio_pin_direction_init+2
  1051   0010D0  CFDD F037          	movff	postdec2,??_gpio_pin_direction_init+3
  1052   0010D4  C036  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1053   0010D8  C037  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1054   0010DC  5035               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1055   0010DE  12DF               	iorwf	indf2,f,c
  1056                           
  1057                           ;MCAL_layer/GPIO/gpio.c: 37:                 break;
  1058   0010E0  EF88  F008         	goto	l1432
  1059   0010E4                     l1430:
  1060   0010E4  5033               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1061   0010E6  6ED9               	movwf	fsr2l,c
  1062   0010E8  6ADA               	clrf	fsr2h,c
  1063   0010EA  BCDF               	btfsc	indf2,6,c
  1064   0010EC  EF7A  F008         	goto	u721
  1065   0010F0  EF7D  F008         	goto	u720
  1066   0010F4                     u721:
  1067   0010F4  0E01               	movlw	1
  1068   0010F6  EF7E  F008         	goto	u726
  1069   0010FA                     u720:
  1070   0010FA  0E00               	movlw	0
  1071   0010FC                     u726:
  1072                           
  1073                           ; Switch size 1, requested type "simple"
  1074                           ; Number of cases is 2, Range of values is 0 to 1
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte            7     4 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079   0010FC  0A00               	xorlw	0	; case 0
  1080   0010FE  B4D8               	btfsc	status,2,c
  1081   001100  EF1F  F008         	goto	l1424
  1082   001104  0A01               	xorlw	1	; case 1
  1083   001106  B4D8               	btfsc	status,2,c
  1084   001108  EF4A  F008         	goto	l1426
  1085   00110C  EF1B  F008         	goto	l1422
  1086   001110                     l1432:
  1087                           
  1088                           ;MCAL_layer/GPIO/gpio.c: 42:     return ret;
  1089   001110  5039               	movf	gpio_pin_direction_init@ret^0,w,c
  1090   001112  0012               	return		;funcret
  1091   001114                     __end_of_gpio_pin_direction_init:
  1092                           	callstack 0
  1093                           
  1094                           	psect	smallconst
  1095   001000                     __psmallconst:
  1096                           	callstack 0
  1097   001000  00                 	db	0
  1098   001001  00                 	db	0	; dummy byte at the end
  1099   000000                     
  1100                           	psect	rparam
  1101   000000                     
  1102                           	psect	config
  1103                           
  1104                           ; Padding undefined space
  1105   300000                     	org	3145728
  1106   300000  FF                 	db	255
  1107                           
  1108                           ;Config register CONFIG1H @ 0x300001
  1109                           ;	Oscillator Selection bits
  1110                           ;	OSC = HS, HS oscillator
  1111                           ;	Fail-Safe Clock Monitor Enable bit
  1112                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1113                           ;	Internal/External Oscillator Switchover bit
  1114                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1115   300001                     	org	3145729
  1116   300001  02                 	db	2
  1117                           
  1118                           ;Config register CONFIG2L @ 0x300002
  1119                           ;	Power-up Timer Enable bit
  1120                           ;	PWRT = OFF, PWRT disabled
  1121                           ;	Brown-out Reset Enable bits
  1122                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1123                           ;	Brown Out Reset Voltage bits
  1124                           ;	BORV = 3, Minimum setting
  1125   300002                     	org	3145730
  1126   300002  1F                 	db	31
  1127                           
  1128                           ;Config register CONFIG2H @ 0x300003
  1129                           ;	Watchdog Timer Enable bit
  1130                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1131                           ;	Watchdog Timer Postscale Select bits
  1132                           ;	WDTPS = 32768, 1:32768
  1133   300003                     	org	3145731
  1134   300003  1E                 	db	30
  1135                           
  1136                           ; Padding undefined space
  1137   300004                     	org	3145732
  1138   300004  FF                 	db	255
  1139                           
  1140                           ;Config register CONFIG3H @ 0x300005
  1141                           ;	CCP2 MUX bit
  1142                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1143                           ;	PORTB A/D Enable bit
  1144                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1145                           ;	Low-Power Timer1 Oscillator Enable bit
  1146                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1147                           ;	MCLR Pin Enable bit
  1148                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1149   300005                     	org	3145733
  1150   300005  81                 	db	129
  1151                           
  1152                           ;Config register CONFIG4L @ 0x300006
  1153                           ;	Stack Full/Underflow Reset Enable bit
  1154                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1155                           ;	Single-Supply ICSP Enable bit
  1156                           ;	LVP = OFF, Single-Supply ICSP disabled
  1157                           ;	Extended Instruction Set Enable bit
  1158                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1159                           ;	Background Debugger Enable bit
  1160                           ;	DEBUG = 0x1, unprogrammed default
  1161   300006                     	org	3145734
  1162   300006  81                 	db	129
  1163                           
  1164                           ; Padding undefined space
  1165   300007                     	org	3145735
  1166   300007  FF                 	db	255
  1167                           
  1168                           ;Config register CONFIG5L @ 0x300008
  1169                           ;	Code Protection bit
  1170                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1171                           ;	Code Protection bit
  1172                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1173                           ;	Code Protection bit
  1174                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1175                           ;	Code Protection bit
  1176                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1177   300008                     	org	3145736
  1178   300008  0F                 	db	15
  1179                           
  1180                           ;Config register CONFIG5H @ 0x300009
  1181                           ;	Boot Block Code Protection bit
  1182                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1183                           ;	Data EEPROM Code Protection bit
  1184                           ;	CPD = OFF, Data EEPROM not code-protected
  1185   300009                     	org	3145737
  1186   300009  C0                 	db	192
  1187                           
  1188                           ;Config register CONFIG6L @ 0x30000A
  1189                           ;	Write Protection bit
  1190                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1191                           ;	Write Protection bit
  1192                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1193                           ;	Write Protection bit
  1194                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1195                           ;	Write Protection bit
  1196                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1197   30000A                     	org	3145738
  1198   30000A  0F                 	db	15
  1199                           
  1200                           ;Config register CONFIG6H @ 0x30000B
  1201                           ;	Configuration Register Write Protection bit
  1202                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1203                           ;	Boot Block Write Protection bit
  1204                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1205                           ;	Data EEPROM Write Protection bit
  1206                           ;	WRTD = OFF, Data EEPROM not write-protected
  1207   30000B                     	org	3145739
  1208   30000B  E0                 	db	224
  1209                           
  1210                           ;Config register CONFIG7L @ 0x30000C
  1211                           ;	Table Read Protection bit
  1212                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1213                           ;	Table Read Protection bit
  1214                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1215                           ;	Table Read Protection bit
  1216                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1217                           ;	Table Read Protection bit
  1218                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1219   30000C                     	org	3145740
  1220   30000C  0F                 	db	15
  1221                           
  1222                           ;Config register CONFIG7H @ 0x30000D
  1223                           ;	Boot Block Table Read Protection bit
  1224                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1225   30000D                     	org	3145741
  1226   30000D  40                 	db	64
  1227                           tosu	equ	0xFFF
  1228                           tosh	equ	0xFFE
  1229                           tosl	equ	0xFFD
  1230                           stkptr	equ	0xFFC
  1231                           pclatu	equ	0xFFB
  1232                           pclath	equ	0xFFA
  1233                           pcl	equ	0xFF9
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           prodh	equ	0xFF4
  1239                           prodl	equ	0xFF3
  1240                           indf0	equ	0xFEF
  1241                           postinc0	equ	0xFEE
  1242                           postdec0	equ	0xFED
  1243                           preinc0	equ	0xFEC
  1244                           plusw0	equ	0xFEB
  1245                           fsr0h	equ	0xFEA
  1246                           fsr0l	equ	0xFE9
  1247                           wreg	equ	0xFE8
  1248                           indf1	equ	0xFE7
  1249                           postinc1	equ	0xFE6
  1250                           postdec1	equ	0xFE5
  1251                           preinc1	equ	0xFE4
  1252                           plusw1	equ	0xFE3
  1253                           fsr1h	equ	0xFE2
  1254                           fsr1l	equ	0xFE1
  1255                           bsr	equ	0xFE0
  1256                           indf2	equ	0xFDF
  1257                           postinc2	equ	0xFDE
  1258                           postdec2	equ	0xFDD
  1259                           preinc2	equ	0xFDC
  1260                           plusw2	equ	0xFDB
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         16
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      64
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> seg1(COMRAM[4]), seg1$_seg_pin(COMRAM[4]), 

    gpio_pin_Initialization@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_led_initializ@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> seg1(COMRAM[4]), seg1$_seg_pin(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> ecu_dc_motor_initializ@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_initializ@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_left@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_dc_motor_move_right@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_move_right@dc_motor_pin_2(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_1(COMRAM[1]), ecu_dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> ecu_led_initializ@_pin_config(COMRAM[1]), ecu_led_turn_off@_pin_config(COMRAM[1]), ecu_led_turn_on@_pin_config(COMRAM[1]), ecu_relay_initializ@relay_init(COMRAM[1]), 
		 -> ecu_relay_turn_off@relay_init(COMRAM[1]), ecu_relay_turn_on@relay_init(COMRAM[1]), seg1(COMRAM[4]), seg1$_seg_pin(COMRAM[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    seg_initialization@_seg_config	PTR const struct . size(1) Largest target is 4
		 -> seg1(COMRAM[4]), 

    seg_write_number@_seg_config	PTR const struct . size(1) Largest target is 4
		 -> seg1(COMRAM[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _seg_write_number->_gpio_pin_write_logic
    _application_initializ->_seg_initialization
    _seg_initialization->_gpio_pin_Initialization
    _gpio_pin_Initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6607
              _application_initializ
                   _seg_write_number
 ---------------------------------------------------------------------------------
 (1) _seg_write_number                                     3     1      2    2859
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initializ                                0     0      0    3748
                 _seg_initialization
 ---------------------------------------------------------------------------------
 (2) _seg_initialization                                   2     1      1    3748
                                             11 COMRAM     2     1      1
            _gpio_pin_Initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_Initialization                              3     2      1    3534
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    2459
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initializ
     _seg_initialization
       _gpio_pin_Initialization
         _gpio_pin_direction_init
         _gpio_pin_write_logic
   _seg_write_number
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      40       1       50.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      39        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 12 18:23:40 2024

                               l220 12FA                                 l180 1112  
                               l270 13C0                                 l264 13A0  
                               l286 129C                                 l199 1222  
                               l279 1342                                 u720 10FA  
                               u704 105C                                 u800 1234  
                               u721 10F4                                 u705 1058  
                               u801 1230                                 u714 10B2  
                               u730 1128                                 u810 1244  
                               u715 10AE                                 u731 1124  
                               u811 1240                                 u740 1148  
                               u741 1144                                 u726 10FC  
                               u680 1016                                 u681 1012  
                               u690 1036                                 u754 116E  
                               u770 12AE                                 u691 1032  
                               u755 116A                                 u771 12AA  
                               u764 11C4                                 u780 12CE  
                               u765 11C0                                 u781 12CA  
                               u790 130C                                 u791 1308  
                               _ret 0040                                 wreg 0FE8  
                              l1420 1016                                l1430 10E4  
                              l1422 1036                                l1424 103E  
                              l1432 1110                                l1440 1148  
                              l1426 1094                                l1418 1002  
                              l1442 1150                                l1450 1220  
                              l1444 11A6                                l1436 1114  
                              l1460 12AE                                l1438 1128  
                              l1462 12CE                                l1470 12FC  
                              l1448 11F6                                l1464 12D6  
                              l1472 130C                                l1480 13B6  
                              l1712 139C                                l1466 12F8  
                              l1458 129E                                l1474 1314  
                              l1490 129A                                l1482 1224  
                              l1476 1340                                l1484 1234  
                              l1718 120A                                l1486 1244  
                              l1488 124C             ??_application_initializ 0040  
                              _LATA 0F89                                _LATB 0F8A  
                              _LATC 0F8B                                _LATD 0F8C  
                              _LATE 0F8D                                _seg1 001F  
                              _main 139C                                fsr2h 0FDA  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9            ?_gpio_pin_direction_init 0033  
                              prodl 0FF3                                start 0000  
                      ___param_bank 0000                _gpio_pin_write_logic 1114  
                             ?_main 0033         ecu_dc_motor_initializ@F2897 0032  
       ecu_dc_motor_initializ@F2899 0031                               _PORTA 0F80  
                             _PORTB 0F81                               _PORTC 0F82  
                             _PORTD 0F83                               _PORTE 0F84  
                             _TRISA 0F92                               _TRISB 0F93  
                             _TRISC 0F94                               _TRISD 0F95  
                             _TRISE 0F96                               tablat 0FF5  
                             status 0FD8                     __initialization 1344  
                      __end_of_main 13B6               ?_gpio_pin_write_logic 0033  
               ecu_led_toggle@F2909 0027                       _lat_registers 000B  
                            ??_main 0040             _gpio_pin_Initialization 129E  
                     __activetblptr 0002              seg_write_number@number 003C  
                            clear_0 136A                              isa$std 0001  
                 ?_seg_write_number 003B                        __pdataCOMRAM 0001  
     seg_initialization@_seg_config 003E                  ??_seg_write_number 003D  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                        __accesstop 0080             __end_of__initialization 1370  
                     ___rparam_used 0001              ??_gpio_pin_write_logic 0035  
                    __pcstackCOMRAM 0033           ??_gpio_pin_Initialization 003C  
      ecu_dc_motor_move_right@F2904 0030        ecu_dc_motor_move_right@F2906 002F  
     __end_of_application_initializ 13C2                          __pnvCOMRAM 0040  
gpio_pin_direction_init@_pin_config 0033     __end_of_gpio_pin_Initialization 12FC  
                    _tris_registers 0015                             __Hparam 0000  
                           __Lparam 0000                        __psmallconst 1000  
                           __pcinit 1344                             __ramtop 1000  
                           __ptext0 139C                             __ptext1 1224  
                           __ptext2 13B6                             __ptext3 12FC  
                           __ptext4 129E                             __ptext5 1114  
                           __ptext6 1002  gpio_pin_Initialization@_pin_config 003B  
              end_of_initialization 1370          __end_of_seg_initialization 1344  
                     __Lmediumconst 0000                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc2 0FDE               ecu_led_turn_off@F2904 0028  
           _gpio_pin_direction_init 1002                       __pidataCOMRAM 137A  
          ecu_relay_initializ@F2894 0026                 start_initialization 1344  
       ecu_dc_motor_move_left@F2911 002E         ecu_dc_motor_move_left@F2913 002D  
                       __pbssCOMRAM 0023               _application_initializ 13B6  
          ?_gpio_pin_Initialization 003B           ??_gpio_pin_direction_init 0034  
   gpio_pin_write_logic@_pin_config 0033           gpio_pin_write_logic@logic 0034  
                       __smallconst 1000                    _seg_write_number 1224  
             ecu_relay_toggle@F2909 0023          gpio_pin_Initialization@ret 003D  
                _seg_initialization 12FC                 ?_seg_initialization 003E  
              ecu_led_turn_on@F2899 0029     __end_of_gpio_pin_direction_init 1114  
               seg_write_number@ret 003D             gpio_pin_write_logic@ret 003A  
                         copy_data0 1358              ?_application_initializ 0033  
              ??_seg_initialization 003F                            __Hrparam 0000  
                          __Lrparam 0000              ecu_dc_motor_stop@F2920 002B  
            ecu_dc_motor_stop@F2918 002C             ecu_relay_turn_off@F2904 0024  
                          isa$xinst 0000              ecu_led_initializ@F2894 002A  
      __end_of_gpio_pin_write_logic 1224              ecu_relay_turn_on@F2899 0025  
          __end_of_seg_write_number 129E                      _port_registers 0001  
        gpio_pin_direction_init@ret 0039               seg_initialization@ret 003F  
       seg_write_number@_seg_config 003B  
